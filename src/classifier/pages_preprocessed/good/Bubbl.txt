                      Home   Problems   Submissions   Users   Contests   About >   Status   Runtimes   Tips   API   Github    Login | Register       This site works best with JavaScript enabled.     Bubble Cup V8 E Spectator Riots View as PDF       Submit solution   All submissions   Best submissions    Points: 25   Time limit: 0.5s     Memory limit: 128M      Problem type  Geometry      It’s riot time on football stadium Ramacana! Raging fans have entered the field and the police find themselves in a difficult situation. The field can be represented as a square in the coordinate system defined by two diagonal vertices in    (  0  ,  0  )   (0,0)   and    (   10  5   ,   10  5   )   (10^5, 10^5)   . The sides of that square are also considered to be inside the field, everything else is outside.  In the beginning, there are   N  N   fans on the field. For each fan we are given his speed, an integer    v  i   v_i   as well as his integer coordinates    (   x  i   ,   y  i   )   (x_i, y_i)   . A fan with those coordinates might move and after one second he might be at any point    (   x  i   +  p  ,   y  i   +  q  )   (x_i + p, y_i + q)   where    0  ≤   |   p   |   +   |   q   |   ≤   v  i    0 \le |p|+|q| \le v_i   .    p  ,  q   p, q   are both integers.  Points that go outside of the square that represents the field are excluded and all others have equal probability of being the location of that specific fan after one second.  Andrej, a young and promising police officer, has sent a flying drone to take a photo of the riot from above. The drone’s camera works like this:   It selects three points with integer coordinates such that there is a chance of a fan appearing there after one second. They must not be collinear or the camera won’t work. It is guaranteed that not all of the initial positions of fans will be on the same line.  Camera focuses those points and creates a circle that passes through those three points. A photo is taken after one second (one second after the initial state).  Everything that is on the circle or inside it at the moment of taking the photo (one second after focusing the points) will be on the photo.   Your goal is to select those three points so that the expected number of fans seen on the photo is maximized. If there are more such selections, select those three points that give the circle with largest radius among them. If there are still more suitable selections, any one of them will be accepted.  Input Specification  The first line contains the number of fans on the field,   N  N   . The next   N  N   lines contain three integers:     x  i   ,   y  i   ,   v  i    x_i, y_i, v_i   . They are the   x  x   -coordinate,   y  y   -coordinate and speed of fan   i  i   at the beginning of the one second interval considered in the task.  Output Specification  You need to output the three points that camera needs to select. Print them in three lines, with every line containing the   x  x   -coordinate, then   y  y   -coordinate, separated by a single space. The order of points does not matter.  Constraints      3  ≤  N  ≤   10  5    3 \le N \le 10^5       0  ≤   x  i   ,   y  i   ≤   10  5    0 \le x_i, y_i \le 10^5       0  ≤   v  i   ≤  1000   0 \le v_i \le 1000     Example Input  3
1 1 1
1 1 1
1 2 1  Example Output  2 2
2 1
1 0  Explanation  The circle defined in output will catch all of the fans, no matter how they move during one second.      Comments  There are no comments at the moment.        fork us on Github | like us on Facebook | help us translate | terms of service |    Deutsch (de)  English (en)  français (fr)  Română (ro)  Русский (ru)  srpski (latinica) (sr-latn)  Tiếng Việt (vi)  简体中文 (zh-hans)      
