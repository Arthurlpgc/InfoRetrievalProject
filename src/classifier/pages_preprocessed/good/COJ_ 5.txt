           C  O  J   Thinking better!    Caribbean Online Judge                   Podios del Caribe en los Concursos Regionales / Equipos caribeños en las Finales Mundiales    LATAM Champions at ACM-ICPC Regional Contests / LATAM Champions at ACM-ICPC World Finals    The 2017 ACM-ICPC Caribbean Finals     October 8, 2017
            -
            16:59:37      Home      Downloads      Tools      Forum      FAQ      Links      About      Contact us               Login                    Register       Forgot password?   Terms of service              24 hour archive      Problems  Judgments  Standings   Users   Institutions   Countries      Compare users   Statistics             Real contests      Coming   Running   Previous (587)   Standings  Statistics                 24 hour archive: Problem       Submissions  Best solutions  PDF  Discussion       1024
				- Hangover  1024 - Hangover  1024 - Hangover         Statistics  Sub: 2290 | AC: 1201 | AC%: 52,45  | Score: 0,18    Created by  2001 ACM-ICPC Mid-Central - USA    Added by  ejaltuna (2011-10-13)    Limits    Total Time: 2000 MS 
                                                            
                                                         | Memory: 62 MB  | Output: 64 MB | Size: 30 KB   Total Time: 6000 MS 
                                                            
                                                         | Memory: 3 GB  | Output: 64 MB | Size: 30 KB   Total Time: 4000 MS 
                                                            
                                                         | Memory: 1 GB  | Output: 64 MB | Size: 30 KB   Total Time: 2000 MS 
                                                            
                                                         | Memory: 62 MB  | Output: 64 MB | Size: 30 KB   Total Time: 12000 MS 
                                                            
                                                         | Memory: 125 MB  | Output: 64 MB | Size: 30 KB   Total Time: 6000 MS 
                                                            
                                                         | Memory: 62 MB  | Output: 64 MB | Size: 30 KB   Total Time: 2000 MS 
                                                            
                                                         | Memory: 62 MB  | Output: 64 MB | Size: 30 KB   Total Time: 2000 MS 
                                                            
                                                         | Memory: 62 MB  | Output: 64 MB | Size: 30 KB   Total Time: 12000 MS 
                                                            
                                                         | Memory: 312 MB  | Output: 64 MB | Size: 30 KB   Total Time: 6000 MS 
                                                            
                                                         | Memory: 125 MB  | Output: 64 MB | Size: 30 KB   Total Time: 6000 MS 
                                                            
                                                         | Memory: 62 MB  | Output: 64 MB | Size: 30 KB   Total Time: 6000 MS 
                                                            
                                                         | Memory: 62 MB  | Output: 64 MB | Size: 30 KB   Total Time: 6000 MS 
                                                            
                                                         | Memory: 1 GB  | Output: 64 MB | Size: 30 KB   Total Time: 12000 MS 
                                                            
                                                         | Memory: 937 MB  | Output: 64 MB | Size: 30 KB   Total Time: 6000 MS 
                                                            
                                                         | Memory: 62 MB  | Output: 64 MB | Size: 30 KB   Total Time: 2000 MS 
                                                            
                                                         | Memory: 62 MB  | Output: 64 MB | Size: 30 KB     Enabled languages    C  C#  C++  C++11  Java  JavaScript-NodeJS  Pascal  Perl  PHP  Prolog  Python  Ruby  Text      Available in            Description    How far can you make a stack of cards overhang a table? If you have one card, you can create a maximum overhang of half a card length (We're assuming that the cards must be perpendicular to the table). With two cards you can make the top card overhang the bottom one by half a card length, and the bottom one overhang the table by a third of a card length, for a total maximum overhang of 1/2 + 1/3 = 5/6 card lengths. In general you can make n cards overhang by 1/2 + 1/3 + 1/4 + ... + 1/(n+1) card lengths, where the top card overhangs the second by 1/2 , the second overhangs the third by 1/3 , the third overhangs the fourth by 1/4 , an so on, and the bottom card overhangs the table by 1/(n+1) . This is illustrated in the figure below.     How far can you make a stack of cards overhang a table? If you have one card, you can create a maximum overhang of half a card length (We're assuming that the cards must be perpendicular to the table). With two cards you can make the top card overhang the bottom one by half a card length, and the bottom one overhang the table by a third of a card length, for a total maximum overhang of 1/2 + 1/3 = 5/6 card lengths. In general you can make n cards overhang by 1/2 + 1/3 + 1/4 + ... + 1/(n+1) card lengths, where the top card overhangs the second by 1/2 , the second overhangs the third by 1/3 , the third overhangs the fourth by 1/4 , an so on, and the bottom card overhangs the table by 1/(n+1) . This is illustrated in the figure below.     How far can you make a stack of cards overhang a table? If you have one card, you can create a maximum overhang of half a card length (We're assuming that the cards must be perpendicular to the table). With two cards you can make the top card overhang the bottom one by half a card length, and the bottom one overhang the table by a third of a card length, for a total maximum overhang of 1/2 + 1/3 = 5/6 card lengths. In general you can make n cards overhang by 1/2 + 1/3 + 1/4 + ... + 1/(n+1) card lengths, where the top card overhangs the second by 1/2 , the second overhangs the third by 1/3 , the third overhangs the fourth by 1/4 , an so on, and the bottom card overhangs the table by 1/(n+1) . This is illustrated in the figure below.         Input specification    The input consists of one or more test cases, followed by a line containing the number 0.00 that signals the end of the input. Each test case is a single line containing a positive floating-point number c whose value is at least 0.01 and at most 5.20; c will contain exactly three digits.    The input consists of one or more test cases, followed by a line containing the number 0.00 that signals the end of the input. Each test case is a single line containing a positive floating-point number c whose value is at least 0.01 and at most 5.20; c will contain exactly three digits.    The input consists of one or more test cases, followed by a line containing the number 0.00 that signals the end of the input. Each test case is a single line containing a positive floating-point number c whose value is at least 0.01 and at most 5.20; c will contain exactly three digits.        Output specification    For each test case, output the minimum number of cards necessary to achieve an overhang of at least c card lengths. Use the exact output format shown in the examples.    For each test case, output the minimum number of cards necessary to achieve an overhang of at least c card lengths. Use the exact output format shown in the examples.    The input consists of one or more test cases, followed by a line containing the number 0.00 that signals the end of the input. Each test case is a single line containing a positive floating-point number c whose value is at least 0.01 and at most 5.20; c will contain exactly three digits.        Sample input  1.00 3.71 0.04 5.19 0.00      Sample output  3 card(s) 61 card(s) 1 card(s) 273 card(s)      Hint(s)              Recommendation  We have carefully selected several similar problems: 1000 | 1049 | 1028 | 3599 | 1960 | 3147    Close                       Universidad de las Ciencias Informáticas (UCI)  2010-2016 | COJ v1.0 beta | All rights reserved In case of any question or comment, please contact us .        
