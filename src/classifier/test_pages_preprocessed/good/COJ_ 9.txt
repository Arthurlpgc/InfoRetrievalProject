           C  O  J   Thinking better!    Caribbean Online Judge                   Podios del Caribe en los Concursos Regionales / Equipos caribe√±os en las Finales Mundiales    LATAM Champions at ACM-ICPC Regional Contests / LATAM Champions at ACM-ICPC World Finals    The 2017 ACM-ICPC Caribbean Finals     October 8, 2017
            -
            16:59:12      Home      Downloads      Tools      Forum      FAQ      Links      About      Contact us               Login                    Register       Forgot password?   Terms of service              24 hour archive      Problems  Judgments  Standings   Users   Institutions   Countries      Compare users   Statistics             Real contests      Coming   Running   Previous (587)   Standings  Statistics                 24 hour archive: Problem       Submissions  Best solutions  PDF       1012
				- Milk Measuring  1012 - Milk Measuring  1012 - Milk Measuring         Statistics  Sub: 576 | AC: 86 | AC%: 14,93  | Score: 2,13    Created by  USACO Training Problems    Added by  ejaltuna (2011-10-06)    Limits    Total Time: 20000 MS 
                                                            
                                                                | Test Time: 2000 MS
                                                            
                                                         | Memory: 62 MB  | Output: 64 MB | Size: 30 KB   Total Time: 60000 MS 
                                                            
                                                                | Test Time: 6000 MS
                                                            
                                                         | Memory: 3 GB  | Output: 64 MB | Size: 30 KB   Total Time: 40000 MS 
                                                            
                                                                | Test Time: 4000 MS
                                                            
                                                         | Memory: 1 GB  | Output: 64 MB | Size: 30 KB   Total Time: 20000 MS 
                                                            
                                                                | Test Time: 2000 MS
                                                            
                                                         | Memory: 62 MB  | Output: 64 MB | Size: 30 KB   Total Time: 120000 MS 
                                                            
                                                                | Test Time: 12000 MS
                                                            
                                                         | Memory: 125 MB  | Output: 64 MB | Size: 30 KB   Total Time: 60000 MS 
                                                            
                                                                | Test Time: 6000 MS
                                                            
                                                         | Memory: 62 MB  | Output: 64 MB | Size: 30 KB   Total Time: 20000 MS 
                                                            
                                                                | Test Time: 2000 MS
                                                            
                                                         | Memory: 62 MB  | Output: 64 MB | Size: 30 KB   Total Time: 20000 MS 
                                                            
                                                                | Test Time: 2000 MS
                                                            
                                                         | Memory: 62 MB  | Output: 64 MB | Size: 30 KB   Total Time: 120000 MS 
                                                            
                                                                | Test Time: 12000 MS
                                                            
                                                         | Memory: 312 MB  | Output: 64 MB | Size: 30 KB   Total Time: 60000 MS 
                                                            
                                                                | Test Time: 6000 MS
                                                            
                                                         | Memory: 125 MB  | Output: 64 MB | Size: 30 KB   Total Time: 60000 MS 
                                                            
                                                                | Test Time: 6000 MS
                                                            
                                                         | Memory: 62 MB  | Output: 64 MB | Size: 30 KB   Total Time: 60000 MS 
                                                            
                                                                | Test Time: 6000 MS
                                                            
                                                         | Memory: 62 MB  | Output: 64 MB | Size: 30 KB   Total Time: 60000 MS 
                                                            
                                                                | Test Time: 6000 MS
                                                            
                                                         | Memory: 1 GB  | Output: 64 MB | Size: 30 KB   Total Time: 120000 MS 
                                                            
                                                                | Test Time: 12000 MS
                                                            
                                                         | Memory: 937 MB  | Output: 64 MB | Size: 30 KB     Enabled languages    C  C#  C++  C++11  Java  JavaScript-NodeJS  Pascal  Perl  PHP  Prolog  Python  Ruby  Text      Available in            Description    Farmer John must measure Q (1 <= Q <= 20000) quarts of his finest milk and deliver it in one big bottle to a customer. He fills that bottle with exactly the number of quarts that the customer orders.

Farmer John has always been frugal. He is at the cow hardware store where he must purchase a set of pails with which to measure out Q quarts of milk from his giant milk tank. Since the pails each cost the same amount, your task is to figure out a minimal set of pails Farmer John can purchase in order to fill a bottle with exactly Q quarts of milk. Additionally, since Farmer John has to carry the pails home, given two minimal sets of pails he should choose the "smaller" one as follows: Sort the sets in ascending order. Compare the first pail in each set and choose the set with the smallest pail. If the first pails match, compare the second pails and choose from among those, else continue until the two sets differ. Thus the set {3, 5, 7, 100} should be chosen over {3, 6, 7, 8}.

To measure out milk, Farmer John may completely fill a pail from the tank and pour it into the bottle. He can never remove milk from the bottle or pour milk anywhere except into the bottle. With a one-quart pail, Farmer John would need only one pail to create any number of quarts in a bottle. Other pail combinations are not so convenient.

Determine the optimally small number of pails to purchase, given the guarantee that one and only one solution is possible for all contest input data.    Farmer John must measure Q (1 <= Q <= 20000) quarts of his finest milk and deliver it in one big bottle to a customer. He fills that bottle with exactly the number of quarts that the customer orders.

Farmer John has always been frugal. He is at the cow hardware store where he must purchase a set of pails with which to measure out Q quarts of milk from his giant milk tank. Since the pails each cost the same amount, your task is to figure out a minimal set of pails Farmer John can purchase in order to fill a bottle with exactly Q quarts of milk. Additionally, since Farmer John has to carry the pails home, given two minimal sets of pails he should choose the "smaller" one as follows: Sort the sets in ascending order. Compare the first pail in each set and choose the set with the smallest pail. If the first pails match, compare the second pails and choose from among those, else continue until the two sets differ. Thus the set {3, 5, 7, 100} should be chosen over {3, 6, 7, 8}.

To measure out milk, Farmer John may completely fill a pail from the tank and pour it into the bottle. He can never remove milk from the bottle or pour milk anywhere except into the bottle. With a one-quart pail, Farmer John would need only one pail to create any number of quarts in a bottle. Other pail combinations are not so convenient.

Determine the optimally small number of pails to purchase, given the guarantee that one and only one solution is possible for all contest input data.    Farmer John must measure Q (1 <= Q <= 20000) quarts of his finest milk and deliver it in one big bottle to a customer. He fills that bottle with exactly the number of quarts that the customer orders.

Farmer John has always been frugal. He is at the cow hardware store where he must purchase a set of pails with which to measure out Q quarts of milk from his giant milk tank. Since the pails each cost the same amount, your task is to figure out a minimal set of pails Farmer John can purchase in order to fill a bottle with exactly Q quarts of milk. Additionally, since Farmer John has to carry the pails home, given two minimal sets of pails he should choose the "smaller" one as follows: Sort the sets in ascending order. Compare the first pail in each set and choose the set with the smallest pail. If the first pails match, compare the second pails and choose from among those, else continue until the two sets differ. Thus the set {3, 5, 7, 100} should be chosen over {3, 6, 7, 8}.

To measure out milk, Farmer John may completely fill a pail from the tank and pour it into the bottle. He can never remove milk from the bottle or pour milk anywhere except into the bottle. With a one-quart pail, Farmer John would need only one pail to create any number of quarts in a bottle. Other pail combinations are not so convenient.

Determine the optimally small number of pails to purchase, given the guarantee that one and only one solution is possible for all contest input data.        Input specification    The first line the single integer Q . Line 2 contains a single integer P (1 <= P <= 100) which is the number of pails in the store. Lines 3, ..., P+2 : Each line contains a single integer pail_value (1 <= pail_value <= 10^4) , the number of quarts a pail holds.    The first line the single integer Q . Line 2 contains a single integer P (1 <= P <= 100) which is the number of pails in the store. Lines 3, ..., P+2 : Each line contains a single integer pail_value (1 <= pail_value <= 10^4) , the number of quarts a pail holds.    The first line the single integer Q . Line 2 contains a single integer P (1 <= P <= 100) which is the number of pails in the store. Lines 3, ..., P+2 : Each line contains a single integer pail_value (1 <= pail_value <= 10^4) , the number of quarts a pail holds.        Output specification    The output is a single line of space separated integers that contains the minimum number of pails required to measure out the desired number of quarts, followed by a sorted list (from smallest to largest) of the capacity of each of the required pails.    The output is a single line of space separated integers that contains the minimum number of pails required to measure out the desired number of quarts, followed by a sorted list (from smallest to largest) of the capacity of each of the required pails.    The first line the single integer Q . Line 2 contains a single integer P (1 <= P <= 100) which is the number of pails in the store. Lines 3, ..., P+2 : Each line contains a single integer pail_value (1 <= pail_value <= 10^4) , the number of quarts a pail holds.        Sample input  16 3 3 5 7      Sample output  2 3 5      Hint(s)              Recommendation  We have carefully selected several similar problems: 3675 | 3377 | 1960 | 1001 | 3057 | 2809    Close                       Universidad de las Ciencias Inform√°ticas (UCI)  2010-2016 | COJ v1.0 beta | All rights reserved In case of any question or comment, please contact us .        
