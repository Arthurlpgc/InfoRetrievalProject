{"title": "Short in Average | CodeChef", "time-limit": 5000, "memory-limit": -1, "props": {"Problem code": "  AVGSHORT ", "Input": " \n2", "Output": " \n1.5", "Author": " \n 6", "Tester": " \n 4", "Date Added": " \n 6", "Time Limit": " \n 5 sec ", "Source Limit": " \n 50000 Bytes ", "Languages": " \n ADA", "now is": "  \n Your IP"}, "statement": "There are a lot of problems related to the shortest paths. Nevertheless, there are not much problems, related to the shortest paths  in average . Consider a directed graph  G , consisting of  N  nodes and  M  edges. Consider a walk from the node  A  to the node  B  in this graph. The average length of this walk will be total sum of weight of its' edges divided by number of edges. Every edge counts as many times as it appears in this path. Now, your problem is quite simple. For the given graph and two given nodes, find out the shortest average length of the walk between these nodes. Please note, that the length of the walk need not to be finite, but average walk length will be. The first line of the input contains an integer  T  denoting the number of test cases. The description of  T  test cases follows. The first line of each test case contains a pair of space-separated integers  N  and  M  denoting the number of nodes and the number of edges in the graph. Each of the following  M  lines contains a triple of space-separated integers  X i  Y i  Z i , denoting the arc, connecting the node  X i  to the node  Y i  (but not vice-versa!) having the weight of  Z i . The next line contains a pair of space separated integers  A  and  B , denoting the first and the last node of the path. For each test case, output a single line containing the length of the shortest path  in average . If there is no path at all, output just  -1  on the corresponding line of the output. Example case 1.  The walk 1 -> 2 and 2 -> 3 has average length of 3/2 = 1.5. Any other walks in the graph will have more or equal average length than this.    Fetching successful submissions Program should read from  standard input  and write to  standard output .  After you submit a solution you can see your results by clicking on the  [My Submissions]  tab on the problem page. Below are the possible results: \u00a0 CodeChef was created as a platform to help programmers make it big in the world of algorithms,  computer programming  and  programming contests . At CodeChef we work hard to revive the geek in you by hosting a  programming contest  at the start of the month and another smaller programming challenge in the middle of the month. We also aim to have training sessions and discussions related to  algorithms, binary search , technicalities like  array size  and the likes. Apart from providing a platform for  programming competitions , CodeChef also has various algorithm tutorials and forum discussions to help those who are new to the world of  computer programming .  Try your hand at one of our many practice problems and submit your solution in a language of your choice. Our  programming contest  judge accepts solutions in over 35+ programming languages. Preparing for coding contests were never this much fun! Receive points, and move up through the CodeChef ranks. Use our practice section to better prepare yourself for the multiple  programming challenges  that take place through-out the month on CodeChef.   Here is where you can show off your  computer programming  skills. Take part in our 10 day long monthly  coding contest  and the shorter format Cook-off  coding contest . Put yourself up for recognition and win great prizes. Our  programming contests  have prizes worth up to INR 20,000 (for Indian Community), $700 (for Global Community) and lots more CodeChef goodies up for grabs.  "}