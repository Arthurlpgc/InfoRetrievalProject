{"title": "Orientation of Edges", "time-limit": 3000, "memory-limit": 256, "props": {"separate plans": "    to orient ", "Server time": "  Dec"}, "statement": "G. Orientation of Edges time limit per test 3 seconds memory limit per test 256 megabytes input standard input output standard output Vasya has a graph containing both directed (oriented) and undirected (non-oriented) edges. There can be multiple edges between a pair of vertices. Vasya has picked a vertex  s  from the graph. Now Vasya wants to create two separate plans:    to orient each undirected edge in one of two possible directions to  maximize  number of vertices reachable from vertex  s ;   to orient each undirected edge in one of two possible directions to  minimize  number of vertices reachable from vertex  s .  In each of two plans each undirected edge must become directed. For an edge chosen directions can differ in two plans. Help Vasya find the plans. Input The first line contains three integers  n ,  m  and  s  ( 2\u2009\u2264\u2009 n \u2009\u2264\u20093\u00b710 5 ,  1\u2009\u2264\u2009 m \u2009\u2264\u20093\u00b710 5 ,  1\u2009\u2264\u2009 s \u2009\u2264\u2009 n ) \u2014 number of vertices and edges in the graph, and the vertex Vasya has picked. The following  m  lines contain information about the graph edges. Each line contains three integers  t i ,  u i  and  v i  ( 1\u2009\u2264\u2009 t i \u2009\u2264\u20092 ,  1\u2009\u2264\u2009 u i ,\u2009 v i \u2009\u2264\u2009 n ,  u i \u2009\u2260\u2009 v i ) \u2014 edge type and vertices connected by the edge. If  t i \u2009=\u20091  then the edge is directed and goes from the vertex  u i  to the vertex  v i . If  t i \u2009=\u20092  then the edge is undirected and it connects the vertices  u i  and  v i . It is guaranteed that there is at least one undirected edge in the graph. Output The first two lines should describe the plan which maximizes the number of reachable vertices. The lines three and four should describe the plan which minimizes the number of reachable vertices. A description of each plan should start with a line containing the number of reachable vertices. The second line of a plan should consist of  f  symbols ' + ' and ' - ', where  f  is the number of undirected edges in the initial graph. Print ' + ' as the  j -th symbol of the string if the  j -th undirected edge  ( u ,\u2009 v )  from the input should be oriented from  u  to  v . Print ' - ' to signify the opposite direction (from  v  to  u ). Consider undirected edges to be numbered in the same order they are given in the input. If there are multiple solutions, print any of them. Examples Input 2 2 1 1 1 2 2 2 1 Output 2 - 2 + Input 6 6 3 2 2 6 1 4 5 2 3 4 1 4 1 1 3 1 2 2 3 Output 6 ++- 2 +-+ G. Orientation of Edges time limit per test 3 seconds memory limit per test 256 megabytes input standard input output standard output Vasya has a graph containing both directed (oriented) and undirected (non-oriented) edges. There can be multiple edges between a pair of vertices. Vasya has picked a vertex  s  from the graph. Now Vasya wants to create two separate plans:    to orient each undirected edge in one of two possible directions to  maximize  number of vertices reachable from vertex  s ;   to orient each undirected edge in one of two possible directions to  minimize  number of vertices reachable from vertex  s .  In each of two plans each undirected edge must become directed. For an edge chosen directions can differ in two plans. Help Vasya find the plans. Input The first line contains three integers  n ,  m  and  s  ( 2\u2009\u2264\u2009 n \u2009\u2264\u20093\u00b710 5 ,  1\u2009\u2264\u2009 m \u2009\u2264\u20093\u00b710 5 ,  1\u2009\u2264\u2009 s \u2009\u2264\u2009 n ) \u2014 number of vertices and edges in the graph, and the vertex Vasya has picked. The following  m  lines contain information about the graph edges. Each line contains three integers  t i ,  u i  and  v i  ( 1\u2009\u2264\u2009 t i \u2009\u2264\u20092 ,  1\u2009\u2264\u2009 u i ,\u2009 v i \u2009\u2264\u2009 n ,  u i \u2009\u2260\u2009 v i ) \u2014 edge type and vertices connected by the edge. If  t i \u2009=\u20091  then the edge is directed and goes from the vertex  u i  to the vertex  v i . If  t i \u2009=\u20092  then the edge is undirected and it connects the vertices  u i  and  v i . It is guaranteed that there is at least one undirected edge in the graph. Output The first two lines should describe the plan which maximizes the number of reachable vertices. The lines three and four should describe the plan which minimizes the number of reachable vertices. A description of each plan should start with a line containing the number of reachable vertices. The second line of a plan should consist of  f  symbols ' + ' and ' - ', where  f  is the number of undirected edges in the initial graph. Print ' + ' as the  j -th symbol of the string if the  j -th undirected edge  ( u ,\u2009 v )  from the input should be oriented from  u  to  v . Print ' - ' to signify the opposite direction (from  v  to  u ). Consider undirected edges to be numbered in the same order they are given in the input. If there are multiple solutions, print any of them. Examples Input 2 2 1 1 1 2 2 2 1 Output 2 - 2 + Input 6 6 3 2 2 6 1 4 5 2 3 4 1 4 1 1 3 1 2 2 3 Output 6 ++- 2 +-+ G. Orientation of Edges time limit per test 3 seconds memory limit per test 256 megabytes input standard input output standard output Vasya has a graph containing both directed (oriented) and undirected (non-oriented) edges. There can be multiple edges between a pair of vertices. Vasya has picked a vertex  s  from the graph. Now Vasya wants to create two separate plans:    to orient each undirected edge in one of two possible directions to  maximize  number of vertices reachable from vertex  s ;   to orient each undirected edge in one of two possible directions to  minimize  number of vertices reachable from vertex  s .  In each of two plans each undirected edge must become directed. For an edge chosen directions can differ in two plans. Help Vasya find the plans. Input The first line contains three integers  n ,  m  and  s  ( 2\u2009\u2264\u2009 n \u2009\u2264\u20093\u00b710 5 ,  1\u2009\u2264\u2009 m \u2009\u2264\u20093\u00b710 5 ,  1\u2009\u2264\u2009 s \u2009\u2264\u2009 n ) \u2014 number of vertices and edges in the graph, and the vertex Vasya has picked. The following  m  lines contain information about the graph edges. Each line contains three integers  t i ,  u i  and  v i  ( 1\u2009\u2264\u2009 t i \u2009\u2264\u20092 ,  1\u2009\u2264\u2009 u i ,\u2009 v i \u2009\u2264\u2009 n ,  u i \u2009\u2260\u2009 v i ) \u2014 edge type and vertices connected by the edge. If  t i \u2009=\u20091  then the edge is directed and goes from the vertex  u i  to the vertex  v i . If  t i \u2009=\u20092  then the edge is undirected and it connects the vertices  u i  and  v i . It is guaranteed that there is at least one undirected edge in the graph. Output The first two lines should describe the plan which maximizes the number of reachable vertices. The lines three and four should describe the plan which minimizes the number of reachable vertices. A description of each plan should start with a line containing the number of reachable vertices. The second line of a plan should consist of  f  symbols ' + ' and ' - ', where  f  is the number of undirected edges in the initial graph. Print ' + ' as the  j -th symbol of the string if the  j -th undirected edge  ( u ,\u2009 v )  from the input should be oriented from  u  to  v . Print ' - ' to signify the opposite direction (from  v  to  u ). Consider undirected edges to be numbered in the same order they are given in the input. If there are multiple solutions, print any of them. Examples Input 2 2 1 1 1 2 2 2 1 Output 2 - 2 + Input 6 6 3 2 2 6 1 4 5 2 3 4 1 4 1 1 3 1 2 2 3 Output 6 ++- 2 +-+ G. Orientation of Edges time limit per test 3 seconds memory limit per test 256 megabytes input standard input output standard output Vasya has a graph containing both directed (oriented) and undirected (non-oriented) edges. There can be multiple edges between a pair of vertices. Vasya has picked a vertex  s  from the graph. Now Vasya wants to create two separate plans:    to orient each undirected edge in one of two possible directions to  maximize  number of vertices reachable from vertex  s ;   to orient each undirected edge in one of two possible directions to  minimize  number of vertices reachable from vertex  s .  In each of two plans each undirected edge must become directed. For an edge chosen directions can differ in two plans. Help Vasya find the plans. Input The first line contains three integers  n ,  m  and  s  ( 2\u2009\u2264\u2009 n \u2009\u2264\u20093\u00b710 5 ,  1\u2009\u2264\u2009 m \u2009\u2264\u20093\u00b710 5 ,  1\u2009\u2264\u2009 s \u2009\u2264\u2009 n ) \u2014 number of vertices and edges in the graph, and the vertex Vasya has picked. The following  m  lines contain information about the graph edges. Each line contains three integers  t i ,  u i  and  v i  ( 1\u2009\u2264\u2009 t i \u2009\u2264\u20092 ,  1\u2009\u2264\u2009 u i ,\u2009 v i \u2009\u2264\u2009 n ,  u i \u2009\u2260\u2009 v i ) \u2014 edge type and vertices connected by the edge. If  t i \u2009=\u20091  then the edge is directed and goes from the vertex  u i  to the vertex  v i . If  t i \u2009=\u20092  then the edge is undirected and it connects the vertices  u i  and  v i . It is guaranteed that there is at least one undirected edge in the graph. Output The first two lines should describe the plan which maximizes the number of reachable vertices. The lines three and four should describe the plan which minimizes the number of reachable vertices. A description of each plan should start with a line containing the number of reachable vertices. The second line of a plan should consist of  f  symbols ' + ' and ' - ', where  f  is the number of undirected edges in the initial graph. Print ' + ' as the  j -th symbol of the string if the  j -th undirected edge  ( u ,\u2009 v )  from the input should be oriented from  u  to  v . Print ' - ' to signify the opposite direction (from  v  to  u ). Consider undirected edges to be numbered in the same order they are given in the input. If there are multiple solutions, print any of them. Examples Input 2 2 1 1 1 2 2 2 1 Output 2 - 2 + Input 6 6 3 2 2 6 1 4 5 2 3 4 1 4 1 1 3 1 2 2 3 Output 6 ++- 2 +-+ G. Orientation of Edges time limit per test 3 seconds memory limit per test 256 megabytes input standard input output standard output Vasya has a graph containing both directed (oriented) and undirected (non-oriented) edges. There can be multiple edges between a pair of vertices. Vasya has picked a vertex  s  from the graph. Now Vasya wants to create two separate plans:    to orient each undirected edge in one of two possible directions to  maximize  number of vertices reachable from vertex  s ;   to orient each undirected edge in one of two possible directions to  minimize  number of vertices reachable from vertex  s .  In each of two plans each undirected edge must become directed. For an edge chosen directions can differ in two plans. Help Vasya find the plans. Input The first line contains three integers  n ,  m  and  s  ( 2\u2009\u2264\u2009 n \u2009\u2264\u20093\u00b710 5 ,  1\u2009\u2264\u2009 m \u2009\u2264\u20093\u00b710 5 ,  1\u2009\u2264\u2009 s \u2009\u2264\u2009 n ) \u2014 number of vertices and edges in the graph, and the vertex Vasya has picked. The following  m  lines contain information about the graph edges. Each line contains three integers  t i ,  u i  and  v i  ( 1\u2009\u2264\u2009 t i \u2009\u2264\u20092 ,  1\u2009\u2264\u2009 u i ,\u2009 v i \u2009\u2264\u2009 n ,  u i \u2009\u2260\u2009 v i ) \u2014 edge type and vertices connected by the edge. If  t i \u2009=\u20091  then the edge is directed and goes from the vertex  u i  to the vertex  v i . If  t i \u2009=\u20092  then the edge is undirected and it connects the vertices  u i  and  v i . It is guaranteed that there is at least one undirected edge in the graph. Output The first two lines should describe the plan which maximizes the number of reachable vertices. The lines three and four should describe the plan which minimizes the number of reachable vertices. A description of each plan should start with a line containing the number of reachable vertices. The second line of a plan should consist of  f  symbols ' + ' and ' - ', where  f  is the number of undirected edges in the initial graph. Print ' + ' as the  j -th symbol of the string if the  j -th undirected edge  ( u ,\u2009 v )  from the input should be oriented from  u  to  v . Print ' - ' to signify the opposite direction (from  v  to  u ). Consider undirected edges to be numbered in the same order they are given in the input. If there are multiple solutions, print any of them. Examples Input 2 2 1 1 1 2 2 2 1 Output 2 - 2 + Input 6 6 3 2 2 6 1 4 5 2 3 4 1 4 1 1 3 1 2 2 3 Output 6 ++- 2 +-+ G. Orientation of Edges time limit per test 3 seconds memory limit per test 256 megabytes input standard input output standard output Vasya has a graph containing both directed (oriented) and undirected (non-oriented) edges. There can be multiple edges between a pair of vertices. Vasya has picked a vertex  s  from the graph. Now Vasya wants to create two separate plans:    to orient each undirected edge in one of two possible directions to  maximize  number of vertices reachable from vertex  s ;   to orient each undirected edge in one of two possible directions to  minimize  number of vertices reachable from vertex  s .  In each of two plans each undirected edge must become directed. For an edge chosen directions can differ in two plans. Help Vasya find the plans. Input The first line contains three integers  n ,  m  and  s  ( 2\u2009\u2264\u2009 n \u2009\u2264\u20093\u00b710 5 ,  1\u2009\u2264\u2009 m \u2009\u2264\u20093\u00b710 5 ,  1\u2009\u2264\u2009 s \u2009\u2264\u2009 n ) \u2014 number of vertices and edges in the graph, and the vertex Vasya has picked. The following  m  lines contain information about the graph edges. Each line contains three integers  t i ,  u i  and  v i  ( 1\u2009\u2264\u2009 t i \u2009\u2264\u20092 ,  1\u2009\u2264\u2009 u i ,\u2009 v i \u2009\u2264\u2009 n ,  u i \u2009\u2260\u2009 v i ) \u2014 edge type and vertices connected by the edge. If  t i \u2009=\u20091  then the edge is directed and goes from the vertex  u i  to the vertex  v i . If  t i \u2009=\u20092  then the edge is undirected and it connects the vertices  u i  and  v i . It is guaranteed that there is at least one undirected edge in the graph. Output The first two lines should describe the plan which maximizes the number of reachable vertices. The lines three and four should describe the plan which minimizes the number of reachable vertices. A description of each plan should start with a line containing the number of reachable vertices. The second line of a plan should consist of  f  symbols ' + ' and ' - ', where  f  is the number of undirected edges in the initial graph. Print ' + ' as the  j -th symbol of the string if the  j -th undirected edge  ( u ,\u2009 v )  from the input should be oriented from  u  to  v . Print ' - ' to signify the opposite direction (from  v  to  u ). Consider undirected edges to be numbered in the same order they are given in the input. If there are multiple solutions, print any of them. Examples Input 2 2 1 1 1 2 2 2 1 Output 2 - 2 + Input 6 6 3 2 2 6 1 4 5 2 3 4 1 4 1 1 3 1 2 2 3 Output 6 ++- 2 +-+ G. Orientation of Edges time limit per test 3 seconds memory limit per test 256 megabytes input standard input output standard output Vasya has a graph containing both directed (oriented) and undirected (non-oriented) edges. There can be multiple edges between a pair of vertices. Vasya has picked a vertex  s  from the graph. Now Vasya wants to create two separate plans:    to orient each undirected edge in one of two possible directions to  maximize  number of vertices reachable from vertex  s ;   to orient each undirected edge in one of two possible directions to  minimize  number of vertices reachable from vertex  s .  In each of two plans each undirected edge must become directed. For an edge chosen directions can differ in two plans. Help Vasya find the plans. Input The first line contains three integers  n ,  m  and  s  ( 2\u2009\u2264\u2009 n \u2009\u2264\u20093\u00b710 5 ,  1\u2009\u2264\u2009 m \u2009\u2264\u20093\u00b710 5 ,  1\u2009\u2264\u2009 s \u2009\u2264\u2009 n ) \u2014 number of vertices and edges in the graph, and the vertex Vasya has picked. The following  m  lines contain information about the graph edges. Each line contains three integers  t i ,  u i  and  v i  ( 1\u2009\u2264\u2009 t i \u2009\u2264\u20092 ,  1\u2009\u2264\u2009 u i ,\u2009 v i \u2009\u2264\u2009 n ,  u i \u2009\u2260\u2009 v i ) \u2014 edge type and vertices connected by the edge. If  t i \u2009=\u20091  then the edge is directed and goes from the vertex  u i  to the vertex  v i . If  t i \u2009=\u20092  then the edge is undirected and it connects the vertices  u i  and  v i . It is guaranteed that there is at least one undirected edge in the graph. Output The first two lines should describe the plan which maximizes the number of reachable vertices. The lines three and four should describe the plan which minimizes the number of reachable vertices. A description of each plan should start with a line containing the number of reachable vertices. The second line of a plan should consist of  f  symbols ' + ' and ' - ', where  f  is the number of undirected edges in the initial graph. Print ' + ' as the  j -th symbol of the string if the  j -th undirected edge  ( u ,\u2009 v )  from the input should be oriented from  u  to  v . Print ' - ' to signify the opposite direction (from  v  to  u ). Consider undirected edges to be numbered in the same order they are given in the input. If there are multiple solutions, print any of them. Examples Input 2 2 1 1 1 2 2 2 1 Output 2 - 2 + Input 6 6 3 2 2 6 1 4 5 2 3 4 1 4 1 1 3 1 2 2 3 Output 6 ++- 2 +-+ G. Orientation of Edges time limit per test 3 seconds memory limit per test 256 megabytes input standard input output standard output Vasya has a graph containing both directed (oriented) and undirected (non-oriented) edges. There can be multiple edges between a pair of vertices. Vasya has picked a vertex  s  from the graph. Now Vasya wants to create two separate plans:    to orient each undirected edge in one of two possible directions to  maximize  number of vertices reachable from vertex  s ;   to orient each undirected edge in one of two possible directions to  minimize  number of vertices reachable from vertex  s .  In each of two plans each undirected edge must become directed. For an edge chosen directions can differ in two plans. Help Vasya find the plans. Input The first line contains three integers  n ,  m  and  s  ( 2\u2009\u2264\u2009 n \u2009\u2264\u20093\u00b710 5 ,  1\u2009\u2264\u2009 m \u2009\u2264\u20093\u00b710 5 ,  1\u2009\u2264\u2009 s \u2009\u2264\u2009 n ) \u2014 number of vertices and edges in the graph, and the vertex Vasya has picked. The following  m  lines contain information about the graph edges. Each line contains three integers  t i ,  u i  and  v i  ( 1\u2009\u2264\u2009 t i \u2009\u2264\u20092 ,  1\u2009\u2264\u2009 u i ,\u2009 v i \u2009\u2264\u2009 n ,  u i \u2009\u2260\u2009 v i ) \u2014 edge type and vertices connected by the edge. If  t i \u2009=\u20091  then the edge is directed and goes from the vertex  u i  to the vertex  v i . If  t i \u2009=\u20092  then the edge is undirected and it connects the vertices  u i  and  v i . It is guaranteed that there is at least one undirected edge in the graph. Output The first two lines should describe the plan which maximizes the number of reachable vertices. The lines three and four should describe the plan which minimizes the number of reachable vertices. A description of each plan should start with a line containing the number of reachable vertices. The second line of a plan should consist of  f  symbols ' + ' and ' - ', where  f  is the number of undirected edges in the initial graph. Print ' + ' as the  j -th symbol of the string if the  j -th undirected edge  ( u ,\u2009 v )  from the input should be oriented from  u  to  v . Print ' - ' to signify the opposite direction (from  v  to  u ). Consider undirected edges to be numbered in the same order they are given in the input. If there are multiple solutions, print any of them. Examples Input 2 2 1 1 1 2 2 2 1 Output 2 - 2 + Input 6 6 3 2 2 6 1 4 5 2 3 4 1 4 1 1 3 1 2 2 3 Output 6 ++- 2 +-+ G. Orientation of Edges time limit per test 3 seconds memory limit per test 256 megabytes input standard input output standard output Vasya has a graph containing both directed (oriented) and undirected (non-oriented) edges. There can be multiple edges between a pair of vertices. Vasya has picked a vertex  s  from the graph. Now Vasya wants to create two separate plans:    to orient each undirected edge in one of two possible directions to  maximize  number of vertices reachable from vertex  s ;   to orient each undirected edge in one of two possible directions to  minimize  number of vertices reachable from vertex  s .  In each of two plans each undirected edge must become directed. For an edge chosen directions can differ in two plans. Help Vasya find the plans. Input The first line contains three integers  n ,  m  and  s  ( 2\u2009\u2264\u2009 n \u2009\u2264\u20093\u00b710 5 ,  1\u2009\u2264\u2009 m \u2009\u2264\u20093\u00b710 5 ,  1\u2009\u2264\u2009 s \u2009\u2264\u2009 n ) \u2014 number of vertices and edges in the graph, and the vertex Vasya has picked. The following  m  lines contain information about the graph edges. Each line contains three integers  t i ,  u i  and  v i  ( 1\u2009\u2264\u2009 t i \u2009\u2264\u20092 ,  1\u2009\u2264\u2009 u i ,\u2009 v i \u2009\u2264\u2009 n ,  u i \u2009\u2260\u2009 v i ) \u2014 edge type and vertices connected by the edge. If  t i \u2009=\u20091  then the edge is directed and goes from the vertex  u i  to the vertex  v i . If  t i \u2009=\u20092  then the edge is undirected and it connects the vertices  u i  and  v i . It is guaranteed that there is at least one undirected edge in the graph. Output The first two lines should describe the plan which maximizes the number of reachable vertices. The lines three and four should describe the plan which minimizes the number of reachable vertices. A description of each plan should start with a line containing the number of reachable vertices. The second line of a plan should consist of  f  symbols ' + ' and ' - ', where  f  is the number of undirected edges in the initial graph. Print ' + ' as the  j -th symbol of the string if the  j -th undirected edge  ( u ,\u2009 v )  from the input should be oriented from  u  to  v . Print ' - ' to signify the opposite direction (from  v  to  u ). Consider undirected edges to be numbered in the same order they are given in the input. If there are multiple solutions, print any of them. Examples Input 2 2 1 1 1 2 2 2 1 Output 2 - 2 + Input 6 6 3 2 2 6 1 4 5 2 3 4 1 4 1 1 3 1 2 2 3 Output 6 ++- 2 +-+ G. Orientation of Edges time limit per test 3 seconds memory limit per test 256 megabytes input standard input output standard output Vasya has a graph containing both directed (oriented) and undirected (non-oriented) edges. There can be multiple edges between a pair of vertices. Vasya has picked a vertex  s  from the graph. Now Vasya wants to create two separate plans:    to orient each undirected edge in one of two possible directions to  maximize  number of vertices reachable from vertex  s ;   to orient each undirected edge in one of two possible directions to  minimize  number of vertices reachable from vertex  s .  In each of two plans each undirected edge must become directed. For an edge chosen directions can differ in two plans. Help Vasya find the plans. Input The first line contains three integers  n ,  m  and  s  ( 2\u2009\u2264\u2009 n \u2009\u2264\u20093\u00b710 5 ,  1\u2009\u2264\u2009 m \u2009\u2264\u20093\u00b710 5 ,  1\u2009\u2264\u2009 s \u2009\u2264\u2009 n ) \u2014 number of vertices and edges in the graph, and the vertex Vasya has picked. The following  m  lines contain information about the graph edges. Each line contains three integers  t i ,  u i  and  v i  ( 1\u2009\u2264\u2009 t i \u2009\u2264\u20092 ,  1\u2009\u2264\u2009 u i ,\u2009 v i \u2009\u2264\u2009 n ,  u i \u2009\u2260\u2009 v i ) \u2014 edge type and vertices connected by the edge. If  t i \u2009=\u20091  then the edge is directed and goes from the vertex  u i  to the vertex  v i . If  t i \u2009=\u20092  then the edge is undirected and it connects the vertices  u i  and  v i . It is guaranteed that there is at least one undirected edge in the graph. Output The first two lines should describe the plan which maximizes the number of reachable vertices. The lines three and four should describe the plan which minimizes the number of reachable vertices. A description of each plan should start with a line containing the number of reachable vertices. The second line of a plan should consist of  f  symbols ' + ' and ' - ', where  f  is the number of undirected edges in the initial graph. Print ' + ' as the  j -th symbol of the string if the  j -th undirected edge  ( u ,\u2009 v )  from the input should be oriented from  u  to  v . Print ' - ' to signify the opposite direction (from  v  to  u ). Consider undirected edges to be numbered in the same order they are given in the input. If there are multiple solutions, print any of them. Examples Input 2 2 1 1 1 2 2 2 1 Output 2 - 2 + Input 6 6 3 2 2 6 1 4 5 2 3 4 1 4 1 1 3 1 2 2 3 Output 6 ++- 2 +-+ G. Orientation of Edges time limit per test 3 seconds memory limit per test 256 megabytes input standard input output standard output Vasya has a graph containing both directed (oriented) and undirected (non-oriented) edges. There can be multiple edges between a pair of vertices. Vasya has picked a vertex  s  from the graph. Now Vasya wants to create two separate plans:    to orient each undirected edge in one of two possible directions to  maximize  number of vertices reachable from vertex  s ;   to orient each undirected edge in one of two possible directions to  minimize  number of vertices reachable from vertex  s .  In each of two plans each undirected edge must become directed. For an edge chosen directions can differ in two plans. Help Vasya find the plans. Input The first line contains three integers  n ,  m  and  s  ( 2\u2009\u2264\u2009 n \u2009\u2264\u20093\u00b710 5 ,  1\u2009\u2264\u2009 m \u2009\u2264\u20093\u00b710 5 ,  1\u2009\u2264\u2009 s \u2009\u2264\u2009 n ) \u2014 number of vertices and edges in the graph, and the vertex Vasya has picked. The following  m  lines contain information about the graph edges. Each line contains three integers  t i ,  u i  and  v i  ( 1\u2009\u2264\u2009 t i \u2009\u2264\u20092 ,  1\u2009\u2264\u2009 u i ,\u2009 v i \u2009\u2264\u2009 n ,  u i \u2009\u2260\u2009 v i ) \u2014 edge type and vertices connected by the edge. If  t i \u2009=\u20091  then the edge is directed and goes from the vertex  u i  to the vertex  v i . If  t i \u2009=\u20092  then the edge is undirected and it connects the vertices  u i  and  v i . It is guaranteed that there is at least one undirected edge in the graph. Output The first two lines should describe the plan which maximizes the number of reachable vertices. The lines three and four should describe the plan which minimizes the number of reachable vertices. A description of each plan should start with a line containing the number of reachable vertices. The second line of a plan should consist of  f  symbols ' + ' and ' - ', where  f  is the number of undirected edges in the initial graph. Print ' + ' as the  j -th symbol of the string if the  j -th undirected edge  ( u ,\u2009 v )  from the input should be oriented from  u  to  v . Print ' - ' to signify the opposite direction (from  v  to  u ). Consider undirected edges to be numbered in the same order they are given in the input. If there are multiple solutions, print any of them. Examples Input 2 2 1 1 1 2 2 2 1 Output 2 - 2 + Input 6 6 3 2 2 6 1 4 5 2 3 4 1 4 1 1 3 1 2 2 3 Output 6 ++- 2 +-+"}