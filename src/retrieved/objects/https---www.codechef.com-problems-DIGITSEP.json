{"title": "Digits Cannot Separate | CodeChef", "time-limit": 1000, "memory-limit": -1, "props": {"Problem code": "  DIGITSEP ", "Note": " \n \n \nYou can ", "following format": " \n First line ", "Input": " \n \n2", "Output": " \n2", "possibilities": "\n \n    a. ", "partitions is": "\n 63 ", "Bonus": "  Decode the ", "Author": " \n 3", "Tester": " \n 6", "Date Added": " \n 3", "Time Limit": " \n 1 sec ", "Source Limit": " \n 50000 Bytes ", "Languages": " \n ADA", "now is": "  \n Your IP"}, "statement": "Mr. Wilson was planning to record his new Progressive Rock music album called \" Digits. Cannot. Separate \". Xenny and PowerShell, popular pseudo-number-theoreticists from the Land of Lazarus were called by him to devise a strategy to ensure the success of this new album. Xenny and Powershell took their Piano Lessons and arrived at the Studio in different Trains. Mr. Wilson, creative as usual, had created one single, long music track  S . The track consisted of  N  musical notes. The beauty of each musical note was represented by a decimal digit from  0  to  9 . Mr. Wilson told them that he wanted to create multiple musical tracks out of this long song. Since Xenny and Powershell were more into the number theory part of music, they didn\u2019t know much about their real workings. Mr. Wilson told them that a  separator  could be placed between 2 digits. After placing separators, the digits between 2 separators would be the constituents of this new track and the number formed by joining them together would represent the Quality Value of that track. He also wanted them to make sure that no number formed had greater than  M  digits. Mr. Wilson had  Y  separators with him. He wanted Xenny and PowerShell to use at least  X  of those separators, otherwise he would have to ask them to Drive Home. Xenny and PowerShell knew straight away that they had to put place separators in such a way that the Greatest Common Divisor  (GCD)  of all the Quality Values would eventually determine the success of this new album. Hence, they had to find a strategy to  maximize  the GCD. If you find the  maximum GCD  of all Quality Values that can be obtained after placing the separators, Xenny and PowerShell shall present you with a Porcupine Tree. \n Note: \n \n \nYou can read about GCD  here .\n \n \nGreatest Common Divisor of 0 and 0 is defined as 0.\n \n The first line of input consists of a single integer  T  - the number of testcases. Each test case is of the following format: First line contains a single integer  N  - the length of the long musical track. Second line contains the string of digits  S . Third line contains 3 space-separated integers -  M ,  X  and  Y  - the maximum number of digits in a number, the minimum number of separators to be used and the maximum number of separators to be used. For each testcase, output a single integer on a new line - the maximum GCD possible after placing the separators. Subtask 1: 20 points \n \n 1  \u2264  T  \u2264  10 \n 1  \u2264  N  \u2264  18 \n 1  \u2264  M  \u2264  2 \n 1  \u2264  X  \u2264  Y  \u2264  (N - 1) \n \n Subtask 2: 80 points \n \n 1  \u2264  T  \u2264  10 \n 1  \u2264  N  \u2264  300 \n 1  \u2264  M  \u2264  10 \n 1  \u2264  X  \u2264  Y  \u2264  (N - 1) \n \n For both  Subtask 1 and Subtask 2: \n \n 1  \u2264  X  \u2264  Y  \u2264  (N - 1) \n M * (Y+1)  \u2265  N \n S  may contain leading  0 s. \n \n Test case 1.   Since only  1 separator  can be placed, we can only have 2 possibilities:\n \n    a.  4  |  74 \n \nThe GCD in this case is 2.\n \n    b.  47  |  4 \n \nThe GCD in this case is 1.\n Hence, the maximum GCD is 2. Test case 2. \nOne of the optimal partitions is:\n 63 | 118 | 61 | 109 | 69 | 78 | 109 | 98 | 90 | 53 | 73 | 107 | 116 | 111 \n \n Bonus:  Decode the above partition to unlock a hidden treasure.\n    Fetching successful submissions Program should read from  standard input  and write to  standard output .  After you submit a solution you can see your results by clicking on the  [My Submissions]  tab on the problem page. Below are the possible results: \u00a0 CodeChef was created as a platform to help programmers make it big in the world of algorithms,  computer programming  and  programming contests . At CodeChef we work hard to revive the geek in you by hosting a  programming contest  at the start of the month and another smaller programming challenge in the middle of the month. We also aim to have training sessions and discussions related to  algorithms, binary search , technicalities like  array size  and the likes. Apart from providing a platform for  programming competitions , CodeChef also has various algorithm tutorials and forum discussions to help those who are new to the world of  computer programming .  Try your hand at one of our many practice problems and submit your solution in a language of your choice. Our  programming contest  judge accepts solutions in over 35+ programming languages. Preparing for coding contests were never this much fun! Receive points, and move up through the CodeChef ranks. Use our practice section to better prepare yourself for the multiple  programming challenges  that take place through-out the month on CodeChef.   Here is where you can show off your  computer programming  skills. Take part in our 10 day long monthly  coding contest  and the shorter format Cook-off  coding contest . Put yourself up for recognition and win great prizes. Our  programming contests  have prizes worth up to INR 20,000 (for Indian Community), $700 (for Global Community) and lots more CodeChef goodies up for grabs.  "}