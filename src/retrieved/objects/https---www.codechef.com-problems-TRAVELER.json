{"title": "Chef Travel Routes | CodeChef", "time-limit": 371, "memory-limit": -1, "props": {"Problem code": "  TRAVELER ", "Input": " \n5", "Output": " \n9859", "Author": " \n 6", "Tester": " \n 6", "Date Added": " \n 17", "Time Limit": " \n 0.371951 sec ", "Source Limit": " \n 50000 Bytes ", "Languages": " \n ADA", "now is": "  \n Your IP"}, "statement": "\nChef likes to travel very much. He plans some travel routes and wants to know their lengths. He hired you to make these calculations. But be careful, some of the routes are incorrect. There may be some misspelling in city names or there will be no road between some two consecutive cities in the route. Also note that Chef hates to visit the same city twice during his travel. Even the last city should differ from the first. Two consecutive cities in the route should also be different. So you need to check these conditions for the given routes too. You will be given the list of all cities and all roads between them with their lengths. All roads are one-way. Also you will be given the list of all travel routes that Chef plans. For each route you should check whether it is correct and find its length in this case.\n \nThe first line contains positive integer  N , the number of cities. The second line contains space separated list of  N  strings, city names. All city names are distinct. The third line contains non-negative integer  M , the number of available roads. Each of the next  M  lines describes one road and contains names  C 1  and  C 2  of two cities followed by the positive integer  D , the length of the one-way road that connects  C 1  with  C 2 . It is guaranteed that  C 1  and  C 2  will be correct names of two different cities from the list of  N  cities given in the second line of the input file. For each pair of different cities there is at most one road in each direction and each road will be described exactly once in the input file. Next line contains positive integer  T , the number of travel routes planned by the Chef. Each of the next  T  lines contains positive integer  K  followed by  K  strings, names of cities of the current route. Cities are given in order in which Chef will visit them during his travel. All strings in the input file composed only of lowercase, uppercase letters of the English alphabet and hyphens. Each string is non-empty and has length at most 20. If some line of the input file contains more then one element than consecutive elements of this line are separated by exactly one space. Each line of the input file has no leading or trailing spaces.\n  For each travel route from the input file output a single line containing word  ERROR  if the route is incorrect and its length otherwise. \n1 <= N <= 50 \n \n0 <= M <= N * (N - 1) \n \n1 <= D <= 20000 \n \n1 <= T <= 50 \n \n1 <= K <= 50 \n \n1 <= length of each string <= 20 \n The 2 nd  route is incorrect since there is no road from  New-York  to  Kiev . Note however that inverse road from  Kiev  to  New-York  exists.  \nThe 3 rd  route is incorrect since the first city coincides with the last one.  \nThe 4 th  route is incorrect since there is no city with name  Kyiv  (Probably Chef means  Kiev  but he misspells this word).  \nThe 8 th  route is incorrect since there is no road from  Miami  to  Kiev .  \nThe 9 th  route is incorrect since there is no road from  Donetsk  to   Hollywood .  \nThe 10 th  route is correct. Note that a route composed of exactly one city is always correct provided that city name is written correctly.  \nThe 11 th  route is incorrect since there is no cities with names  Mumbai  and  Deli . (Probably Chef is not so good in geography :))  \nThe 12 th  route is incorrect since city  New-York  is visited twice.  \nFinally the 13 th  route is incorrect since we have equal consecutive cities.    Fetching successful submissions Program should read from  standard input  and write to  standard output .  After you submit a solution you can see your results by clicking on the  [My Submissions]  tab on the problem page. Below are the possible results: \u00a0 CodeChef was created as a platform to help programmers make it big in the world of algorithms,  computer programming  and  programming contests . At CodeChef we work hard to revive the geek in you by hosting a  programming contest  at the start of the month and another smaller programming challenge in the middle of the month. We also aim to have training sessions and discussions related to  algorithms, binary search , technicalities like  array size  and the likes. Apart from providing a platform for  programming competitions , CodeChef also has various algorithm tutorials and forum discussions to help those who are new to the world of  computer programming .  Try your hand at one of our many practice problems and submit your solution in a language of your choice. Our  programming contest  judge accepts solutions in over 35+ programming languages. Preparing for coding contests were never this much fun! Receive points, and move up through the CodeChef ranks. Use our practice section to better prepare yourself for the multiple  programming challenges  that take place through-out the month on CodeChef.   Here is where you can show off your  computer programming  skills. Take part in our 10 day long monthly  coding contest  and the shorter format Cook-off  coding contest . Put yourself up for recognition and win great prizes. Our  programming contests  have prizes worth up to INR 20,000 (for Indian Community), $700 (for Global Community) and lots more CodeChef goodies up for grabs.  "}