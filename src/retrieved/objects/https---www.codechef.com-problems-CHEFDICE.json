{"title": "Chef and Dice | CodeChef", "time-limit": 1000, "memory-limit": -1, "props": {"Problem code": "  CHEFDICE ", "Input": " \n4", "Output": " \n2 1 ", "Author": " \n 7", "Date Added": " \n 13", "Time Limit": " \n 1 sec ", "Source Limit": " \n 50000 Bytes ", "Languages": " \n ADA", "now is": "  \n Your IP"}, "statement": "\n\tChef has a cubic die with 6 faces kept on an infinite plane. Each face has a distinct integer in the range [1,6] written on it, but the exact arrangement of the numbers on the faces of the die is unknown to Chef. Curiosity gets the better of Chef and he wants to find out  o (1),  o (2), ...,  o (6), where  o ( i ) is the number written opposite to the number  i . \n\tChef performs the following  N-1  steps to learn the exact arrangement of the numbers on the die. In the  i -th step, Chef pushes the die in some direction (there are 4 possible directions), and the die rolls 90 o  in this direction. The picture below demonstrates a die and the result that it produced after rolling in each of the 4 directions respectively. For this die, we have  o (1)=4,  o (2)=5,  o (3)=6,  o (4)=1,  o (5)=2,  o (6)=3. \n \n \n\tChef records  N  numbers  A 1 ,  A 2 , ...,  A N , where  A i  is the number written on the top of the die before the  i -th step. However, the information on the direction in which he pushes the die each time are lost. Can you help him determine the arrangement of 1-6? You need to output  o (1),  o (2), ...,  o (6). If there are multiple solutions, output any one of them. \n\tFor each test case, output one line. If a possible solution exists, then output 6 space-separated integers  o (1),  o (2), ...,  o (6); otherwise, output -1. \n 1  \u2264  T ,  N  \u2264  500 \n 1  \u2264  A i  \u2264  6 \n \n\tSubtask #1 (17 points):\n \n N  \u2264  2 \n \n\tSubtask #2 (83 points):\n \n original constraints \n \n Example case 1:  See below. \n \n Example case 2:  You can prove that there's no solution. \n Example case 3:  The solution is not unique.  3 5 1 6 2 4  is another valid solution.    Fetching successful submissions Program should read from  standard input  and write to  standard output .  After you submit a solution you can see your results by clicking on the  [My Submissions]  tab on the problem page. Below are the possible results: \u00a0 CodeChef was created as a platform to help programmers make it big in the world of algorithms,  computer programming  and  programming contests . At CodeChef we work hard to revive the geek in you by hosting a  programming contest  at the start of the month and another smaller programming challenge in the middle of the month. We also aim to have training sessions and discussions related to  algorithms, binary search , technicalities like  array size  and the likes. Apart from providing a platform for  programming competitions , CodeChef also has various algorithm tutorials and forum discussions to help those who are new to the world of  computer programming .  Try your hand at one of our many practice problems and submit your solution in a language of your choice. Our  programming contest  judge accepts solutions in over 35+ programming languages. Preparing for coding contests were never this much fun! Receive points, and move up through the CodeChef ranks. Use our practice section to better prepare yourself for the multiple  programming challenges  that take place through-out the month on CodeChef.   Here is where you can show off your  computer programming  skills. Take part in our 10 day long monthly  coding contest  and the shorter format Cook-off  coding contest . Put yourself up for recognition and win great prizes. Our  programming contests  have prizes worth up to INR 20,000 (for Indian Community), $700 (for Global Community) and lots more CodeChef goodies up for grabs.  "}