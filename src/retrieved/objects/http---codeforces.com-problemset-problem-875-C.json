{"title": "National Property", "time-limit": 1000, "memory-limit": 512, "props": {"conditions hold": "  2", "conditions holds": "      a ", "the following": "     2", "Server time": "  Dec"}, "statement": "C. National Property time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output You all know that the Library of Bookland is the largest library in the world. There are dozens of thousands of books in the library. Some long and uninteresting story was removed... The alphabet of Bookland is so large that its letters are denoted by positive integers. Each letter can be small or large, the large version of a letter  x  is denoted by  x ' . BSCII encoding, which is used everywhere in Bookland, is made in that way so that large letters are presented in the order of the numbers they are denoted by, and small letters are presented in the order of the numbers they are denoted by, but all large letters are  before  all small letters. For example, the following conditions hold:  2\u2009<\u20093 ,  2'\u2009<\u20093' ,  3'\u2009<\u20092 . A word  x 1 ,\u2009 x 2 ,\u2009...,\u2009 x a  is not  lexicographically  greater than  y 1 ,\u2009 y 2 ,\u2009...,\u2009 y b  if one of the two following conditions holds:      a \u2009\u2264\u2009 b  and  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x a \u2009=\u2009 y a , i.e. the first word is the prefix of the second word;   there is a position  1\u2009\u2264\u2009 j \u2009\u2264\u2009 min ( a ,\u2009 b ) , such that  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x j \u2009-\u20091 \u2009=\u2009 y j \u2009-\u20091  and  x j \u2009<\u2009 y j , i.e. at the first position where the words differ the first word has a smaller letter than the second word has.    For example, the word \" 3'   7   5 \" is before the word \" 2   4'   6 \" in lexicographical order. It is said that sequence of words is in lexicographical order if each word is not lexicographically greater than the next word in the sequence. Denis has a sequence of words consisting of small letters only. He wants to change some letters to large (let's call this process a  capitalization ) in such a way that the sequence of words is in lexicographical order. However, he soon realized that for some reason he can't change a single letter in a single word. He only can choose a letter and change all of its occurrences in  all  words to large letters. He can perform this operation any number of times with arbitrary letters of Bookland's alphabet. Help Denis to choose which letters he needs to capitalize (make large) in order to make the sequence of words lexicographically ordered, or determine that it is impossible. Note that some words can be  equal . Input The first line contains two integers  n  and  m  ( 2\u2009\u2264\u2009 n \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 m \u2009\u2264\u2009100\u2009000 )\u00a0\u2014 the number of words and the number of letters in Bookland's alphabet, respectively. The letters of Bookland's alphabet are denoted by integers from  1  to  m . Each of the next  n  lines contains a description of one word in format  l i ,\u2009 s i ,\u20091 ,\u2009 s i ,\u20092 ,\u2009...,\u2009 s i ,\u2009 l i  ( 1\u2009\u2264\u2009 l i \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 s i ,\u2009 j \u2009\u2264\u2009 m ), where  l i  is the length of the word, and  s i ,\u2009 j  is the sequence of letters in the word. The words are given in the order Denis has them in the sequence. It is guaranteed that the total length of all words is not greater than  100\u2009000 . Output In the first line print \" Yes \" (without quotes), if it is possible to capitalize some set of letters in such a way that the sequence of words becomes lexicographically ordered. Otherwise, print \" No \" (without quotes). If the required is possible, in the second line print  k \u00a0\u2014 the number of letters Denis has to capitalize (make large), and in the third line print  k  distinct integers\u00a0\u2014 these letters. Note that you  don't need to minimize  the value  k . You can print the letters in any order. If there are multiple answers, print any of them. Examples Input 4 3 1 2 1 1 3 1 3 2 2 1 1 Output Yes 2 2 3  Input 6 5 2 1 2 2 1 2 3 1 2 3 2 1 5 2 4 4 2 4 4 Output Yes 0 Input 4 3 4 3 2 2 1 3 1 1 3 3 2 3 3 2 3 1 Output No Note In the first example after Denis makes letters  2  and  3  large, the sequence looks like the following:     2'     1     1   3'   2'     1   1   The condition  2'\u2009<\u20091  holds, so the first word is not lexicographically larger than the second word. The second word is the prefix of the third word, so the are in lexicographical order. As the first letters of the third and the fourth words are the same, and  3'\u2009<\u20091 , then the third word is not lexicographically larger than the fourth word. In the second example the words are in lexicographical order from the beginning, so Denis can do nothing. In the third example there is no set of letters such that if Denis capitalizes them, the sequence becomes lexicographically ordered. C. National Property time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output You all know that the Library of Bookland is the largest library in the world. There are dozens of thousands of books in the library. Some long and uninteresting story was removed... The alphabet of Bookland is so large that its letters are denoted by positive integers. Each letter can be small or large, the large version of a letter  x  is denoted by  x ' . BSCII encoding, which is used everywhere in Bookland, is made in that way so that large letters are presented in the order of the numbers they are denoted by, and small letters are presented in the order of the numbers they are denoted by, but all large letters are  before  all small letters. For example, the following conditions hold:  2\u2009<\u20093 ,  2'\u2009<\u20093' ,  3'\u2009<\u20092 . A word  x 1 ,\u2009 x 2 ,\u2009...,\u2009 x a  is not  lexicographically  greater than  y 1 ,\u2009 y 2 ,\u2009...,\u2009 y b  if one of the two following conditions holds:      a \u2009\u2264\u2009 b  and  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x a \u2009=\u2009 y a , i.e. the first word is the prefix of the second word;   there is a position  1\u2009\u2264\u2009 j \u2009\u2264\u2009 min ( a ,\u2009 b ) , such that  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x j \u2009-\u20091 \u2009=\u2009 y j \u2009-\u20091  and  x j \u2009<\u2009 y j , i.e. at the first position where the words differ the first word has a smaller letter than the second word has.    For example, the word \" 3'   7   5 \" is before the word \" 2   4'   6 \" in lexicographical order. It is said that sequence of words is in lexicographical order if each word is not lexicographically greater than the next word in the sequence. Denis has a sequence of words consisting of small letters only. He wants to change some letters to large (let's call this process a  capitalization ) in such a way that the sequence of words is in lexicographical order. However, he soon realized that for some reason he can't change a single letter in a single word. He only can choose a letter and change all of its occurrences in  all  words to large letters. He can perform this operation any number of times with arbitrary letters of Bookland's alphabet. Help Denis to choose which letters he needs to capitalize (make large) in order to make the sequence of words lexicographically ordered, or determine that it is impossible. Note that some words can be  equal . Input The first line contains two integers  n  and  m  ( 2\u2009\u2264\u2009 n \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 m \u2009\u2264\u2009100\u2009000 )\u00a0\u2014 the number of words and the number of letters in Bookland's alphabet, respectively. The letters of Bookland's alphabet are denoted by integers from  1  to  m . Each of the next  n  lines contains a description of one word in format  l i ,\u2009 s i ,\u20091 ,\u2009 s i ,\u20092 ,\u2009...,\u2009 s i ,\u2009 l i  ( 1\u2009\u2264\u2009 l i \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 s i ,\u2009 j \u2009\u2264\u2009 m ), where  l i  is the length of the word, and  s i ,\u2009 j  is the sequence of letters in the word. The words are given in the order Denis has them in the sequence. It is guaranteed that the total length of all words is not greater than  100\u2009000 . Output In the first line print \" Yes \" (without quotes), if it is possible to capitalize some set of letters in such a way that the sequence of words becomes lexicographically ordered. Otherwise, print \" No \" (without quotes). If the required is possible, in the second line print  k \u00a0\u2014 the number of letters Denis has to capitalize (make large), and in the third line print  k  distinct integers\u00a0\u2014 these letters. Note that you  don't need to minimize  the value  k . You can print the letters in any order. If there are multiple answers, print any of them. Examples Input 4 3 1 2 1 1 3 1 3 2 2 1 1 Output Yes 2 2 3  Input 6 5 2 1 2 2 1 2 3 1 2 3 2 1 5 2 4 4 2 4 4 Output Yes 0 Input 4 3 4 3 2 2 1 3 1 1 3 3 2 3 3 2 3 1 Output No Note In the first example after Denis makes letters  2  and  3  large, the sequence looks like the following:     2'     1     1   3'   2'     1   1   The condition  2'\u2009<\u20091  holds, so the first word is not lexicographically larger than the second word. The second word is the prefix of the third word, so the are in lexicographical order. As the first letters of the third and the fourth words are the same, and  3'\u2009<\u20091 , then the third word is not lexicographically larger than the fourth word. In the second example the words are in lexicographical order from the beginning, so Denis can do nothing. In the third example there is no set of letters such that if Denis capitalizes them, the sequence becomes lexicographically ordered. C. National Property time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output You all know that the Library of Bookland is the largest library in the world. There are dozens of thousands of books in the library. Some long and uninteresting story was removed... The alphabet of Bookland is so large that its letters are denoted by positive integers. Each letter can be small or large, the large version of a letter  x  is denoted by  x ' . BSCII encoding, which is used everywhere in Bookland, is made in that way so that large letters are presented in the order of the numbers they are denoted by, and small letters are presented in the order of the numbers they are denoted by, but all large letters are  before  all small letters. For example, the following conditions hold:  2\u2009<\u20093 ,  2'\u2009<\u20093' ,  3'\u2009<\u20092 . A word  x 1 ,\u2009 x 2 ,\u2009...,\u2009 x a  is not  lexicographically  greater than  y 1 ,\u2009 y 2 ,\u2009...,\u2009 y b  if one of the two following conditions holds:      a \u2009\u2264\u2009 b  and  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x a \u2009=\u2009 y a , i.e. the first word is the prefix of the second word;   there is a position  1\u2009\u2264\u2009 j \u2009\u2264\u2009 min ( a ,\u2009 b ) , such that  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x j \u2009-\u20091 \u2009=\u2009 y j \u2009-\u20091  and  x j \u2009<\u2009 y j , i.e. at the first position where the words differ the first word has a smaller letter than the second word has.    For example, the word \" 3'   7   5 \" is before the word \" 2   4'   6 \" in lexicographical order. It is said that sequence of words is in lexicographical order if each word is not lexicographically greater than the next word in the sequence. Denis has a sequence of words consisting of small letters only. He wants to change some letters to large (let's call this process a  capitalization ) in such a way that the sequence of words is in lexicographical order. However, he soon realized that for some reason he can't change a single letter in a single word. He only can choose a letter and change all of its occurrences in  all  words to large letters. He can perform this operation any number of times with arbitrary letters of Bookland's alphabet. Help Denis to choose which letters he needs to capitalize (make large) in order to make the sequence of words lexicographically ordered, or determine that it is impossible. Note that some words can be  equal . Input The first line contains two integers  n  and  m  ( 2\u2009\u2264\u2009 n \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 m \u2009\u2264\u2009100\u2009000 )\u00a0\u2014 the number of words and the number of letters in Bookland's alphabet, respectively. The letters of Bookland's alphabet are denoted by integers from  1  to  m . Each of the next  n  lines contains a description of one word in format  l i ,\u2009 s i ,\u20091 ,\u2009 s i ,\u20092 ,\u2009...,\u2009 s i ,\u2009 l i  ( 1\u2009\u2264\u2009 l i \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 s i ,\u2009 j \u2009\u2264\u2009 m ), where  l i  is the length of the word, and  s i ,\u2009 j  is the sequence of letters in the word. The words are given in the order Denis has them in the sequence. It is guaranteed that the total length of all words is not greater than  100\u2009000 . Output In the first line print \" Yes \" (without quotes), if it is possible to capitalize some set of letters in such a way that the sequence of words becomes lexicographically ordered. Otherwise, print \" No \" (without quotes). If the required is possible, in the second line print  k \u00a0\u2014 the number of letters Denis has to capitalize (make large), and in the third line print  k  distinct integers\u00a0\u2014 these letters. Note that you  don't need to minimize  the value  k . You can print the letters in any order. If there are multiple answers, print any of them. Examples Input 4 3 1 2 1 1 3 1 3 2 2 1 1 Output Yes 2 2 3  Input 6 5 2 1 2 2 1 2 3 1 2 3 2 1 5 2 4 4 2 4 4 Output Yes 0 Input 4 3 4 3 2 2 1 3 1 1 3 3 2 3 3 2 3 1 Output No Note In the first example after Denis makes letters  2  and  3  large, the sequence looks like the following:     2'     1     1   3'   2'     1   1   The condition  2'\u2009<\u20091  holds, so the first word is not lexicographically larger than the second word. The second word is the prefix of the third word, so the are in lexicographical order. As the first letters of the third and the fourth words are the same, and  3'\u2009<\u20091 , then the third word is not lexicographically larger than the fourth word. In the second example the words are in lexicographical order from the beginning, so Denis can do nothing. In the third example there is no set of letters such that if Denis capitalizes them, the sequence becomes lexicographically ordered. C. National Property time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output You all know that the Library of Bookland is the largest library in the world. There are dozens of thousands of books in the library. Some long and uninteresting story was removed... The alphabet of Bookland is so large that its letters are denoted by positive integers. Each letter can be small or large, the large version of a letter  x  is denoted by  x ' . BSCII encoding, which is used everywhere in Bookland, is made in that way so that large letters are presented in the order of the numbers they are denoted by, and small letters are presented in the order of the numbers they are denoted by, but all large letters are  before  all small letters. For example, the following conditions hold:  2\u2009<\u20093 ,  2'\u2009<\u20093' ,  3'\u2009<\u20092 . A word  x 1 ,\u2009 x 2 ,\u2009...,\u2009 x a  is not  lexicographically  greater than  y 1 ,\u2009 y 2 ,\u2009...,\u2009 y b  if one of the two following conditions holds:      a \u2009\u2264\u2009 b  and  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x a \u2009=\u2009 y a , i.e. the first word is the prefix of the second word;   there is a position  1\u2009\u2264\u2009 j \u2009\u2264\u2009 min ( a ,\u2009 b ) , such that  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x j \u2009-\u20091 \u2009=\u2009 y j \u2009-\u20091  and  x j \u2009<\u2009 y j , i.e. at the first position where the words differ the first word has a smaller letter than the second word has.    For example, the word \" 3'   7   5 \" is before the word \" 2   4'   6 \" in lexicographical order. It is said that sequence of words is in lexicographical order if each word is not lexicographically greater than the next word in the sequence. Denis has a sequence of words consisting of small letters only. He wants to change some letters to large (let's call this process a  capitalization ) in such a way that the sequence of words is in lexicographical order. However, he soon realized that for some reason he can't change a single letter in a single word. He only can choose a letter and change all of its occurrences in  all  words to large letters. He can perform this operation any number of times with arbitrary letters of Bookland's alphabet. Help Denis to choose which letters he needs to capitalize (make large) in order to make the sequence of words lexicographically ordered, or determine that it is impossible. Note that some words can be  equal . Input The first line contains two integers  n  and  m  ( 2\u2009\u2264\u2009 n \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 m \u2009\u2264\u2009100\u2009000 )\u00a0\u2014 the number of words and the number of letters in Bookland's alphabet, respectively. The letters of Bookland's alphabet are denoted by integers from  1  to  m . Each of the next  n  lines contains a description of one word in format  l i ,\u2009 s i ,\u20091 ,\u2009 s i ,\u20092 ,\u2009...,\u2009 s i ,\u2009 l i  ( 1\u2009\u2264\u2009 l i \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 s i ,\u2009 j \u2009\u2264\u2009 m ), where  l i  is the length of the word, and  s i ,\u2009 j  is the sequence of letters in the word. The words are given in the order Denis has them in the sequence. It is guaranteed that the total length of all words is not greater than  100\u2009000 . Output In the first line print \" Yes \" (without quotes), if it is possible to capitalize some set of letters in such a way that the sequence of words becomes lexicographically ordered. Otherwise, print \" No \" (without quotes). If the required is possible, in the second line print  k \u00a0\u2014 the number of letters Denis has to capitalize (make large), and in the third line print  k  distinct integers\u00a0\u2014 these letters. Note that you  don't need to minimize  the value  k . You can print the letters in any order. If there are multiple answers, print any of them. Examples Input 4 3 1 2 1 1 3 1 3 2 2 1 1 Output Yes 2 2 3  Input 6 5 2 1 2 2 1 2 3 1 2 3 2 1 5 2 4 4 2 4 4 Output Yes 0 Input 4 3 4 3 2 2 1 3 1 1 3 3 2 3 3 2 3 1 Output No Note In the first example after Denis makes letters  2  and  3  large, the sequence looks like the following:     2'     1     1   3'   2'     1   1   The condition  2'\u2009<\u20091  holds, so the first word is not lexicographically larger than the second word. The second word is the prefix of the third word, so the are in lexicographical order. As the first letters of the third and the fourth words are the same, and  3'\u2009<\u20091 , then the third word is not lexicographically larger than the fourth word. In the second example the words are in lexicographical order from the beginning, so Denis can do nothing. In the third example there is no set of letters such that if Denis capitalizes them, the sequence becomes lexicographically ordered. C. National Property time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output You all know that the Library of Bookland is the largest library in the world. There are dozens of thousands of books in the library. Some long and uninteresting story was removed... The alphabet of Bookland is so large that its letters are denoted by positive integers. Each letter can be small or large, the large version of a letter  x  is denoted by  x ' . BSCII encoding, which is used everywhere in Bookland, is made in that way so that large letters are presented in the order of the numbers they are denoted by, and small letters are presented in the order of the numbers they are denoted by, but all large letters are  before  all small letters. For example, the following conditions hold:  2\u2009<\u20093 ,  2'\u2009<\u20093' ,  3'\u2009<\u20092 . A word  x 1 ,\u2009 x 2 ,\u2009...,\u2009 x a  is not  lexicographically  greater than  y 1 ,\u2009 y 2 ,\u2009...,\u2009 y b  if one of the two following conditions holds:      a \u2009\u2264\u2009 b  and  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x a \u2009=\u2009 y a , i.e. the first word is the prefix of the second word;   there is a position  1\u2009\u2264\u2009 j \u2009\u2264\u2009 min ( a ,\u2009 b ) , such that  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x j \u2009-\u20091 \u2009=\u2009 y j \u2009-\u20091  and  x j \u2009<\u2009 y j , i.e. at the first position where the words differ the first word has a smaller letter than the second word has.    For example, the word \" 3'   7   5 \" is before the word \" 2   4'   6 \" in lexicographical order. It is said that sequence of words is in lexicographical order if each word is not lexicographically greater than the next word in the sequence. Denis has a sequence of words consisting of small letters only. He wants to change some letters to large (let's call this process a  capitalization ) in such a way that the sequence of words is in lexicographical order. However, he soon realized that for some reason he can't change a single letter in a single word. He only can choose a letter and change all of its occurrences in  all  words to large letters. He can perform this operation any number of times with arbitrary letters of Bookland's alphabet. Help Denis to choose which letters he needs to capitalize (make large) in order to make the sequence of words lexicographically ordered, or determine that it is impossible. Note that some words can be  equal . Input The first line contains two integers  n  and  m  ( 2\u2009\u2264\u2009 n \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 m \u2009\u2264\u2009100\u2009000 )\u00a0\u2014 the number of words and the number of letters in Bookland's alphabet, respectively. The letters of Bookland's alphabet are denoted by integers from  1  to  m . Each of the next  n  lines contains a description of one word in format  l i ,\u2009 s i ,\u20091 ,\u2009 s i ,\u20092 ,\u2009...,\u2009 s i ,\u2009 l i  ( 1\u2009\u2264\u2009 l i \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 s i ,\u2009 j \u2009\u2264\u2009 m ), where  l i  is the length of the word, and  s i ,\u2009 j  is the sequence of letters in the word. The words are given in the order Denis has them in the sequence. It is guaranteed that the total length of all words is not greater than  100\u2009000 . Output In the first line print \" Yes \" (without quotes), if it is possible to capitalize some set of letters in such a way that the sequence of words becomes lexicographically ordered. Otherwise, print \" No \" (without quotes). If the required is possible, in the second line print  k \u00a0\u2014 the number of letters Denis has to capitalize (make large), and in the third line print  k  distinct integers\u00a0\u2014 these letters. Note that you  don't need to minimize  the value  k . You can print the letters in any order. If there are multiple answers, print any of them. Examples Input 4 3 1 2 1 1 3 1 3 2 2 1 1 Output Yes 2 2 3  Input 6 5 2 1 2 2 1 2 3 1 2 3 2 1 5 2 4 4 2 4 4 Output Yes 0 Input 4 3 4 3 2 2 1 3 1 1 3 3 2 3 3 2 3 1 Output No Note In the first example after Denis makes letters  2  and  3  large, the sequence looks like the following:     2'     1     1   3'   2'     1   1   The condition  2'\u2009<\u20091  holds, so the first word is not lexicographically larger than the second word. The second word is the prefix of the third word, so the are in lexicographical order. As the first letters of the third and the fourth words are the same, and  3'\u2009<\u20091 , then the third word is not lexicographically larger than the fourth word. In the second example the words are in lexicographical order from the beginning, so Denis can do nothing. In the third example there is no set of letters such that if Denis capitalizes them, the sequence becomes lexicographically ordered. C. National Property time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output You all know that the Library of Bookland is the largest library in the world. There are dozens of thousands of books in the library. Some long and uninteresting story was removed... The alphabet of Bookland is so large that its letters are denoted by positive integers. Each letter can be small or large, the large version of a letter  x  is denoted by  x ' . BSCII encoding, which is used everywhere in Bookland, is made in that way so that large letters are presented in the order of the numbers they are denoted by, and small letters are presented in the order of the numbers they are denoted by, but all large letters are  before  all small letters. For example, the following conditions hold:  2\u2009<\u20093 ,  2'\u2009<\u20093' ,  3'\u2009<\u20092 . A word  x 1 ,\u2009 x 2 ,\u2009...,\u2009 x a  is not  lexicographically  greater than  y 1 ,\u2009 y 2 ,\u2009...,\u2009 y b  if one of the two following conditions holds:      a \u2009\u2264\u2009 b  and  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x a \u2009=\u2009 y a , i.e. the first word is the prefix of the second word;   there is a position  1\u2009\u2264\u2009 j \u2009\u2264\u2009 min ( a ,\u2009 b ) , such that  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x j \u2009-\u20091 \u2009=\u2009 y j \u2009-\u20091  and  x j \u2009<\u2009 y j , i.e. at the first position where the words differ the first word has a smaller letter than the second word has.    For example, the word \" 3'   7   5 \" is before the word \" 2   4'   6 \" in lexicographical order. It is said that sequence of words is in lexicographical order if each word is not lexicographically greater than the next word in the sequence. Denis has a sequence of words consisting of small letters only. He wants to change some letters to large (let's call this process a  capitalization ) in such a way that the sequence of words is in lexicographical order. However, he soon realized that for some reason he can't change a single letter in a single word. He only can choose a letter and change all of its occurrences in  all  words to large letters. He can perform this operation any number of times with arbitrary letters of Bookland's alphabet. Help Denis to choose which letters he needs to capitalize (make large) in order to make the sequence of words lexicographically ordered, or determine that it is impossible. Note that some words can be  equal . Input The first line contains two integers  n  and  m  ( 2\u2009\u2264\u2009 n \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 m \u2009\u2264\u2009100\u2009000 )\u00a0\u2014 the number of words and the number of letters in Bookland's alphabet, respectively. The letters of Bookland's alphabet are denoted by integers from  1  to  m . Each of the next  n  lines contains a description of one word in format  l i ,\u2009 s i ,\u20091 ,\u2009 s i ,\u20092 ,\u2009...,\u2009 s i ,\u2009 l i  ( 1\u2009\u2264\u2009 l i \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 s i ,\u2009 j \u2009\u2264\u2009 m ), where  l i  is the length of the word, and  s i ,\u2009 j  is the sequence of letters in the word. The words are given in the order Denis has them in the sequence. It is guaranteed that the total length of all words is not greater than  100\u2009000 . Output In the first line print \" Yes \" (without quotes), if it is possible to capitalize some set of letters in such a way that the sequence of words becomes lexicographically ordered. Otherwise, print \" No \" (without quotes). If the required is possible, in the second line print  k \u00a0\u2014 the number of letters Denis has to capitalize (make large), and in the third line print  k  distinct integers\u00a0\u2014 these letters. Note that you  don't need to minimize  the value  k . You can print the letters in any order. If there are multiple answers, print any of them. Examples Input 4 3 1 2 1 1 3 1 3 2 2 1 1 Output Yes 2 2 3  Input 6 5 2 1 2 2 1 2 3 1 2 3 2 1 5 2 4 4 2 4 4 Output Yes 0 Input 4 3 4 3 2 2 1 3 1 1 3 3 2 3 3 2 3 1 Output No Note In the first example after Denis makes letters  2  and  3  large, the sequence looks like the following:     2'     1     1   3'   2'     1   1   The condition  2'\u2009<\u20091  holds, so the first word is not lexicographically larger than the second word. The second word is the prefix of the third word, so the are in lexicographical order. As the first letters of the third and the fourth words are the same, and  3'\u2009<\u20091 , then the third word is not lexicographically larger than the fourth word. In the second example the words are in lexicographical order from the beginning, so Denis can do nothing. In the third example there is no set of letters such that if Denis capitalizes them, the sequence becomes lexicographically ordered. C. National Property time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output You all know that the Library of Bookland is the largest library in the world. There are dozens of thousands of books in the library. Some long and uninteresting story was removed... The alphabet of Bookland is so large that its letters are denoted by positive integers. Each letter can be small or large, the large version of a letter  x  is denoted by  x ' . BSCII encoding, which is used everywhere in Bookland, is made in that way so that large letters are presented in the order of the numbers they are denoted by, and small letters are presented in the order of the numbers they are denoted by, but all large letters are  before  all small letters. For example, the following conditions hold:  2\u2009<\u20093 ,  2'\u2009<\u20093' ,  3'\u2009<\u20092 . A word  x 1 ,\u2009 x 2 ,\u2009...,\u2009 x a  is not  lexicographically  greater than  y 1 ,\u2009 y 2 ,\u2009...,\u2009 y b  if one of the two following conditions holds:      a \u2009\u2264\u2009 b  and  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x a \u2009=\u2009 y a , i.e. the first word is the prefix of the second word;   there is a position  1\u2009\u2264\u2009 j \u2009\u2264\u2009 min ( a ,\u2009 b ) , such that  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x j \u2009-\u20091 \u2009=\u2009 y j \u2009-\u20091  and  x j \u2009<\u2009 y j , i.e. at the first position where the words differ the first word has a smaller letter than the second word has.    For example, the word \" 3'   7   5 \" is before the word \" 2   4'   6 \" in lexicographical order. It is said that sequence of words is in lexicographical order if each word is not lexicographically greater than the next word in the sequence. Denis has a sequence of words consisting of small letters only. He wants to change some letters to large (let's call this process a  capitalization ) in such a way that the sequence of words is in lexicographical order. However, he soon realized that for some reason he can't change a single letter in a single word. He only can choose a letter and change all of its occurrences in  all  words to large letters. He can perform this operation any number of times with arbitrary letters of Bookland's alphabet. Help Denis to choose which letters he needs to capitalize (make large) in order to make the sequence of words lexicographically ordered, or determine that it is impossible. Note that some words can be  equal . Input The first line contains two integers  n  and  m  ( 2\u2009\u2264\u2009 n \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 m \u2009\u2264\u2009100\u2009000 )\u00a0\u2014 the number of words and the number of letters in Bookland's alphabet, respectively. The letters of Bookland's alphabet are denoted by integers from  1  to  m . Each of the next  n  lines contains a description of one word in format  l i ,\u2009 s i ,\u20091 ,\u2009 s i ,\u20092 ,\u2009...,\u2009 s i ,\u2009 l i  ( 1\u2009\u2264\u2009 l i \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 s i ,\u2009 j \u2009\u2264\u2009 m ), where  l i  is the length of the word, and  s i ,\u2009 j  is the sequence of letters in the word. The words are given in the order Denis has them in the sequence. It is guaranteed that the total length of all words is not greater than  100\u2009000 . Output In the first line print \" Yes \" (without quotes), if it is possible to capitalize some set of letters in such a way that the sequence of words becomes lexicographically ordered. Otherwise, print \" No \" (without quotes). If the required is possible, in the second line print  k \u00a0\u2014 the number of letters Denis has to capitalize (make large), and in the third line print  k  distinct integers\u00a0\u2014 these letters. Note that you  don't need to minimize  the value  k . You can print the letters in any order. If there are multiple answers, print any of them. Examples Input 4 3 1 2 1 1 3 1 3 2 2 1 1 Output Yes 2 2 3  Input 6 5 2 1 2 2 1 2 3 1 2 3 2 1 5 2 4 4 2 4 4 Output Yes 0 Input 4 3 4 3 2 2 1 3 1 1 3 3 2 3 3 2 3 1 Output No Note In the first example after Denis makes letters  2  and  3  large, the sequence looks like the following:     2'     1     1   3'   2'     1   1   The condition  2'\u2009<\u20091  holds, so the first word is not lexicographically larger than the second word. The second word is the prefix of the third word, so the are in lexicographical order. As the first letters of the third and the fourth words are the same, and  3'\u2009<\u20091 , then the third word is not lexicographically larger than the fourth word. In the second example the words are in lexicographical order from the beginning, so Denis can do nothing. In the third example there is no set of letters such that if Denis capitalizes them, the sequence becomes lexicographically ordered. C. National Property time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output You all know that the Library of Bookland is the largest library in the world. There are dozens of thousands of books in the library. Some long and uninteresting story was removed... The alphabet of Bookland is so large that its letters are denoted by positive integers. Each letter can be small or large, the large version of a letter  x  is denoted by  x ' . BSCII encoding, which is used everywhere in Bookland, is made in that way so that large letters are presented in the order of the numbers they are denoted by, and small letters are presented in the order of the numbers they are denoted by, but all large letters are  before  all small letters. For example, the following conditions hold:  2\u2009<\u20093 ,  2'\u2009<\u20093' ,  3'\u2009<\u20092 . A word  x 1 ,\u2009 x 2 ,\u2009...,\u2009 x a  is not  lexicographically  greater than  y 1 ,\u2009 y 2 ,\u2009...,\u2009 y b  if one of the two following conditions holds:      a \u2009\u2264\u2009 b  and  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x a \u2009=\u2009 y a , i.e. the first word is the prefix of the second word;   there is a position  1\u2009\u2264\u2009 j \u2009\u2264\u2009 min ( a ,\u2009 b ) , such that  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x j \u2009-\u20091 \u2009=\u2009 y j \u2009-\u20091  and  x j \u2009<\u2009 y j , i.e. at the first position where the words differ the first word has a smaller letter than the second word has.    For example, the word \" 3'   7   5 \" is before the word \" 2   4'   6 \" in lexicographical order. It is said that sequence of words is in lexicographical order if each word is not lexicographically greater than the next word in the sequence. Denis has a sequence of words consisting of small letters only. He wants to change some letters to large (let's call this process a  capitalization ) in such a way that the sequence of words is in lexicographical order. However, he soon realized that for some reason he can't change a single letter in a single word. He only can choose a letter and change all of its occurrences in  all  words to large letters. He can perform this operation any number of times with arbitrary letters of Bookland's alphabet. Help Denis to choose which letters he needs to capitalize (make large) in order to make the sequence of words lexicographically ordered, or determine that it is impossible. Note that some words can be  equal . Input The first line contains two integers  n  and  m  ( 2\u2009\u2264\u2009 n \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 m \u2009\u2264\u2009100\u2009000 )\u00a0\u2014 the number of words and the number of letters in Bookland's alphabet, respectively. The letters of Bookland's alphabet are denoted by integers from  1  to  m . Each of the next  n  lines contains a description of one word in format  l i ,\u2009 s i ,\u20091 ,\u2009 s i ,\u20092 ,\u2009...,\u2009 s i ,\u2009 l i  ( 1\u2009\u2264\u2009 l i \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 s i ,\u2009 j \u2009\u2264\u2009 m ), where  l i  is the length of the word, and  s i ,\u2009 j  is the sequence of letters in the word. The words are given in the order Denis has them in the sequence. It is guaranteed that the total length of all words is not greater than  100\u2009000 . Output In the first line print \" Yes \" (without quotes), if it is possible to capitalize some set of letters in such a way that the sequence of words becomes lexicographically ordered. Otherwise, print \" No \" (without quotes). If the required is possible, in the second line print  k \u00a0\u2014 the number of letters Denis has to capitalize (make large), and in the third line print  k  distinct integers\u00a0\u2014 these letters. Note that you  don't need to minimize  the value  k . You can print the letters in any order. If there are multiple answers, print any of them. Examples Input 4 3 1 2 1 1 3 1 3 2 2 1 1 Output Yes 2 2 3  Input 6 5 2 1 2 2 1 2 3 1 2 3 2 1 5 2 4 4 2 4 4 Output Yes 0 Input 4 3 4 3 2 2 1 3 1 1 3 3 2 3 3 2 3 1 Output No Note In the first example after Denis makes letters  2  and  3  large, the sequence looks like the following:     2'     1     1   3'   2'     1   1   The condition  2'\u2009<\u20091  holds, so the first word is not lexicographically larger than the second word. The second word is the prefix of the third word, so the are in lexicographical order. As the first letters of the third and the fourth words are the same, and  3'\u2009<\u20091 , then the third word is not lexicographically larger than the fourth word. In the second example the words are in lexicographical order from the beginning, so Denis can do nothing. In the third example there is no set of letters such that if Denis capitalizes them, the sequence becomes lexicographically ordered. C. National Property time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output You all know that the Library of Bookland is the largest library in the world. There are dozens of thousands of books in the library. Some long and uninteresting story was removed... The alphabet of Bookland is so large that its letters are denoted by positive integers. Each letter can be small or large, the large version of a letter  x  is denoted by  x ' . BSCII encoding, which is used everywhere in Bookland, is made in that way so that large letters are presented in the order of the numbers they are denoted by, and small letters are presented in the order of the numbers they are denoted by, but all large letters are  before  all small letters. For example, the following conditions hold:  2\u2009<\u20093 ,  2'\u2009<\u20093' ,  3'\u2009<\u20092 . A word  x 1 ,\u2009 x 2 ,\u2009...,\u2009 x a  is not  lexicographically  greater than  y 1 ,\u2009 y 2 ,\u2009...,\u2009 y b  if one of the two following conditions holds:      a \u2009\u2264\u2009 b  and  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x a \u2009=\u2009 y a , i.e. the first word is the prefix of the second word;   there is a position  1\u2009\u2264\u2009 j \u2009\u2264\u2009 min ( a ,\u2009 b ) , such that  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x j \u2009-\u20091 \u2009=\u2009 y j \u2009-\u20091  and  x j \u2009<\u2009 y j , i.e. at the first position where the words differ the first word has a smaller letter than the second word has.    For example, the word \" 3'   7   5 \" is before the word \" 2   4'   6 \" in lexicographical order. It is said that sequence of words is in lexicographical order if each word is not lexicographically greater than the next word in the sequence. Denis has a sequence of words consisting of small letters only. He wants to change some letters to large (let's call this process a  capitalization ) in such a way that the sequence of words is in lexicographical order. However, he soon realized that for some reason he can't change a single letter in a single word. He only can choose a letter and change all of its occurrences in  all  words to large letters. He can perform this operation any number of times with arbitrary letters of Bookland's alphabet. Help Denis to choose which letters he needs to capitalize (make large) in order to make the sequence of words lexicographically ordered, or determine that it is impossible. Note that some words can be  equal . Input The first line contains two integers  n  and  m  ( 2\u2009\u2264\u2009 n \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 m \u2009\u2264\u2009100\u2009000 )\u00a0\u2014 the number of words and the number of letters in Bookland's alphabet, respectively. The letters of Bookland's alphabet are denoted by integers from  1  to  m . Each of the next  n  lines contains a description of one word in format  l i ,\u2009 s i ,\u20091 ,\u2009 s i ,\u20092 ,\u2009...,\u2009 s i ,\u2009 l i  ( 1\u2009\u2264\u2009 l i \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 s i ,\u2009 j \u2009\u2264\u2009 m ), where  l i  is the length of the word, and  s i ,\u2009 j  is the sequence of letters in the word. The words are given in the order Denis has them in the sequence. It is guaranteed that the total length of all words is not greater than  100\u2009000 . Output In the first line print \" Yes \" (without quotes), if it is possible to capitalize some set of letters in such a way that the sequence of words becomes lexicographically ordered. Otherwise, print \" No \" (without quotes). If the required is possible, in the second line print  k \u00a0\u2014 the number of letters Denis has to capitalize (make large), and in the third line print  k  distinct integers\u00a0\u2014 these letters. Note that you  don't need to minimize  the value  k . You can print the letters in any order. If there are multiple answers, print any of them. Examples Input 4 3 1 2 1 1 3 1 3 2 2 1 1 Output Yes 2 2 3  Input 6 5 2 1 2 2 1 2 3 1 2 3 2 1 5 2 4 4 2 4 4 Output Yes 0 Input 4 3 4 3 2 2 1 3 1 1 3 3 2 3 3 2 3 1 Output No Note In the first example after Denis makes letters  2  and  3  large, the sequence looks like the following:     2'     1     1   3'   2'     1   1   The condition  2'\u2009<\u20091  holds, so the first word is not lexicographically larger than the second word. The second word is the prefix of the third word, so the are in lexicographical order. As the first letters of the third and the fourth words are the same, and  3'\u2009<\u20091 , then the third word is not lexicographically larger than the fourth word. In the second example the words are in lexicographical order from the beginning, so Denis can do nothing. In the third example there is no set of letters such that if Denis capitalizes them, the sequence becomes lexicographically ordered. C. National Property time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output You all know that the Library of Bookland is the largest library in the world. There are dozens of thousands of books in the library. Some long and uninteresting story was removed... The alphabet of Bookland is so large that its letters are denoted by positive integers. Each letter can be small or large, the large version of a letter  x  is denoted by  x ' . BSCII encoding, which is used everywhere in Bookland, is made in that way so that large letters are presented in the order of the numbers they are denoted by, and small letters are presented in the order of the numbers they are denoted by, but all large letters are  before  all small letters. For example, the following conditions hold:  2\u2009<\u20093 ,  2'\u2009<\u20093' ,  3'\u2009<\u20092 . A word  x 1 ,\u2009 x 2 ,\u2009...,\u2009 x a  is not  lexicographically  greater than  y 1 ,\u2009 y 2 ,\u2009...,\u2009 y b  if one of the two following conditions holds:      a \u2009\u2264\u2009 b  and  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x a \u2009=\u2009 y a , i.e. the first word is the prefix of the second word;   there is a position  1\u2009\u2264\u2009 j \u2009\u2264\u2009 min ( a ,\u2009 b ) , such that  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x j \u2009-\u20091 \u2009=\u2009 y j \u2009-\u20091  and  x j \u2009<\u2009 y j , i.e. at the first position where the words differ the first word has a smaller letter than the second word has.    For example, the word \" 3'   7   5 \" is before the word \" 2   4'   6 \" in lexicographical order. It is said that sequence of words is in lexicographical order if each word is not lexicographically greater than the next word in the sequence. Denis has a sequence of words consisting of small letters only. He wants to change some letters to large (let's call this process a  capitalization ) in such a way that the sequence of words is in lexicographical order. However, he soon realized that for some reason he can't change a single letter in a single word. He only can choose a letter and change all of its occurrences in  all  words to large letters. He can perform this operation any number of times with arbitrary letters of Bookland's alphabet. Help Denis to choose which letters he needs to capitalize (make large) in order to make the sequence of words lexicographically ordered, or determine that it is impossible. Note that some words can be  equal . Input The first line contains two integers  n  and  m  ( 2\u2009\u2264\u2009 n \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 m \u2009\u2264\u2009100\u2009000 )\u00a0\u2014 the number of words and the number of letters in Bookland's alphabet, respectively. The letters of Bookland's alphabet are denoted by integers from  1  to  m . Each of the next  n  lines contains a description of one word in format  l i ,\u2009 s i ,\u20091 ,\u2009 s i ,\u20092 ,\u2009...,\u2009 s i ,\u2009 l i  ( 1\u2009\u2264\u2009 l i \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 s i ,\u2009 j \u2009\u2264\u2009 m ), where  l i  is the length of the word, and  s i ,\u2009 j  is the sequence of letters in the word. The words are given in the order Denis has them in the sequence. It is guaranteed that the total length of all words is not greater than  100\u2009000 . Output In the first line print \" Yes \" (without quotes), if it is possible to capitalize some set of letters in such a way that the sequence of words becomes lexicographically ordered. Otherwise, print \" No \" (without quotes). If the required is possible, in the second line print  k \u00a0\u2014 the number of letters Denis has to capitalize (make large), and in the third line print  k  distinct integers\u00a0\u2014 these letters. Note that you  don't need to minimize  the value  k . You can print the letters in any order. If there are multiple answers, print any of them. Examples Input 4 3 1 2 1 1 3 1 3 2 2 1 1 Output Yes 2 2 3  Input 6 5 2 1 2 2 1 2 3 1 2 3 2 1 5 2 4 4 2 4 4 Output Yes 0 Input 4 3 4 3 2 2 1 3 1 1 3 3 2 3 3 2 3 1 Output No Note In the first example after Denis makes letters  2  and  3  large, the sequence looks like the following:     2'     1     1   3'   2'     1   1   The condition  2'\u2009<\u20091  holds, so the first word is not lexicographically larger than the second word. The second word is the prefix of the third word, so the are in lexicographical order. As the first letters of the third and the fourth words are the same, and  3'\u2009<\u20091 , then the third word is not lexicographically larger than the fourth word. In the second example the words are in lexicographical order from the beginning, so Denis can do nothing. In the third example there is no set of letters such that if Denis capitalizes them, the sequence becomes lexicographically ordered. C. National Property time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output You all know that the Library of Bookland is the largest library in the world. There are dozens of thousands of books in the library. Some long and uninteresting story was removed... The alphabet of Bookland is so large that its letters are denoted by positive integers. Each letter can be small or large, the large version of a letter  x  is denoted by  x ' . BSCII encoding, which is used everywhere in Bookland, is made in that way so that large letters are presented in the order of the numbers they are denoted by, and small letters are presented in the order of the numbers they are denoted by, but all large letters are  before  all small letters. For example, the following conditions hold:  2\u2009<\u20093 ,  2'\u2009<\u20093' ,  3'\u2009<\u20092 . A word  x 1 ,\u2009 x 2 ,\u2009...,\u2009 x a  is not  lexicographically  greater than  y 1 ,\u2009 y 2 ,\u2009...,\u2009 y b  if one of the two following conditions holds:      a \u2009\u2264\u2009 b  and  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x a \u2009=\u2009 y a , i.e. the first word is the prefix of the second word;   there is a position  1\u2009\u2264\u2009 j \u2009\u2264\u2009 min ( a ,\u2009 b ) , such that  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x j \u2009-\u20091 \u2009=\u2009 y j \u2009-\u20091  and  x j \u2009<\u2009 y j , i.e. at the first position where the words differ the first word has a smaller letter than the second word has.    For example, the word \" 3'   7   5 \" is before the word \" 2   4'   6 \" in lexicographical order. It is said that sequence of words is in lexicographical order if each word is not lexicographically greater than the next word in the sequence. Denis has a sequence of words consisting of small letters only. He wants to change some letters to large (let's call this process a  capitalization ) in such a way that the sequence of words is in lexicographical order. However, he soon realized that for some reason he can't change a single letter in a single word. He only can choose a letter and change all of its occurrences in  all  words to large letters. He can perform this operation any number of times with arbitrary letters of Bookland's alphabet. Help Denis to choose which letters he needs to capitalize (make large) in order to make the sequence of words lexicographically ordered, or determine that it is impossible. Note that some words can be  equal . Input The first line contains two integers  n  and  m  ( 2\u2009\u2264\u2009 n \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 m \u2009\u2264\u2009100\u2009000 )\u00a0\u2014 the number of words and the number of letters in Bookland's alphabet, respectively. The letters of Bookland's alphabet are denoted by integers from  1  to  m . Each of the next  n  lines contains a description of one word in format  l i ,\u2009 s i ,\u20091 ,\u2009 s i ,\u20092 ,\u2009...,\u2009 s i ,\u2009 l i  ( 1\u2009\u2264\u2009 l i \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 s i ,\u2009 j \u2009\u2264\u2009 m ), where  l i  is the length of the word, and  s i ,\u2009 j  is the sequence of letters in the word. The words are given in the order Denis has them in the sequence. It is guaranteed that the total length of all words is not greater than  100\u2009000 . Output In the first line print \" Yes \" (without quotes), if it is possible to capitalize some set of letters in such a way that the sequence of words becomes lexicographically ordered. Otherwise, print \" No \" (without quotes). If the required is possible, in the second line print  k \u00a0\u2014 the number of letters Denis has to capitalize (make large), and in the third line print  k  distinct integers\u00a0\u2014 these letters. Note that you  don't need to minimize  the value  k . You can print the letters in any order. If there are multiple answers, print any of them. Examples Input 4 3 1 2 1 1 3 1 3 2 2 1 1 Output Yes 2 2 3  Input 6 5 2 1 2 2 1 2 3 1 2 3 2 1 5 2 4 4 2 4 4 Output Yes 0 Input 4 3 4 3 2 2 1 3 1 1 3 3 2 3 3 2 3 1 Output No Note In the first example after Denis makes letters  2  and  3  large, the sequence looks like the following:     2'     1     1   3'   2'     1   1   The condition  2'\u2009<\u20091  holds, so the first word is not lexicographically larger than the second word. The second word is the prefix of the third word, so the are in lexicographical order. As the first letters of the third and the fourth words are the same, and  3'\u2009<\u20091 , then the third word is not lexicographically larger than the fourth word. In the second example the words are in lexicographical order from the beginning, so Denis can do nothing. In the third example there is no set of letters such that if Denis capitalizes them, the sequence becomes lexicographically ordered. C. National Property time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output You all know that the Library of Bookland is the largest library in the world. There are dozens of thousands of books in the library. Some long and uninteresting story was removed... The alphabet of Bookland is so large that its letters are denoted by positive integers. Each letter can be small or large, the large version of a letter  x  is denoted by  x ' . BSCII encoding, which is used everywhere in Bookland, is made in that way so that large letters are presented in the order of the numbers they are denoted by, and small letters are presented in the order of the numbers they are denoted by, but all large letters are  before  all small letters. For example, the following conditions hold:  2\u2009<\u20093 ,  2'\u2009<\u20093' ,  3'\u2009<\u20092 . A word  x 1 ,\u2009 x 2 ,\u2009...,\u2009 x a  is not  lexicographically  greater than  y 1 ,\u2009 y 2 ,\u2009...,\u2009 y b  if one of the two following conditions holds:      a \u2009\u2264\u2009 b  and  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x a \u2009=\u2009 y a , i.e. the first word is the prefix of the second word;   there is a position  1\u2009\u2264\u2009 j \u2009\u2264\u2009 min ( a ,\u2009 b ) , such that  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x j \u2009-\u20091 \u2009=\u2009 y j \u2009-\u20091  and  x j \u2009<\u2009 y j , i.e. at the first position where the words differ the first word has a smaller letter than the second word has.    For example, the word \" 3'   7   5 \" is before the word \" 2   4'   6 \" in lexicographical order. It is said that sequence of words is in lexicographical order if each word is not lexicographically greater than the next word in the sequence. Denis has a sequence of words consisting of small letters only. He wants to change some letters to large (let's call this process a  capitalization ) in such a way that the sequence of words is in lexicographical order. However, he soon realized that for some reason he can't change a single letter in a single word. He only can choose a letter and change all of its occurrences in  all  words to large letters. He can perform this operation any number of times with arbitrary letters of Bookland's alphabet. Help Denis to choose which letters he needs to capitalize (make large) in order to make the sequence of words lexicographically ordered, or determine that it is impossible. Note that some words can be  equal . Input The first line contains two integers  n  and  m  ( 2\u2009\u2264\u2009 n \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 m \u2009\u2264\u2009100\u2009000 )\u00a0\u2014 the number of words and the number of letters in Bookland's alphabet, respectively. The letters of Bookland's alphabet are denoted by integers from  1  to  m . Each of the next  n  lines contains a description of one word in format  l i ,\u2009 s i ,\u20091 ,\u2009 s i ,\u20092 ,\u2009...,\u2009 s i ,\u2009 l i  ( 1\u2009\u2264\u2009 l i \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 s i ,\u2009 j \u2009\u2264\u2009 m ), where  l i  is the length of the word, and  s i ,\u2009 j  is the sequence of letters in the word. The words are given in the order Denis has them in the sequence. It is guaranteed that the total length of all words is not greater than  100\u2009000 . Output In the first line print \" Yes \" (without quotes), if it is possible to capitalize some set of letters in such a way that the sequence of words becomes lexicographically ordered. Otherwise, print \" No \" (without quotes). If the required is possible, in the second line print  k \u00a0\u2014 the number of letters Denis has to capitalize (make large), and in the third line print  k  distinct integers\u00a0\u2014 these letters. Note that you  don't need to minimize  the value  k . You can print the letters in any order. If there are multiple answers, print any of them. Examples Input 4 3 1 2 1 1 3 1 3 2 2 1 1 Output Yes 2 2 3  Input 6 5 2 1 2 2 1 2 3 1 2 3 2 1 5 2 4 4 2 4 4 Output Yes 0 Input 4 3 4 3 2 2 1 3 1 1 3 3 2 3 3 2 3 1 Output No Note In the first example after Denis makes letters  2  and  3  large, the sequence looks like the following:     2'     1     1   3'   2'     1   1   The condition  2'\u2009<\u20091  holds, so the first word is not lexicographically larger than the second word. The second word is the prefix of the third word, so the are in lexicographical order. As the first letters of the third and the fourth words are the same, and  3'\u2009<\u20091 , then the third word is not lexicographically larger than the fourth word. In the second example the words are in lexicographical order from the beginning, so Denis can do nothing. In the third example there is no set of letters such that if Denis capitalizes them, the sequence becomes lexicographically ordered. C. National Property time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output You all know that the Library of Bookland is the largest library in the world. There are dozens of thousands of books in the library. Some long and uninteresting story was removed... The alphabet of Bookland is so large that its letters are denoted by positive integers. Each letter can be small or large, the large version of a letter  x  is denoted by  x ' . BSCII encoding, which is used everywhere in Bookland, is made in that way so that large letters are presented in the order of the numbers they are denoted by, and small letters are presented in the order of the numbers they are denoted by, but all large letters are  before  all small letters. For example, the following conditions hold:  2\u2009<\u20093 ,  2'\u2009<\u20093' ,  3'\u2009<\u20092 . A word  x 1 ,\u2009 x 2 ,\u2009...,\u2009 x a  is not  lexicographically  greater than  y 1 ,\u2009 y 2 ,\u2009...,\u2009 y b  if one of the two following conditions holds:      a \u2009\u2264\u2009 b  and  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x a \u2009=\u2009 y a , i.e. the first word is the prefix of the second word;   there is a position  1\u2009\u2264\u2009 j \u2009\u2264\u2009 min ( a ,\u2009 b ) , such that  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x j \u2009-\u20091 \u2009=\u2009 y j \u2009-\u20091  and  x j \u2009<\u2009 y j , i.e. at the first position where the words differ the first word has a smaller letter than the second word has.    For example, the word \" 3'   7   5 \" is before the word \" 2   4'   6 \" in lexicographical order. It is said that sequence of words is in lexicographical order if each word is not lexicographically greater than the next word in the sequence. Denis has a sequence of words consisting of small letters only. He wants to change some letters to large (let's call this process a  capitalization ) in such a way that the sequence of words is in lexicographical order. However, he soon realized that for some reason he can't change a single letter in a single word. He only can choose a letter and change all of its occurrences in  all  words to large letters. He can perform this operation any number of times with arbitrary letters of Bookland's alphabet. Help Denis to choose which letters he needs to capitalize (make large) in order to make the sequence of words lexicographically ordered, or determine that it is impossible. Note that some words can be  equal . Input The first line contains two integers  n  and  m  ( 2\u2009\u2264\u2009 n \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 m \u2009\u2264\u2009100\u2009000 )\u00a0\u2014 the number of words and the number of letters in Bookland's alphabet, respectively. The letters of Bookland's alphabet are denoted by integers from  1  to  m . Each of the next  n  lines contains a description of one word in format  l i ,\u2009 s i ,\u20091 ,\u2009 s i ,\u20092 ,\u2009...,\u2009 s i ,\u2009 l i  ( 1\u2009\u2264\u2009 l i \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 s i ,\u2009 j \u2009\u2264\u2009 m ), where  l i  is the length of the word, and  s i ,\u2009 j  is the sequence of letters in the word. The words are given in the order Denis has them in the sequence. It is guaranteed that the total length of all words is not greater than  100\u2009000 . Output In the first line print \" Yes \" (without quotes), if it is possible to capitalize some set of letters in such a way that the sequence of words becomes lexicographically ordered. Otherwise, print \" No \" (without quotes). If the required is possible, in the second line print  k \u00a0\u2014 the number of letters Denis has to capitalize (make large), and in the third line print  k  distinct integers\u00a0\u2014 these letters. Note that you  don't need to minimize  the value  k . You can print the letters in any order. If there are multiple answers, print any of them. Examples Input 4 3 1 2 1 1 3 1 3 2 2 1 1 Output Yes 2 2 3  Input 6 5 2 1 2 2 1 2 3 1 2 3 2 1 5 2 4 4 2 4 4 Output Yes 0 Input 4 3 4 3 2 2 1 3 1 1 3 3 2 3 3 2 3 1 Output No Note In the first example after Denis makes letters  2  and  3  large, the sequence looks like the following:     2'     1     1   3'   2'     1   1   The condition  2'\u2009<\u20091  holds, so the first word is not lexicographically larger than the second word. The second word is the prefix of the third word, so the are in lexicographical order. As the first letters of the third and the fourth words are the same, and  3'\u2009<\u20091 , then the third word is not lexicographically larger than the fourth word. In the second example the words are in lexicographical order from the beginning, so Denis can do nothing. In the third example there is no set of letters such that if Denis capitalizes them, the sequence becomes lexicographically ordered. C. National Property time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output You all know that the Library of Bookland is the largest library in the world. There are dozens of thousands of books in the library. Some long and uninteresting story was removed... The alphabet of Bookland is so large that its letters are denoted by positive integers. Each letter can be small or large, the large version of a letter  x  is denoted by  x ' . BSCII encoding, which is used everywhere in Bookland, is made in that way so that large letters are presented in the order of the numbers they are denoted by, and small letters are presented in the order of the numbers they are denoted by, but all large letters are  before  all small letters. For example, the following conditions hold:  2\u2009<\u20093 ,  2'\u2009<\u20093' ,  3'\u2009<\u20092 . A word  x 1 ,\u2009 x 2 ,\u2009...,\u2009 x a  is not  lexicographically  greater than  y 1 ,\u2009 y 2 ,\u2009...,\u2009 y b  if one of the two following conditions holds:      a \u2009\u2264\u2009 b  and  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x a \u2009=\u2009 y a , i.e. the first word is the prefix of the second word;   there is a position  1\u2009\u2264\u2009 j \u2009\u2264\u2009 min ( a ,\u2009 b ) , such that  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x j \u2009-\u20091 \u2009=\u2009 y j \u2009-\u20091  and  x j \u2009<\u2009 y j , i.e. at the first position where the words differ the first word has a smaller letter than the second word has.    For example, the word \" 3'   7   5 \" is before the word \" 2   4'   6 \" in lexicographical order. It is said that sequence of words is in lexicographical order if each word is not lexicographically greater than the next word in the sequence. Denis has a sequence of words consisting of small letters only. He wants to change some letters to large (let's call this process a  capitalization ) in such a way that the sequence of words is in lexicographical order. However, he soon realized that for some reason he can't change a single letter in a single word. He only can choose a letter and change all of its occurrences in  all  words to large letters. He can perform this operation any number of times with arbitrary letters of Bookland's alphabet. Help Denis to choose which letters he needs to capitalize (make large) in order to make the sequence of words lexicographically ordered, or determine that it is impossible. Note that some words can be  equal . Input The first line contains two integers  n  and  m  ( 2\u2009\u2264\u2009 n \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 m \u2009\u2264\u2009100\u2009000 )\u00a0\u2014 the number of words and the number of letters in Bookland's alphabet, respectively. The letters of Bookland's alphabet are denoted by integers from  1  to  m . Each of the next  n  lines contains a description of one word in format  l i ,\u2009 s i ,\u20091 ,\u2009 s i ,\u20092 ,\u2009...,\u2009 s i ,\u2009 l i  ( 1\u2009\u2264\u2009 l i \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 s i ,\u2009 j \u2009\u2264\u2009 m ), where  l i  is the length of the word, and  s i ,\u2009 j  is the sequence of letters in the word. The words are given in the order Denis has them in the sequence. It is guaranteed that the total length of all words is not greater than  100\u2009000 . Output In the first line print \" Yes \" (without quotes), if it is possible to capitalize some set of letters in such a way that the sequence of words becomes lexicographically ordered. Otherwise, print \" No \" (without quotes). If the required is possible, in the second line print  k \u00a0\u2014 the number of letters Denis has to capitalize (make large), and in the third line print  k  distinct integers\u00a0\u2014 these letters. Note that you  don't need to minimize  the value  k . You can print the letters in any order. If there are multiple answers, print any of them. Examples Input 4 3 1 2 1 1 3 1 3 2 2 1 1 Output Yes 2 2 3  Input 6 5 2 1 2 2 1 2 3 1 2 3 2 1 5 2 4 4 2 4 4 Output Yes 0 Input 4 3 4 3 2 2 1 3 1 1 3 3 2 3 3 2 3 1 Output No Note In the first example after Denis makes letters  2  and  3  large, the sequence looks like the following:     2'     1     1   3'   2'     1   1   The condition  2'\u2009<\u20091  holds, so the first word is not lexicographically larger than the second word. The second word is the prefix of the third word, so the are in lexicographical order. As the first letters of the third and the fourth words are the same, and  3'\u2009<\u20091 , then the third word is not lexicographically larger than the fourth word. In the second example the words are in lexicographical order from the beginning, so Denis can do nothing. In the third example there is no set of letters such that if Denis capitalizes them, the sequence becomes lexicographically ordered. C. National Property time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output You all know that the Library of Bookland is the largest library in the world. There are dozens of thousands of books in the library. Some long and uninteresting story was removed... The alphabet of Bookland is so large that its letters are denoted by positive integers. Each letter can be small or large, the large version of a letter  x  is denoted by  x ' . BSCII encoding, which is used everywhere in Bookland, is made in that way so that large letters are presented in the order of the numbers they are denoted by, and small letters are presented in the order of the numbers they are denoted by, but all large letters are  before  all small letters. For example, the following conditions hold:  2\u2009<\u20093 ,  2'\u2009<\u20093' ,  3'\u2009<\u20092 . A word  x 1 ,\u2009 x 2 ,\u2009...,\u2009 x a  is not  lexicographically  greater than  y 1 ,\u2009 y 2 ,\u2009...,\u2009 y b  if one of the two following conditions holds:      a \u2009\u2264\u2009 b  and  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x a \u2009=\u2009 y a , i.e. the first word is the prefix of the second word;   there is a position  1\u2009\u2264\u2009 j \u2009\u2264\u2009 min ( a ,\u2009 b ) , such that  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x j \u2009-\u20091 \u2009=\u2009 y j \u2009-\u20091  and  x j \u2009<\u2009 y j , i.e. at the first position where the words differ the first word has a smaller letter than the second word has.    For example, the word \" 3'   7   5 \" is before the word \" 2   4'   6 \" in lexicographical order. It is said that sequence of words is in lexicographical order if each word is not lexicographically greater than the next word in the sequence. Denis has a sequence of words consisting of small letters only. He wants to change some letters to large (let's call this process a  capitalization ) in such a way that the sequence of words is in lexicographical order. However, he soon realized that for some reason he can't change a single letter in a single word. He only can choose a letter and change all of its occurrences in  all  words to large letters. He can perform this operation any number of times with arbitrary letters of Bookland's alphabet. Help Denis to choose which letters he needs to capitalize (make large) in order to make the sequence of words lexicographically ordered, or determine that it is impossible. Note that some words can be  equal . Input The first line contains two integers  n  and  m  ( 2\u2009\u2264\u2009 n \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 m \u2009\u2264\u2009100\u2009000 )\u00a0\u2014 the number of words and the number of letters in Bookland's alphabet, respectively. The letters of Bookland's alphabet are denoted by integers from  1  to  m . Each of the next  n  lines contains a description of one word in format  l i ,\u2009 s i ,\u20091 ,\u2009 s i ,\u20092 ,\u2009...,\u2009 s i ,\u2009 l i  ( 1\u2009\u2264\u2009 l i \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 s i ,\u2009 j \u2009\u2264\u2009 m ), where  l i  is the length of the word, and  s i ,\u2009 j  is the sequence of letters in the word. The words are given in the order Denis has them in the sequence. It is guaranteed that the total length of all words is not greater than  100\u2009000 . Output In the first line print \" Yes \" (without quotes), if it is possible to capitalize some set of letters in such a way that the sequence of words becomes lexicographically ordered. Otherwise, print \" No \" (without quotes). If the required is possible, in the second line print  k \u00a0\u2014 the number of letters Denis has to capitalize (make large), and in the third line print  k  distinct integers\u00a0\u2014 these letters. Note that you  don't need to minimize  the value  k . You can print the letters in any order. If there are multiple answers, print any of them. Examples Input 4 3 1 2 1 1 3 1 3 2 2 1 1 Output Yes 2 2 3  Input 6 5 2 1 2 2 1 2 3 1 2 3 2 1 5 2 4 4 2 4 4 Output Yes 0 Input 4 3 4 3 2 2 1 3 1 1 3 3 2 3 3 2 3 1 Output No Note In the first example after Denis makes letters  2  and  3  large, the sequence looks like the following:     2'     1     1   3'   2'     1   1   The condition  2'\u2009<\u20091  holds, so the first word is not lexicographically larger than the second word. The second word is the prefix of the third word, so the are in lexicographical order. As the first letters of the third and the fourth words are the same, and  3'\u2009<\u20091 , then the third word is not lexicographically larger than the fourth word. In the second example the words are in lexicographical order from the beginning, so Denis can do nothing. In the third example there is no set of letters such that if Denis capitalizes them, the sequence becomes lexicographically ordered. C. National Property time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output You all know that the Library of Bookland is the largest library in the world. There are dozens of thousands of books in the library. Some long and uninteresting story was removed... The alphabet of Bookland is so large that its letters are denoted by positive integers. Each letter can be small or large, the large version of a letter  x  is denoted by  x ' . BSCII encoding, which is used everywhere in Bookland, is made in that way so that large letters are presented in the order of the numbers they are denoted by, and small letters are presented in the order of the numbers they are denoted by, but all large letters are  before  all small letters. For example, the following conditions hold:  2\u2009<\u20093 ,  2'\u2009<\u20093' ,  3'\u2009<\u20092 . A word  x 1 ,\u2009 x 2 ,\u2009...,\u2009 x a  is not  lexicographically  greater than  y 1 ,\u2009 y 2 ,\u2009...,\u2009 y b  if one of the two following conditions holds:      a \u2009\u2264\u2009 b  and  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x a \u2009=\u2009 y a , i.e. the first word is the prefix of the second word;   there is a position  1\u2009\u2264\u2009 j \u2009\u2264\u2009 min ( a ,\u2009 b ) , such that  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x j \u2009-\u20091 \u2009=\u2009 y j \u2009-\u20091  and  x j \u2009<\u2009 y j , i.e. at the first position where the words differ the first word has a smaller letter than the second word has.    For example, the word \" 3'   7   5 \" is before the word \" 2   4'   6 \" in lexicographical order. It is said that sequence of words is in lexicographical order if each word is not lexicographically greater than the next word in the sequence. Denis has a sequence of words consisting of small letters only. He wants to change some letters to large (let's call this process a  capitalization ) in such a way that the sequence of words is in lexicographical order. However, he soon realized that for some reason he can't change a single letter in a single word. He only can choose a letter and change all of its occurrences in  all  words to large letters. He can perform this operation any number of times with arbitrary letters of Bookland's alphabet. Help Denis to choose which letters he needs to capitalize (make large) in order to make the sequence of words lexicographically ordered, or determine that it is impossible. Note that some words can be  equal . Input The first line contains two integers  n  and  m  ( 2\u2009\u2264\u2009 n \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 m \u2009\u2264\u2009100\u2009000 )\u00a0\u2014 the number of words and the number of letters in Bookland's alphabet, respectively. The letters of Bookland's alphabet are denoted by integers from  1  to  m . Each of the next  n  lines contains a description of one word in format  l i ,\u2009 s i ,\u20091 ,\u2009 s i ,\u20092 ,\u2009...,\u2009 s i ,\u2009 l i  ( 1\u2009\u2264\u2009 l i \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 s i ,\u2009 j \u2009\u2264\u2009 m ), where  l i  is the length of the word, and  s i ,\u2009 j  is the sequence of letters in the word. The words are given in the order Denis has them in the sequence. It is guaranteed that the total length of all words is not greater than  100\u2009000 . Output In the first line print \" Yes \" (without quotes), if it is possible to capitalize some set of letters in such a way that the sequence of words becomes lexicographically ordered. Otherwise, print \" No \" (without quotes). If the required is possible, in the second line print  k \u00a0\u2014 the number of letters Denis has to capitalize (make large), and in the third line print  k  distinct integers\u00a0\u2014 these letters. Note that you  don't need to minimize  the value  k . You can print the letters in any order. If there are multiple answers, print any of them. Examples Input 4 3 1 2 1 1 3 1 3 2 2 1 1 Output Yes 2 2 3  Input 6 5 2 1 2 2 1 2 3 1 2 3 2 1 5 2 4 4 2 4 4 Output Yes 0 Input 4 3 4 3 2 2 1 3 1 1 3 3 2 3 3 2 3 1 Output No Note In the first example after Denis makes letters  2  and  3  large, the sequence looks like the following:     2'     1     1   3'   2'     1   1   The condition  2'\u2009<\u20091  holds, so the first word is not lexicographically larger than the second word. The second word is the prefix of the third word, so the are in lexicographical order. As the first letters of the third and the fourth words are the same, and  3'\u2009<\u20091 , then the third word is not lexicographically larger than the fourth word. In the second example the words are in lexicographical order from the beginning, so Denis can do nothing. In the third example there is no set of letters such that if Denis capitalizes them, the sequence becomes lexicographically ordered. C. National Property time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output You all know that the Library of Bookland is the largest library in the world. There are dozens of thousands of books in the library. Some long and uninteresting story was removed... The alphabet of Bookland is so large that its letters are denoted by positive integers. Each letter can be small or large, the large version of a letter  x  is denoted by  x ' . BSCII encoding, which is used everywhere in Bookland, is made in that way so that large letters are presented in the order of the numbers they are denoted by, and small letters are presented in the order of the numbers they are denoted by, but all large letters are  before  all small letters. For example, the following conditions hold:  2\u2009<\u20093 ,  2'\u2009<\u20093' ,  3'\u2009<\u20092 . A word  x 1 ,\u2009 x 2 ,\u2009...,\u2009 x a  is not  lexicographically  greater than  y 1 ,\u2009 y 2 ,\u2009...,\u2009 y b  if one of the two following conditions holds:      a \u2009\u2264\u2009 b  and  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x a \u2009=\u2009 y a , i.e. the first word is the prefix of the second word;   there is a position  1\u2009\u2264\u2009 j \u2009\u2264\u2009 min ( a ,\u2009 b ) , such that  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x j \u2009-\u20091 \u2009=\u2009 y j \u2009-\u20091  and  x j \u2009<\u2009 y j , i.e. at the first position where the words differ the first word has a smaller letter than the second word has.    For example, the word \" 3'   7   5 \" is before the word \" 2   4'   6 \" in lexicographical order. It is said that sequence of words is in lexicographical order if each word is not lexicographically greater than the next word in the sequence. Denis has a sequence of words consisting of small letters only. He wants to change some letters to large (let's call this process a  capitalization ) in such a way that the sequence of words is in lexicographical order. However, he soon realized that for some reason he can't change a single letter in a single word. He only can choose a letter and change all of its occurrences in  all  words to large letters. He can perform this operation any number of times with arbitrary letters of Bookland's alphabet. Help Denis to choose which letters he needs to capitalize (make large) in order to make the sequence of words lexicographically ordered, or determine that it is impossible. Note that some words can be  equal . Input The first line contains two integers  n  and  m  ( 2\u2009\u2264\u2009 n \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 m \u2009\u2264\u2009100\u2009000 )\u00a0\u2014 the number of words and the number of letters in Bookland's alphabet, respectively. The letters of Bookland's alphabet are denoted by integers from  1  to  m . Each of the next  n  lines contains a description of one word in format  l i ,\u2009 s i ,\u20091 ,\u2009 s i ,\u20092 ,\u2009...,\u2009 s i ,\u2009 l i  ( 1\u2009\u2264\u2009 l i \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 s i ,\u2009 j \u2009\u2264\u2009 m ), where  l i  is the length of the word, and  s i ,\u2009 j  is the sequence of letters in the word. The words are given in the order Denis has them in the sequence. It is guaranteed that the total length of all words is not greater than  100\u2009000 . Output In the first line print \" Yes \" (without quotes), if it is possible to capitalize some set of letters in such a way that the sequence of words becomes lexicographically ordered. Otherwise, print \" No \" (without quotes). If the required is possible, in the second line print  k \u00a0\u2014 the number of letters Denis has to capitalize (make large), and in the third line print  k  distinct integers\u00a0\u2014 these letters. Note that you  don't need to minimize  the value  k . You can print the letters in any order. If there are multiple answers, print any of them. Examples Input 4 3 1 2 1 1 3 1 3 2 2 1 1 Output Yes 2 2 3  Input 6 5 2 1 2 2 1 2 3 1 2 3 2 1 5 2 4 4 2 4 4 Output Yes 0 Input 4 3 4 3 2 2 1 3 1 1 3 3 2 3 3 2 3 1 Output No Note In the first example after Denis makes letters  2  and  3  large, the sequence looks like the following:     2'     1     1   3'   2'     1   1   The condition  2'\u2009<\u20091  holds, so the first word is not lexicographically larger than the second word. The second word is the prefix of the third word, so the are in lexicographical order. As the first letters of the third and the fourth words are the same, and  3'\u2009<\u20091 , then the third word is not lexicographically larger than the fourth word. In the second example the words are in lexicographical order from the beginning, so Denis can do nothing. In the third example there is no set of letters such that if Denis capitalizes them, the sequence becomes lexicographically ordered. C. National Property time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output You all know that the Library of Bookland is the largest library in the world. There are dozens of thousands of books in the library. Some long and uninteresting story was removed... The alphabet of Bookland is so large that its letters are denoted by positive integers. Each letter can be small or large, the large version of a letter  x  is denoted by  x ' . BSCII encoding, which is used everywhere in Bookland, is made in that way so that large letters are presented in the order of the numbers they are denoted by, and small letters are presented in the order of the numbers they are denoted by, but all large letters are  before  all small letters. For example, the following conditions hold:  2\u2009<\u20093 ,  2'\u2009<\u20093' ,  3'\u2009<\u20092 . A word  x 1 ,\u2009 x 2 ,\u2009...,\u2009 x a  is not  lexicographically  greater than  y 1 ,\u2009 y 2 ,\u2009...,\u2009 y b  if one of the two following conditions holds:      a \u2009\u2264\u2009 b  and  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x a \u2009=\u2009 y a , i.e. the first word is the prefix of the second word;   there is a position  1\u2009\u2264\u2009 j \u2009\u2264\u2009 min ( a ,\u2009 b ) , such that  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x j \u2009-\u20091 \u2009=\u2009 y j \u2009-\u20091  and  x j \u2009<\u2009 y j , i.e. at the first position where the words differ the first word has a smaller letter than the second word has.    For example, the word \" 3'   7   5 \" is before the word \" 2   4'   6 \" in lexicographical order. It is said that sequence of words is in lexicographical order if each word is not lexicographically greater than the next word in the sequence. Denis has a sequence of words consisting of small letters only. He wants to change some letters to large (let's call this process a  capitalization ) in such a way that the sequence of words is in lexicographical order. However, he soon realized that for some reason he can't change a single letter in a single word. He only can choose a letter and change all of its occurrences in  all  words to large letters. He can perform this operation any number of times with arbitrary letters of Bookland's alphabet. Help Denis to choose which letters he needs to capitalize (make large) in order to make the sequence of words lexicographically ordered, or determine that it is impossible. Note that some words can be  equal . Input The first line contains two integers  n  and  m  ( 2\u2009\u2264\u2009 n \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 m \u2009\u2264\u2009100\u2009000 )\u00a0\u2014 the number of words and the number of letters in Bookland's alphabet, respectively. The letters of Bookland's alphabet are denoted by integers from  1  to  m . Each of the next  n  lines contains a description of one word in format  l i ,\u2009 s i ,\u20091 ,\u2009 s i ,\u20092 ,\u2009...,\u2009 s i ,\u2009 l i  ( 1\u2009\u2264\u2009 l i \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 s i ,\u2009 j \u2009\u2264\u2009 m ), where  l i  is the length of the word, and  s i ,\u2009 j  is the sequence of letters in the word. The words are given in the order Denis has them in the sequence. It is guaranteed that the total length of all words is not greater than  100\u2009000 . Output In the first line print \" Yes \" (without quotes), if it is possible to capitalize some set of letters in such a way that the sequence of words becomes lexicographically ordered. Otherwise, print \" No \" (without quotes). If the required is possible, in the second line print  k \u00a0\u2014 the number of letters Denis has to capitalize (make large), and in the third line print  k  distinct integers\u00a0\u2014 these letters. Note that you  don't need to minimize  the value  k . You can print the letters in any order. If there are multiple answers, print any of them. Examples Input 4 3 1 2 1 1 3 1 3 2 2 1 1 Output Yes 2 2 3  Input 6 5 2 1 2 2 1 2 3 1 2 3 2 1 5 2 4 4 2 4 4 Output Yes 0 Input 4 3 4 3 2 2 1 3 1 1 3 3 2 3 3 2 3 1 Output No Note In the first example after Denis makes letters  2  and  3  large, the sequence looks like the following:     2'     1     1   3'   2'     1   1   The condition  2'\u2009<\u20091  holds, so the first word is not lexicographically larger than the second word. The second word is the prefix of the third word, so the are in lexicographical order. As the first letters of the third and the fourth words are the same, and  3'\u2009<\u20091 , then the third word is not lexicographically larger than the fourth word. In the second example the words are in lexicographical order from the beginning, so Denis can do nothing. In the third example there is no set of letters such that if Denis capitalizes them, the sequence becomes lexicographically ordered. C. National Property time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output You all know that the Library of Bookland is the largest library in the world. There are dozens of thousands of books in the library. Some long and uninteresting story was removed... The alphabet of Bookland is so large that its letters are denoted by positive integers. Each letter can be small or large, the large version of a letter  x  is denoted by  x ' . BSCII encoding, which is used everywhere in Bookland, is made in that way so that large letters are presented in the order of the numbers they are denoted by, and small letters are presented in the order of the numbers they are denoted by, but all large letters are  before  all small letters. For example, the following conditions hold:  2\u2009<\u20093 ,  2'\u2009<\u20093' ,  3'\u2009<\u20092 . A word  x 1 ,\u2009 x 2 ,\u2009...,\u2009 x a  is not  lexicographically  greater than  y 1 ,\u2009 y 2 ,\u2009...,\u2009 y b  if one of the two following conditions holds:      a \u2009\u2264\u2009 b  and  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x a \u2009=\u2009 y a , i.e. the first word is the prefix of the second word;   there is a position  1\u2009\u2264\u2009 j \u2009\u2264\u2009 min ( a ,\u2009 b ) , such that  x 1 \u2009=\u2009 y 1 ,\u2009...,\u2009 x j \u2009-\u20091 \u2009=\u2009 y j \u2009-\u20091  and  x j \u2009<\u2009 y j , i.e. at the first position where the words differ the first word has a smaller letter than the second word has.    For example, the word \" 3'   7   5 \" is before the word \" 2   4'   6 \" in lexicographical order. It is said that sequence of words is in lexicographical order if each word is not lexicographically greater than the next word in the sequence. Denis has a sequence of words consisting of small letters only. He wants to change some letters to large (let's call this process a  capitalization ) in such a way that the sequence of words is in lexicographical order. However, he soon realized that for some reason he can't change a single letter in a single word. He only can choose a letter and change all of its occurrences in  all  words to large letters. He can perform this operation any number of times with arbitrary letters of Bookland's alphabet. Help Denis to choose which letters he needs to capitalize (make large) in order to make the sequence of words lexicographically ordered, or determine that it is impossible. Note that some words can be  equal . Input The first line contains two integers  n  and  m  ( 2\u2009\u2264\u2009 n \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 m \u2009\u2264\u2009100\u2009000 )\u00a0\u2014 the number of words and the number of letters in Bookland's alphabet, respectively. The letters of Bookland's alphabet are denoted by integers from  1  to  m . Each of the next  n  lines contains a description of one word in format  l i ,\u2009 s i ,\u20091 ,\u2009 s i ,\u20092 ,\u2009...,\u2009 s i ,\u2009 l i  ( 1\u2009\u2264\u2009 l i \u2009\u2264\u2009100\u2009000 ,  1\u2009\u2264\u2009 s i ,\u2009 j \u2009\u2264\u2009 m ), where  l i  is the length of the word, and  s i ,\u2009 j  is the sequence of letters in the word. The words are given in the order Denis has them in the sequence. It is guaranteed that the total length of all words is not greater than  100\u2009000 . Output In the first line print \" Yes \" (without quotes), if it is possible to capitalize some set of letters in such a way that the sequence of words becomes lexicographically ordered. Otherwise, print \" No \" (without quotes). If the required is possible, in the second line print  k \u00a0\u2014 the number of letters Denis has to capitalize (make large), and in the third line print  k  distinct integers\u00a0\u2014 these letters. Note that you  don't need to minimize  the value  k . You can print the letters in any order. If there are multiple answers, print any of them. Examples Input 4 3 1 2 1 1 3 1 3 2 2 1 1 Output Yes 2 2 3  Input 6 5 2 1 2 2 1 2 3 1 2 3 2 1 5 2 4 4 2 4 4 Output Yes 0 Input 4 3 4 3 2 2 1 3 1 1 3 3 2 3 3 2 3 1 Output No Note In the first example after Denis makes letters  2  and  3  large, the sequence looks like the following:     2'     1     1   3'   2'     1   1   The condition  2'\u2009<\u20091  holds, so the first word is not lexicographically larger than the second word. The second word is the prefix of the third word, so the are in lexicographical order. As the first letters of the third and the fourth words are the same, and  3'\u2009<\u20091 , then the third word is not lexicographically larger than the fourth word. In the second example the words are in lexicographical order from the beginning, so Denis can do nothing. In the third example there is no set of letters such that if Denis capitalizes them, the sequence becomes lexicographically ordered."}