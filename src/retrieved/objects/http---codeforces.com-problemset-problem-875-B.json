{"title": "Sorting the Coins", "time-limit": 1000, "memory-limit": 512, "props": {"the following": "    He looks ", "this way": " XOXX ", "Server time": "  Dec"}, "statement": "B. Sorting the Coins time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output Recently, Dima met with Sasha in a philatelic store, and since then they are collecting coins together. Their favorite occupation is to sort collections of coins. Sasha likes having things in order, that is why he wants his coins to be arranged in a row in such a way that firstly come coins out of circulation, and then come coins still in circulation.  For arranging coins Dima uses the following algorithm. One step of his algorithm looks like the following:    He looks through all the coins from left to right;   If he sees that the  i -th coin is still in circulation, and  ( i \u2009+\u20091) -th coin is already out of circulation, he exchanges these two coins and continues watching coins from  ( i \u2009+\u20091) -th.    Dima repeats the procedure above until it happens that no two coins were exchanged during this procedure. Dima calls  hardness of ordering  the number of steps required for him according to the algorithm above to sort the sequence, e.g. the number of times he looks through the coins from the very beginning. For example, for the ordered sequence hardness of ordering equals one. Today Sasha invited Dima and proposed him a game. First he puts  n  coins in a row, all of them are out of circulation. Then Sasha chooses one of the coins out of circulation and replaces it with a coin in circulation for  n  times. During this process Sasha constantly asks Dima what is the hardness of ordering of the sequence.  The task is more complicated because Dima should not touch the coins and he should determine hardness of ordering in his mind. Help Dima with this task.  Input The first line contains single integer  n  ( 1\u2009\u2264\u2009 n \u2009\u2264\u2009300\u2009000 )\u00a0\u2014 number of coins that Sasha puts behind Dima. Second line contains  n  distinct integers  p 1 ,\u2009 p 2 ,\u2009...,\u2009 p n  ( 1\u2009\u2264\u2009 p i \u2009\u2264\u2009 n )\u00a0\u2014 positions that Sasha puts coins in circulation to. At first Sasha replaces coin located at position  p 1 , then coin located at position  p 2  and so on. Coins are numbered from left to right. Output Print  n \u2009+\u20091  numbers  a 0 ,\u2009 a 1 ,\u2009...,\u2009 a n , where  a 0  is a hardness of ordering at the beginning,  a 1  is a hardness of ordering after the first replacement and so on.  Examples Input 4 1 3 4 2 Output 1 2 3 2 1 Input 8 6 8 3 4 7 2 1 5 Output 1 2 2 3 4 3 4 5 1 Note Let's denote as  O  coin out of circulation, and as  X  \u2014 coin is circulation. At the first sample, initially in row there are coins that are not in circulation, so Dima will look through them from left to right and won't make any exchanges. After replacement of the first coin with a coin in circulation, Dima will exchange this coin with next three times and after that he will finally look through the coins and finish the process. XOOO   \u2009\u2192\u2009   OOOX After replacement of the third coin, Dima's actions look this way: XOXO   \u2009\u2192\u2009   OXOX   \u2009\u2192\u2009   OOXX After replacement of the fourth coin, Dima's actions look this way: XOXX   \u2009\u2192\u2009   OXXX Finally, after replacement of the second coin, row becomes consisting of coins that are in circulation and Dima will look through coins from left to right without any exchanges. B. Sorting the Coins time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output Recently, Dima met with Sasha in a philatelic store, and since then they are collecting coins together. Their favorite occupation is to sort collections of coins. Sasha likes having things in order, that is why he wants his coins to be arranged in a row in such a way that firstly come coins out of circulation, and then come coins still in circulation.  For arranging coins Dima uses the following algorithm. One step of his algorithm looks like the following:    He looks through all the coins from left to right;   If he sees that the  i -th coin is still in circulation, and  ( i \u2009+\u20091) -th coin is already out of circulation, he exchanges these two coins and continues watching coins from  ( i \u2009+\u20091) -th.    Dima repeats the procedure above until it happens that no two coins were exchanged during this procedure. Dima calls  hardness of ordering  the number of steps required for him according to the algorithm above to sort the sequence, e.g. the number of times he looks through the coins from the very beginning. For example, for the ordered sequence hardness of ordering equals one. Today Sasha invited Dima and proposed him a game. First he puts  n  coins in a row, all of them are out of circulation. Then Sasha chooses one of the coins out of circulation and replaces it with a coin in circulation for  n  times. During this process Sasha constantly asks Dima what is the hardness of ordering of the sequence.  The task is more complicated because Dima should not touch the coins and he should determine hardness of ordering in his mind. Help Dima with this task.  Input The first line contains single integer  n  ( 1\u2009\u2264\u2009 n \u2009\u2264\u2009300\u2009000 )\u00a0\u2014 number of coins that Sasha puts behind Dima. Second line contains  n  distinct integers  p 1 ,\u2009 p 2 ,\u2009...,\u2009 p n  ( 1\u2009\u2264\u2009 p i \u2009\u2264\u2009 n )\u00a0\u2014 positions that Sasha puts coins in circulation to. At first Sasha replaces coin located at position  p 1 , then coin located at position  p 2  and so on. Coins are numbered from left to right. Output Print  n \u2009+\u20091  numbers  a 0 ,\u2009 a 1 ,\u2009...,\u2009 a n , where  a 0  is a hardness of ordering at the beginning,  a 1  is a hardness of ordering after the first replacement and so on.  Examples Input 4 1 3 4 2 Output 1 2 3 2 1 Input 8 6 8 3 4 7 2 1 5 Output 1 2 2 3 4 3 4 5 1 Note Let's denote as  O  coin out of circulation, and as  X  \u2014 coin is circulation. At the first sample, initially in row there are coins that are not in circulation, so Dima will look through them from left to right and won't make any exchanges. After replacement of the first coin with a coin in circulation, Dima will exchange this coin with next three times and after that he will finally look through the coins and finish the process. XOOO   \u2009\u2192\u2009   OOOX After replacement of the third coin, Dima's actions look this way: XOXO   \u2009\u2192\u2009   OXOX   \u2009\u2192\u2009   OOXX After replacement of the fourth coin, Dima's actions look this way: XOXX   \u2009\u2192\u2009   OXXX Finally, after replacement of the second coin, row becomes consisting of coins that are in circulation and Dima will look through coins from left to right without any exchanges. B. Sorting the Coins time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output Recently, Dima met with Sasha in a philatelic store, and since then they are collecting coins together. Their favorite occupation is to sort collections of coins. Sasha likes having things in order, that is why he wants his coins to be arranged in a row in such a way that firstly come coins out of circulation, and then come coins still in circulation.  For arranging coins Dima uses the following algorithm. One step of his algorithm looks like the following:    He looks through all the coins from left to right;   If he sees that the  i -th coin is still in circulation, and  ( i \u2009+\u20091) -th coin is already out of circulation, he exchanges these two coins and continues watching coins from  ( i \u2009+\u20091) -th.    Dima repeats the procedure above until it happens that no two coins were exchanged during this procedure. Dima calls  hardness of ordering  the number of steps required for him according to the algorithm above to sort the sequence, e.g. the number of times he looks through the coins from the very beginning. For example, for the ordered sequence hardness of ordering equals one. Today Sasha invited Dima and proposed him a game. First he puts  n  coins in a row, all of them are out of circulation. Then Sasha chooses one of the coins out of circulation and replaces it with a coin in circulation for  n  times. During this process Sasha constantly asks Dima what is the hardness of ordering of the sequence.  The task is more complicated because Dima should not touch the coins and he should determine hardness of ordering in his mind. Help Dima with this task.  Input The first line contains single integer  n  ( 1\u2009\u2264\u2009 n \u2009\u2264\u2009300\u2009000 )\u00a0\u2014 number of coins that Sasha puts behind Dima. Second line contains  n  distinct integers  p 1 ,\u2009 p 2 ,\u2009...,\u2009 p n  ( 1\u2009\u2264\u2009 p i \u2009\u2264\u2009 n )\u00a0\u2014 positions that Sasha puts coins in circulation to. At first Sasha replaces coin located at position  p 1 , then coin located at position  p 2  and so on. Coins are numbered from left to right. Output Print  n \u2009+\u20091  numbers  a 0 ,\u2009 a 1 ,\u2009...,\u2009 a n , where  a 0  is a hardness of ordering at the beginning,  a 1  is a hardness of ordering after the first replacement and so on.  Examples Input 4 1 3 4 2 Output 1 2 3 2 1 Input 8 6 8 3 4 7 2 1 5 Output 1 2 2 3 4 3 4 5 1 Note Let's denote as  O  coin out of circulation, and as  X  \u2014 coin is circulation. At the first sample, initially in row there are coins that are not in circulation, so Dima will look through them from left to right and won't make any exchanges. After replacement of the first coin with a coin in circulation, Dima will exchange this coin with next three times and after that he will finally look through the coins and finish the process. XOOO   \u2009\u2192\u2009   OOOX After replacement of the third coin, Dima's actions look this way: XOXO   \u2009\u2192\u2009   OXOX   \u2009\u2192\u2009   OOXX After replacement of the fourth coin, Dima's actions look this way: XOXX   \u2009\u2192\u2009   OXXX Finally, after replacement of the second coin, row becomes consisting of coins that are in circulation and Dima will look through coins from left to right without any exchanges. B. Sorting the Coins time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output Recently, Dima met with Sasha in a philatelic store, and since then they are collecting coins together. Their favorite occupation is to sort collections of coins. Sasha likes having things in order, that is why he wants his coins to be arranged in a row in such a way that firstly come coins out of circulation, and then come coins still in circulation.  For arranging coins Dima uses the following algorithm. One step of his algorithm looks like the following:    He looks through all the coins from left to right;   If he sees that the  i -th coin is still in circulation, and  ( i \u2009+\u20091) -th coin is already out of circulation, he exchanges these two coins and continues watching coins from  ( i \u2009+\u20091) -th.    Dima repeats the procedure above until it happens that no two coins were exchanged during this procedure. Dima calls  hardness of ordering  the number of steps required for him according to the algorithm above to sort the sequence, e.g. the number of times he looks through the coins from the very beginning. For example, for the ordered sequence hardness of ordering equals one. Today Sasha invited Dima and proposed him a game. First he puts  n  coins in a row, all of them are out of circulation. Then Sasha chooses one of the coins out of circulation and replaces it with a coin in circulation for  n  times. During this process Sasha constantly asks Dima what is the hardness of ordering of the sequence.  The task is more complicated because Dima should not touch the coins and he should determine hardness of ordering in his mind. Help Dima with this task.  Input The first line contains single integer  n  ( 1\u2009\u2264\u2009 n \u2009\u2264\u2009300\u2009000 )\u00a0\u2014 number of coins that Sasha puts behind Dima. Second line contains  n  distinct integers  p 1 ,\u2009 p 2 ,\u2009...,\u2009 p n  ( 1\u2009\u2264\u2009 p i \u2009\u2264\u2009 n )\u00a0\u2014 positions that Sasha puts coins in circulation to. At first Sasha replaces coin located at position  p 1 , then coin located at position  p 2  and so on. Coins are numbered from left to right. Output Print  n \u2009+\u20091  numbers  a 0 ,\u2009 a 1 ,\u2009...,\u2009 a n , where  a 0  is a hardness of ordering at the beginning,  a 1  is a hardness of ordering after the first replacement and so on.  Examples Input 4 1 3 4 2 Output 1 2 3 2 1 Input 8 6 8 3 4 7 2 1 5 Output 1 2 2 3 4 3 4 5 1 Note Let's denote as  O  coin out of circulation, and as  X  \u2014 coin is circulation. At the first sample, initially in row there are coins that are not in circulation, so Dima will look through them from left to right and won't make any exchanges. After replacement of the first coin with a coin in circulation, Dima will exchange this coin with next three times and after that he will finally look through the coins and finish the process. XOOO   \u2009\u2192\u2009   OOOX After replacement of the third coin, Dima's actions look this way: XOXO   \u2009\u2192\u2009   OXOX   \u2009\u2192\u2009   OOXX After replacement of the fourth coin, Dima's actions look this way: XOXX   \u2009\u2192\u2009   OXXX Finally, after replacement of the second coin, row becomes consisting of coins that are in circulation and Dima will look through coins from left to right without any exchanges. B. Sorting the Coins time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output Recently, Dima met with Sasha in a philatelic store, and since then they are collecting coins together. Their favorite occupation is to sort collections of coins. Sasha likes having things in order, that is why he wants his coins to be arranged in a row in such a way that firstly come coins out of circulation, and then come coins still in circulation.  For arranging coins Dima uses the following algorithm. One step of his algorithm looks like the following:    He looks through all the coins from left to right;   If he sees that the  i -th coin is still in circulation, and  ( i \u2009+\u20091) -th coin is already out of circulation, he exchanges these two coins and continues watching coins from  ( i \u2009+\u20091) -th.    Dima repeats the procedure above until it happens that no two coins were exchanged during this procedure. Dima calls  hardness of ordering  the number of steps required for him according to the algorithm above to sort the sequence, e.g. the number of times he looks through the coins from the very beginning. For example, for the ordered sequence hardness of ordering equals one. Today Sasha invited Dima and proposed him a game. First he puts  n  coins in a row, all of them are out of circulation. Then Sasha chooses one of the coins out of circulation and replaces it with a coin in circulation for  n  times. During this process Sasha constantly asks Dima what is the hardness of ordering of the sequence.  The task is more complicated because Dima should not touch the coins and he should determine hardness of ordering in his mind. Help Dima with this task.  Input The first line contains single integer  n  ( 1\u2009\u2264\u2009 n \u2009\u2264\u2009300\u2009000 )\u00a0\u2014 number of coins that Sasha puts behind Dima. Second line contains  n  distinct integers  p 1 ,\u2009 p 2 ,\u2009...,\u2009 p n  ( 1\u2009\u2264\u2009 p i \u2009\u2264\u2009 n )\u00a0\u2014 positions that Sasha puts coins in circulation to. At first Sasha replaces coin located at position  p 1 , then coin located at position  p 2  and so on. Coins are numbered from left to right. Output Print  n \u2009+\u20091  numbers  a 0 ,\u2009 a 1 ,\u2009...,\u2009 a n , where  a 0  is a hardness of ordering at the beginning,  a 1  is a hardness of ordering after the first replacement and so on.  Examples Input 4 1 3 4 2 Output 1 2 3 2 1 Input 8 6 8 3 4 7 2 1 5 Output 1 2 2 3 4 3 4 5 1 Note Let's denote as  O  coin out of circulation, and as  X  \u2014 coin is circulation. At the first sample, initially in row there are coins that are not in circulation, so Dima will look through them from left to right and won't make any exchanges. After replacement of the first coin with a coin in circulation, Dima will exchange this coin with next three times and after that he will finally look through the coins and finish the process. XOOO   \u2009\u2192\u2009   OOOX After replacement of the third coin, Dima's actions look this way: XOXO   \u2009\u2192\u2009   OXOX   \u2009\u2192\u2009   OOXX After replacement of the fourth coin, Dima's actions look this way: XOXX   \u2009\u2192\u2009   OXXX Finally, after replacement of the second coin, row becomes consisting of coins that are in circulation and Dima will look through coins from left to right without any exchanges. B. Sorting the Coins time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output Recently, Dima met with Sasha in a philatelic store, and since then they are collecting coins together. Their favorite occupation is to sort collections of coins. Sasha likes having things in order, that is why he wants his coins to be arranged in a row in such a way that firstly come coins out of circulation, and then come coins still in circulation.  For arranging coins Dima uses the following algorithm. One step of his algorithm looks like the following:    He looks through all the coins from left to right;   If he sees that the  i -th coin is still in circulation, and  ( i \u2009+\u20091) -th coin is already out of circulation, he exchanges these two coins and continues watching coins from  ( i \u2009+\u20091) -th.    Dima repeats the procedure above until it happens that no two coins were exchanged during this procedure. Dima calls  hardness of ordering  the number of steps required for him according to the algorithm above to sort the sequence, e.g. the number of times he looks through the coins from the very beginning. For example, for the ordered sequence hardness of ordering equals one. Today Sasha invited Dima and proposed him a game. First he puts  n  coins in a row, all of them are out of circulation. Then Sasha chooses one of the coins out of circulation and replaces it with a coin in circulation for  n  times. During this process Sasha constantly asks Dima what is the hardness of ordering of the sequence.  The task is more complicated because Dima should not touch the coins and he should determine hardness of ordering in his mind. Help Dima with this task.  Input The first line contains single integer  n  ( 1\u2009\u2264\u2009 n \u2009\u2264\u2009300\u2009000 )\u00a0\u2014 number of coins that Sasha puts behind Dima. Second line contains  n  distinct integers  p 1 ,\u2009 p 2 ,\u2009...,\u2009 p n  ( 1\u2009\u2264\u2009 p i \u2009\u2264\u2009 n )\u00a0\u2014 positions that Sasha puts coins in circulation to. At first Sasha replaces coin located at position  p 1 , then coin located at position  p 2  and so on. Coins are numbered from left to right. Output Print  n \u2009+\u20091  numbers  a 0 ,\u2009 a 1 ,\u2009...,\u2009 a n , where  a 0  is a hardness of ordering at the beginning,  a 1  is a hardness of ordering after the first replacement and so on.  Examples Input 4 1 3 4 2 Output 1 2 3 2 1 Input 8 6 8 3 4 7 2 1 5 Output 1 2 2 3 4 3 4 5 1 Note Let's denote as  O  coin out of circulation, and as  X  \u2014 coin is circulation. At the first sample, initially in row there are coins that are not in circulation, so Dima will look through them from left to right and won't make any exchanges. After replacement of the first coin with a coin in circulation, Dima will exchange this coin with next three times and after that he will finally look through the coins and finish the process. XOOO   \u2009\u2192\u2009   OOOX After replacement of the third coin, Dima's actions look this way: XOXO   \u2009\u2192\u2009   OXOX   \u2009\u2192\u2009   OOXX After replacement of the fourth coin, Dima's actions look this way: XOXX   \u2009\u2192\u2009   OXXX Finally, after replacement of the second coin, row becomes consisting of coins that are in circulation and Dima will look through coins from left to right without any exchanges. B. Sorting the Coins time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output Recently, Dima met with Sasha in a philatelic store, and since then they are collecting coins together. Their favorite occupation is to sort collections of coins. Sasha likes having things in order, that is why he wants his coins to be arranged in a row in such a way that firstly come coins out of circulation, and then come coins still in circulation.  For arranging coins Dima uses the following algorithm. One step of his algorithm looks like the following:    He looks through all the coins from left to right;   If he sees that the  i -th coin is still in circulation, and  ( i \u2009+\u20091) -th coin is already out of circulation, he exchanges these two coins and continues watching coins from  ( i \u2009+\u20091) -th.    Dima repeats the procedure above until it happens that no two coins were exchanged during this procedure. Dima calls  hardness of ordering  the number of steps required for him according to the algorithm above to sort the sequence, e.g. the number of times he looks through the coins from the very beginning. For example, for the ordered sequence hardness of ordering equals one. Today Sasha invited Dima and proposed him a game. First he puts  n  coins in a row, all of them are out of circulation. Then Sasha chooses one of the coins out of circulation and replaces it with a coin in circulation for  n  times. During this process Sasha constantly asks Dima what is the hardness of ordering of the sequence.  The task is more complicated because Dima should not touch the coins and he should determine hardness of ordering in his mind. Help Dima with this task.  Input The first line contains single integer  n  ( 1\u2009\u2264\u2009 n \u2009\u2264\u2009300\u2009000 )\u00a0\u2014 number of coins that Sasha puts behind Dima. Second line contains  n  distinct integers  p 1 ,\u2009 p 2 ,\u2009...,\u2009 p n  ( 1\u2009\u2264\u2009 p i \u2009\u2264\u2009 n )\u00a0\u2014 positions that Sasha puts coins in circulation to. At first Sasha replaces coin located at position  p 1 , then coin located at position  p 2  and so on. Coins are numbered from left to right. Output Print  n \u2009+\u20091  numbers  a 0 ,\u2009 a 1 ,\u2009...,\u2009 a n , where  a 0  is a hardness of ordering at the beginning,  a 1  is a hardness of ordering after the first replacement and so on.  Examples Input 4 1 3 4 2 Output 1 2 3 2 1 Input 8 6 8 3 4 7 2 1 5 Output 1 2 2 3 4 3 4 5 1 Note Let's denote as  O  coin out of circulation, and as  X  \u2014 coin is circulation. At the first sample, initially in row there are coins that are not in circulation, so Dima will look through them from left to right and won't make any exchanges. After replacement of the first coin with a coin in circulation, Dima will exchange this coin with next three times and after that he will finally look through the coins and finish the process. XOOO   \u2009\u2192\u2009   OOOX After replacement of the third coin, Dima's actions look this way: XOXO   \u2009\u2192\u2009   OXOX   \u2009\u2192\u2009   OOXX After replacement of the fourth coin, Dima's actions look this way: XOXX   \u2009\u2192\u2009   OXXX Finally, after replacement of the second coin, row becomes consisting of coins that are in circulation and Dima will look through coins from left to right without any exchanges. B. Sorting the Coins time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output Recently, Dima met with Sasha in a philatelic store, and since then they are collecting coins together. Their favorite occupation is to sort collections of coins. Sasha likes having things in order, that is why he wants his coins to be arranged in a row in such a way that firstly come coins out of circulation, and then come coins still in circulation.  For arranging coins Dima uses the following algorithm. One step of his algorithm looks like the following:    He looks through all the coins from left to right;   If he sees that the  i -th coin is still in circulation, and  ( i \u2009+\u20091) -th coin is already out of circulation, he exchanges these two coins and continues watching coins from  ( i \u2009+\u20091) -th.    Dima repeats the procedure above until it happens that no two coins were exchanged during this procedure. Dima calls  hardness of ordering  the number of steps required for him according to the algorithm above to sort the sequence, e.g. the number of times he looks through the coins from the very beginning. For example, for the ordered sequence hardness of ordering equals one. Today Sasha invited Dima and proposed him a game. First he puts  n  coins in a row, all of them are out of circulation. Then Sasha chooses one of the coins out of circulation and replaces it with a coin in circulation for  n  times. During this process Sasha constantly asks Dima what is the hardness of ordering of the sequence.  The task is more complicated because Dima should not touch the coins and he should determine hardness of ordering in his mind. Help Dima with this task.  Input The first line contains single integer  n  ( 1\u2009\u2264\u2009 n \u2009\u2264\u2009300\u2009000 )\u00a0\u2014 number of coins that Sasha puts behind Dima. Second line contains  n  distinct integers  p 1 ,\u2009 p 2 ,\u2009...,\u2009 p n  ( 1\u2009\u2264\u2009 p i \u2009\u2264\u2009 n )\u00a0\u2014 positions that Sasha puts coins in circulation to. At first Sasha replaces coin located at position  p 1 , then coin located at position  p 2  and so on. Coins are numbered from left to right. Output Print  n \u2009+\u20091  numbers  a 0 ,\u2009 a 1 ,\u2009...,\u2009 a n , where  a 0  is a hardness of ordering at the beginning,  a 1  is a hardness of ordering after the first replacement and so on.  Examples Input 4 1 3 4 2 Output 1 2 3 2 1 Input 8 6 8 3 4 7 2 1 5 Output 1 2 2 3 4 3 4 5 1 Note Let's denote as  O  coin out of circulation, and as  X  \u2014 coin is circulation. At the first sample, initially in row there are coins that are not in circulation, so Dima will look through them from left to right and won't make any exchanges. After replacement of the first coin with a coin in circulation, Dima will exchange this coin with next three times and after that he will finally look through the coins and finish the process. XOOO   \u2009\u2192\u2009   OOOX After replacement of the third coin, Dima's actions look this way: XOXO   \u2009\u2192\u2009   OXOX   \u2009\u2192\u2009   OOXX After replacement of the fourth coin, Dima's actions look this way: XOXX   \u2009\u2192\u2009   OXXX Finally, after replacement of the second coin, row becomes consisting of coins that are in circulation and Dima will look through coins from left to right without any exchanges. B. Sorting the Coins time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output Recently, Dima met with Sasha in a philatelic store, and since then they are collecting coins together. Their favorite occupation is to sort collections of coins. Sasha likes having things in order, that is why he wants his coins to be arranged in a row in such a way that firstly come coins out of circulation, and then come coins still in circulation.  For arranging coins Dima uses the following algorithm. One step of his algorithm looks like the following:    He looks through all the coins from left to right;   If he sees that the  i -th coin is still in circulation, and  ( i \u2009+\u20091) -th coin is already out of circulation, he exchanges these two coins and continues watching coins from  ( i \u2009+\u20091) -th.    Dima repeats the procedure above until it happens that no two coins were exchanged during this procedure. Dima calls  hardness of ordering  the number of steps required for him according to the algorithm above to sort the sequence, e.g. the number of times he looks through the coins from the very beginning. For example, for the ordered sequence hardness of ordering equals one. Today Sasha invited Dima and proposed him a game. First he puts  n  coins in a row, all of them are out of circulation. Then Sasha chooses one of the coins out of circulation and replaces it with a coin in circulation for  n  times. During this process Sasha constantly asks Dima what is the hardness of ordering of the sequence.  The task is more complicated because Dima should not touch the coins and he should determine hardness of ordering in his mind. Help Dima with this task.  Input The first line contains single integer  n  ( 1\u2009\u2264\u2009 n \u2009\u2264\u2009300\u2009000 )\u00a0\u2014 number of coins that Sasha puts behind Dima. Second line contains  n  distinct integers  p 1 ,\u2009 p 2 ,\u2009...,\u2009 p n  ( 1\u2009\u2264\u2009 p i \u2009\u2264\u2009 n )\u00a0\u2014 positions that Sasha puts coins in circulation to. At first Sasha replaces coin located at position  p 1 , then coin located at position  p 2  and so on. Coins are numbered from left to right. Output Print  n \u2009+\u20091  numbers  a 0 ,\u2009 a 1 ,\u2009...,\u2009 a n , where  a 0  is a hardness of ordering at the beginning,  a 1  is a hardness of ordering after the first replacement and so on.  Examples Input 4 1 3 4 2 Output 1 2 3 2 1 Input 8 6 8 3 4 7 2 1 5 Output 1 2 2 3 4 3 4 5 1 Note Let's denote as  O  coin out of circulation, and as  X  \u2014 coin is circulation. At the first sample, initially in row there are coins that are not in circulation, so Dima will look through them from left to right and won't make any exchanges. After replacement of the first coin with a coin in circulation, Dima will exchange this coin with next three times and after that he will finally look through the coins and finish the process. XOOO   \u2009\u2192\u2009   OOOX After replacement of the third coin, Dima's actions look this way: XOXO   \u2009\u2192\u2009   OXOX   \u2009\u2192\u2009   OOXX After replacement of the fourth coin, Dima's actions look this way: XOXX   \u2009\u2192\u2009   OXXX Finally, after replacement of the second coin, row becomes consisting of coins that are in circulation and Dima will look through coins from left to right without any exchanges. B. Sorting the Coins time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output Recently, Dima met with Sasha in a philatelic store, and since then they are collecting coins together. Their favorite occupation is to sort collections of coins. Sasha likes having things in order, that is why he wants his coins to be arranged in a row in such a way that firstly come coins out of circulation, and then come coins still in circulation.  For arranging coins Dima uses the following algorithm. One step of his algorithm looks like the following:    He looks through all the coins from left to right;   If he sees that the  i -th coin is still in circulation, and  ( i \u2009+\u20091) -th coin is already out of circulation, he exchanges these two coins and continues watching coins from  ( i \u2009+\u20091) -th.    Dima repeats the procedure above until it happens that no two coins were exchanged during this procedure. Dima calls  hardness of ordering  the number of steps required for him according to the algorithm above to sort the sequence, e.g. the number of times he looks through the coins from the very beginning. For example, for the ordered sequence hardness of ordering equals one. Today Sasha invited Dima and proposed him a game. First he puts  n  coins in a row, all of them are out of circulation. Then Sasha chooses one of the coins out of circulation and replaces it with a coin in circulation for  n  times. During this process Sasha constantly asks Dima what is the hardness of ordering of the sequence.  The task is more complicated because Dima should not touch the coins and he should determine hardness of ordering in his mind. Help Dima with this task.  Input The first line contains single integer  n  ( 1\u2009\u2264\u2009 n \u2009\u2264\u2009300\u2009000 )\u00a0\u2014 number of coins that Sasha puts behind Dima. Second line contains  n  distinct integers  p 1 ,\u2009 p 2 ,\u2009...,\u2009 p n  ( 1\u2009\u2264\u2009 p i \u2009\u2264\u2009 n )\u00a0\u2014 positions that Sasha puts coins in circulation to. At first Sasha replaces coin located at position  p 1 , then coin located at position  p 2  and so on. Coins are numbered from left to right. Output Print  n \u2009+\u20091  numbers  a 0 ,\u2009 a 1 ,\u2009...,\u2009 a n , where  a 0  is a hardness of ordering at the beginning,  a 1  is a hardness of ordering after the first replacement and so on.  Examples Input 4 1 3 4 2 Output 1 2 3 2 1 Input 8 6 8 3 4 7 2 1 5 Output 1 2 2 3 4 3 4 5 1 Note Let's denote as  O  coin out of circulation, and as  X  \u2014 coin is circulation. At the first sample, initially in row there are coins that are not in circulation, so Dima will look through them from left to right and won't make any exchanges. After replacement of the first coin with a coin in circulation, Dima will exchange this coin with next three times and after that he will finally look through the coins and finish the process. XOOO   \u2009\u2192\u2009   OOOX After replacement of the third coin, Dima's actions look this way: XOXO   \u2009\u2192\u2009   OXOX   \u2009\u2192\u2009   OOXX After replacement of the fourth coin, Dima's actions look this way: XOXX   \u2009\u2192\u2009   OXXX Finally, after replacement of the second coin, row becomes consisting of coins that are in circulation and Dima will look through coins from left to right without any exchanges. B. Sorting the Coins time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output Recently, Dima met with Sasha in a philatelic store, and since then they are collecting coins together. Their favorite occupation is to sort collections of coins. Sasha likes having things in order, that is why he wants his coins to be arranged in a row in such a way that firstly come coins out of circulation, and then come coins still in circulation.  For arranging coins Dima uses the following algorithm. One step of his algorithm looks like the following:    He looks through all the coins from left to right;   If he sees that the  i -th coin is still in circulation, and  ( i \u2009+\u20091) -th coin is already out of circulation, he exchanges these two coins and continues watching coins from  ( i \u2009+\u20091) -th.    Dima repeats the procedure above until it happens that no two coins were exchanged during this procedure. Dima calls  hardness of ordering  the number of steps required for him according to the algorithm above to sort the sequence, e.g. the number of times he looks through the coins from the very beginning. For example, for the ordered sequence hardness of ordering equals one. Today Sasha invited Dima and proposed him a game. First he puts  n  coins in a row, all of them are out of circulation. Then Sasha chooses one of the coins out of circulation and replaces it with a coin in circulation for  n  times. During this process Sasha constantly asks Dima what is the hardness of ordering of the sequence.  The task is more complicated because Dima should not touch the coins and he should determine hardness of ordering in his mind. Help Dima with this task.  Input The first line contains single integer  n  ( 1\u2009\u2264\u2009 n \u2009\u2264\u2009300\u2009000 )\u00a0\u2014 number of coins that Sasha puts behind Dima. Second line contains  n  distinct integers  p 1 ,\u2009 p 2 ,\u2009...,\u2009 p n  ( 1\u2009\u2264\u2009 p i \u2009\u2264\u2009 n )\u00a0\u2014 positions that Sasha puts coins in circulation to. At first Sasha replaces coin located at position  p 1 , then coin located at position  p 2  and so on. Coins are numbered from left to right. Output Print  n \u2009+\u20091  numbers  a 0 ,\u2009 a 1 ,\u2009...,\u2009 a n , where  a 0  is a hardness of ordering at the beginning,  a 1  is a hardness of ordering after the first replacement and so on.  Examples Input 4 1 3 4 2 Output 1 2 3 2 1 Input 8 6 8 3 4 7 2 1 5 Output 1 2 2 3 4 3 4 5 1 Note Let's denote as  O  coin out of circulation, and as  X  \u2014 coin is circulation. At the first sample, initially in row there are coins that are not in circulation, so Dima will look through them from left to right and won't make any exchanges. After replacement of the first coin with a coin in circulation, Dima will exchange this coin with next three times and after that he will finally look through the coins and finish the process. XOOO   \u2009\u2192\u2009   OOOX After replacement of the third coin, Dima's actions look this way: XOXO   \u2009\u2192\u2009   OXOX   \u2009\u2192\u2009   OOXX After replacement of the fourth coin, Dima's actions look this way: XOXX   \u2009\u2192\u2009   OXXX Finally, after replacement of the second coin, row becomes consisting of coins that are in circulation and Dima will look through coins from left to right without any exchanges. B. Sorting the Coins time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output Recently, Dima met with Sasha in a philatelic store, and since then they are collecting coins together. Their favorite occupation is to sort collections of coins. Sasha likes having things in order, that is why he wants his coins to be arranged in a row in such a way that firstly come coins out of circulation, and then come coins still in circulation.  For arranging coins Dima uses the following algorithm. One step of his algorithm looks like the following:    He looks through all the coins from left to right;   If he sees that the  i -th coin is still in circulation, and  ( i \u2009+\u20091) -th coin is already out of circulation, he exchanges these two coins and continues watching coins from  ( i \u2009+\u20091) -th.    Dima repeats the procedure above until it happens that no two coins were exchanged during this procedure. Dima calls  hardness of ordering  the number of steps required for him according to the algorithm above to sort the sequence, e.g. the number of times he looks through the coins from the very beginning. For example, for the ordered sequence hardness of ordering equals one. Today Sasha invited Dima and proposed him a game. First he puts  n  coins in a row, all of them are out of circulation. Then Sasha chooses one of the coins out of circulation and replaces it with a coin in circulation for  n  times. During this process Sasha constantly asks Dima what is the hardness of ordering of the sequence.  The task is more complicated because Dima should not touch the coins and he should determine hardness of ordering in his mind. Help Dima with this task.  Input The first line contains single integer  n  ( 1\u2009\u2264\u2009 n \u2009\u2264\u2009300\u2009000 )\u00a0\u2014 number of coins that Sasha puts behind Dima. Second line contains  n  distinct integers  p 1 ,\u2009 p 2 ,\u2009...,\u2009 p n  ( 1\u2009\u2264\u2009 p i \u2009\u2264\u2009 n )\u00a0\u2014 positions that Sasha puts coins in circulation to. At first Sasha replaces coin located at position  p 1 , then coin located at position  p 2  and so on. Coins are numbered from left to right. Output Print  n \u2009+\u20091  numbers  a 0 ,\u2009 a 1 ,\u2009...,\u2009 a n , where  a 0  is a hardness of ordering at the beginning,  a 1  is a hardness of ordering after the first replacement and so on.  Examples Input 4 1 3 4 2 Output 1 2 3 2 1 Input 8 6 8 3 4 7 2 1 5 Output 1 2 2 3 4 3 4 5 1 Note Let's denote as  O  coin out of circulation, and as  X  \u2014 coin is circulation. At the first sample, initially in row there are coins that are not in circulation, so Dima will look through them from left to right and won't make any exchanges. After replacement of the first coin with a coin in circulation, Dima will exchange this coin with next three times and after that he will finally look through the coins and finish the process. XOOO   \u2009\u2192\u2009   OOOX After replacement of the third coin, Dima's actions look this way: XOXO   \u2009\u2192\u2009   OXOX   \u2009\u2192\u2009   OOXX After replacement of the fourth coin, Dima's actions look this way: XOXX   \u2009\u2192\u2009   OXXX Finally, after replacement of the second coin, row becomes consisting of coins that are in circulation and Dima will look through coins from left to right without any exchanges. B. Sorting the Coins time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output Recently, Dima met with Sasha in a philatelic store, and since then they are collecting coins together. Their favorite occupation is to sort collections of coins. Sasha likes having things in order, that is why he wants his coins to be arranged in a row in such a way that firstly come coins out of circulation, and then come coins still in circulation.  For arranging coins Dima uses the following algorithm. One step of his algorithm looks like the following:    He looks through all the coins from left to right;   If he sees that the  i -th coin is still in circulation, and  ( i \u2009+\u20091) -th coin is already out of circulation, he exchanges these two coins and continues watching coins from  ( i \u2009+\u20091) -th.    Dima repeats the procedure above until it happens that no two coins were exchanged during this procedure. Dima calls  hardness of ordering  the number of steps required for him according to the algorithm above to sort the sequence, e.g. the number of times he looks through the coins from the very beginning. For example, for the ordered sequence hardness of ordering equals one. Today Sasha invited Dima and proposed him a game. First he puts  n  coins in a row, all of them are out of circulation. Then Sasha chooses one of the coins out of circulation and replaces it with a coin in circulation for  n  times. During this process Sasha constantly asks Dima what is the hardness of ordering of the sequence.  The task is more complicated because Dima should not touch the coins and he should determine hardness of ordering in his mind. Help Dima with this task.  Input The first line contains single integer  n  ( 1\u2009\u2264\u2009 n \u2009\u2264\u2009300\u2009000 )\u00a0\u2014 number of coins that Sasha puts behind Dima. Second line contains  n  distinct integers  p 1 ,\u2009 p 2 ,\u2009...,\u2009 p n  ( 1\u2009\u2264\u2009 p i \u2009\u2264\u2009 n )\u00a0\u2014 positions that Sasha puts coins in circulation to. At first Sasha replaces coin located at position  p 1 , then coin located at position  p 2  and so on. Coins are numbered from left to right. Output Print  n \u2009+\u20091  numbers  a 0 ,\u2009 a 1 ,\u2009...,\u2009 a n , where  a 0  is a hardness of ordering at the beginning,  a 1  is a hardness of ordering after the first replacement and so on.  Examples Input 4 1 3 4 2 Output 1 2 3 2 1 Input 8 6 8 3 4 7 2 1 5 Output 1 2 2 3 4 3 4 5 1 Note Let's denote as  O  coin out of circulation, and as  X  \u2014 coin is circulation. At the first sample, initially in row there are coins that are not in circulation, so Dima will look through them from left to right and won't make any exchanges. After replacement of the first coin with a coin in circulation, Dima will exchange this coin with next three times and after that he will finally look through the coins and finish the process. XOOO   \u2009\u2192\u2009   OOOX After replacement of the third coin, Dima's actions look this way: XOXO   \u2009\u2192\u2009   OXOX   \u2009\u2192\u2009   OOXX After replacement of the fourth coin, Dima's actions look this way: XOXX   \u2009\u2192\u2009   OXXX Finally, after replacement of the second coin, row becomes consisting of coins that are in circulation and Dima will look through coins from left to right without any exchanges. B. Sorting the Coins time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output Recently, Dima met with Sasha in a philatelic store, and since then they are collecting coins together. Their favorite occupation is to sort collections of coins. Sasha likes having things in order, that is why he wants his coins to be arranged in a row in such a way that firstly come coins out of circulation, and then come coins still in circulation.  For arranging coins Dima uses the following algorithm. One step of his algorithm looks like the following:    He looks through all the coins from left to right;   If he sees that the  i -th coin is still in circulation, and  ( i \u2009+\u20091) -th coin is already out of circulation, he exchanges these two coins and continues watching coins from  ( i \u2009+\u20091) -th.    Dima repeats the procedure above until it happens that no two coins were exchanged during this procedure. Dima calls  hardness of ordering  the number of steps required for him according to the algorithm above to sort the sequence, e.g. the number of times he looks through the coins from the very beginning. For example, for the ordered sequence hardness of ordering equals one. Today Sasha invited Dima and proposed him a game. First he puts  n  coins in a row, all of them are out of circulation. Then Sasha chooses one of the coins out of circulation and replaces it with a coin in circulation for  n  times. During this process Sasha constantly asks Dima what is the hardness of ordering of the sequence.  The task is more complicated because Dima should not touch the coins and he should determine hardness of ordering in his mind. Help Dima with this task.  Input The first line contains single integer  n  ( 1\u2009\u2264\u2009 n \u2009\u2264\u2009300\u2009000 )\u00a0\u2014 number of coins that Sasha puts behind Dima. Second line contains  n  distinct integers  p 1 ,\u2009 p 2 ,\u2009...,\u2009 p n  ( 1\u2009\u2264\u2009 p i \u2009\u2264\u2009 n )\u00a0\u2014 positions that Sasha puts coins in circulation to. At first Sasha replaces coin located at position  p 1 , then coin located at position  p 2  and so on. Coins are numbered from left to right. Output Print  n \u2009+\u20091  numbers  a 0 ,\u2009 a 1 ,\u2009...,\u2009 a n , where  a 0  is a hardness of ordering at the beginning,  a 1  is a hardness of ordering after the first replacement and so on.  Examples Input 4 1 3 4 2 Output 1 2 3 2 1 Input 8 6 8 3 4 7 2 1 5 Output 1 2 2 3 4 3 4 5 1 Note Let's denote as  O  coin out of circulation, and as  X  \u2014 coin is circulation. At the first sample, initially in row there are coins that are not in circulation, so Dima will look through them from left to right and won't make any exchanges. After replacement of the first coin with a coin in circulation, Dima will exchange this coin with next three times and after that he will finally look through the coins and finish the process. XOOO   \u2009\u2192\u2009   OOOX After replacement of the third coin, Dima's actions look this way: XOXO   \u2009\u2192\u2009   OXOX   \u2009\u2192\u2009   OOXX After replacement of the fourth coin, Dima's actions look this way: XOXX   \u2009\u2192\u2009   OXXX Finally, after replacement of the second coin, row becomes consisting of coins that are in circulation and Dima will look through coins from left to right without any exchanges. B. Sorting the Coins time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output Recently, Dima met with Sasha in a philatelic store, and since then they are collecting coins together. Their favorite occupation is to sort collections of coins. Sasha likes having things in order, that is why he wants his coins to be arranged in a row in such a way that firstly come coins out of circulation, and then come coins still in circulation.  For arranging coins Dima uses the following algorithm. One step of his algorithm looks like the following:    He looks through all the coins from left to right;   If he sees that the  i -th coin is still in circulation, and  ( i \u2009+\u20091) -th coin is already out of circulation, he exchanges these two coins and continues watching coins from  ( i \u2009+\u20091) -th.    Dima repeats the procedure above until it happens that no two coins were exchanged during this procedure. Dima calls  hardness of ordering  the number of steps required for him according to the algorithm above to sort the sequence, e.g. the number of times he looks through the coins from the very beginning. For example, for the ordered sequence hardness of ordering equals one. Today Sasha invited Dima and proposed him a game. First he puts  n  coins in a row, all of them are out of circulation. Then Sasha chooses one of the coins out of circulation and replaces it with a coin in circulation for  n  times. During this process Sasha constantly asks Dima what is the hardness of ordering of the sequence.  The task is more complicated because Dima should not touch the coins and he should determine hardness of ordering in his mind. Help Dima with this task.  Input The first line contains single integer  n  ( 1\u2009\u2264\u2009 n \u2009\u2264\u2009300\u2009000 )\u00a0\u2014 number of coins that Sasha puts behind Dima. Second line contains  n  distinct integers  p 1 ,\u2009 p 2 ,\u2009...,\u2009 p n  ( 1\u2009\u2264\u2009 p i \u2009\u2264\u2009 n )\u00a0\u2014 positions that Sasha puts coins in circulation to. At first Sasha replaces coin located at position  p 1 , then coin located at position  p 2  and so on. Coins are numbered from left to right. Output Print  n \u2009+\u20091  numbers  a 0 ,\u2009 a 1 ,\u2009...,\u2009 a n , where  a 0  is a hardness of ordering at the beginning,  a 1  is a hardness of ordering after the first replacement and so on.  Examples Input 4 1 3 4 2 Output 1 2 3 2 1 Input 8 6 8 3 4 7 2 1 5 Output 1 2 2 3 4 3 4 5 1 Note Let's denote as  O  coin out of circulation, and as  X  \u2014 coin is circulation. At the first sample, initially in row there are coins that are not in circulation, so Dima will look through them from left to right and won't make any exchanges. After replacement of the first coin with a coin in circulation, Dima will exchange this coin with next three times and after that he will finally look through the coins and finish the process. XOOO   \u2009\u2192\u2009   OOOX After replacement of the third coin, Dima's actions look this way: XOXO   \u2009\u2192\u2009   OXOX   \u2009\u2192\u2009   OOXX After replacement of the fourth coin, Dima's actions look this way: XOXX   \u2009\u2192\u2009   OXXX Finally, after replacement of the second coin, row becomes consisting of coins that are in circulation and Dima will look through coins from left to right without any exchanges. B. Sorting the Coins time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output Recently, Dima met with Sasha in a philatelic store, and since then they are collecting coins together. Their favorite occupation is to sort collections of coins. Sasha likes having things in order, that is why he wants his coins to be arranged in a row in such a way that firstly come coins out of circulation, and then come coins still in circulation.  For arranging coins Dima uses the following algorithm. One step of his algorithm looks like the following:    He looks through all the coins from left to right;   If he sees that the  i -th coin is still in circulation, and  ( i \u2009+\u20091) -th coin is already out of circulation, he exchanges these two coins and continues watching coins from  ( i \u2009+\u20091) -th.    Dima repeats the procedure above until it happens that no two coins were exchanged during this procedure. Dima calls  hardness of ordering  the number of steps required for him according to the algorithm above to sort the sequence, e.g. the number of times he looks through the coins from the very beginning. For example, for the ordered sequence hardness of ordering equals one. Today Sasha invited Dima and proposed him a game. First he puts  n  coins in a row, all of them are out of circulation. Then Sasha chooses one of the coins out of circulation and replaces it with a coin in circulation for  n  times. During this process Sasha constantly asks Dima what is the hardness of ordering of the sequence.  The task is more complicated because Dima should not touch the coins and he should determine hardness of ordering in his mind. Help Dima with this task.  Input The first line contains single integer  n  ( 1\u2009\u2264\u2009 n \u2009\u2264\u2009300\u2009000 )\u00a0\u2014 number of coins that Sasha puts behind Dima. Second line contains  n  distinct integers  p 1 ,\u2009 p 2 ,\u2009...,\u2009 p n  ( 1\u2009\u2264\u2009 p i \u2009\u2264\u2009 n )\u00a0\u2014 positions that Sasha puts coins in circulation to. At first Sasha replaces coin located at position  p 1 , then coin located at position  p 2  and so on. Coins are numbered from left to right. Output Print  n \u2009+\u20091  numbers  a 0 ,\u2009 a 1 ,\u2009...,\u2009 a n , where  a 0  is a hardness of ordering at the beginning,  a 1  is a hardness of ordering after the first replacement and so on.  Examples Input 4 1 3 4 2 Output 1 2 3 2 1 Input 8 6 8 3 4 7 2 1 5 Output 1 2 2 3 4 3 4 5 1 Note Let's denote as  O  coin out of circulation, and as  X  \u2014 coin is circulation. At the first sample, initially in row there are coins that are not in circulation, so Dima will look through them from left to right and won't make any exchanges. After replacement of the first coin with a coin in circulation, Dima will exchange this coin with next three times and after that he will finally look through the coins and finish the process. XOOO   \u2009\u2192\u2009   OOOX After replacement of the third coin, Dima's actions look this way: XOXO   \u2009\u2192\u2009   OXOX   \u2009\u2192\u2009   OOXX After replacement of the fourth coin, Dima's actions look this way: XOXX   \u2009\u2192\u2009   OXXX Finally, after replacement of the second coin, row becomes consisting of coins that are in circulation and Dima will look through coins from left to right without any exchanges. B. Sorting the Coins time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output Recently, Dima met with Sasha in a philatelic store, and since then they are collecting coins together. Their favorite occupation is to sort collections of coins. Sasha likes having things in order, that is why he wants his coins to be arranged in a row in such a way that firstly come coins out of circulation, and then come coins still in circulation.  For arranging coins Dima uses the following algorithm. One step of his algorithm looks like the following:    He looks through all the coins from left to right;   If he sees that the  i -th coin is still in circulation, and  ( i \u2009+\u20091) -th coin is already out of circulation, he exchanges these two coins and continues watching coins from  ( i \u2009+\u20091) -th.    Dima repeats the procedure above until it happens that no two coins were exchanged during this procedure. Dima calls  hardness of ordering  the number of steps required for him according to the algorithm above to sort the sequence, e.g. the number of times he looks through the coins from the very beginning. For example, for the ordered sequence hardness of ordering equals one. Today Sasha invited Dima and proposed him a game. First he puts  n  coins in a row, all of them are out of circulation. Then Sasha chooses one of the coins out of circulation and replaces it with a coin in circulation for  n  times. During this process Sasha constantly asks Dima what is the hardness of ordering of the sequence.  The task is more complicated because Dima should not touch the coins and he should determine hardness of ordering in his mind. Help Dima with this task.  Input The first line contains single integer  n  ( 1\u2009\u2264\u2009 n \u2009\u2264\u2009300\u2009000 )\u00a0\u2014 number of coins that Sasha puts behind Dima. Second line contains  n  distinct integers  p 1 ,\u2009 p 2 ,\u2009...,\u2009 p n  ( 1\u2009\u2264\u2009 p i \u2009\u2264\u2009 n )\u00a0\u2014 positions that Sasha puts coins in circulation to. At first Sasha replaces coin located at position  p 1 , then coin located at position  p 2  and so on. Coins are numbered from left to right. Output Print  n \u2009+\u20091  numbers  a 0 ,\u2009 a 1 ,\u2009...,\u2009 a n , where  a 0  is a hardness of ordering at the beginning,  a 1  is a hardness of ordering after the first replacement and so on.  Examples Input 4 1 3 4 2 Output 1 2 3 2 1 Input 8 6 8 3 4 7 2 1 5 Output 1 2 2 3 4 3 4 5 1 Note Let's denote as  O  coin out of circulation, and as  X  \u2014 coin is circulation. At the first sample, initially in row there are coins that are not in circulation, so Dima will look through them from left to right and won't make any exchanges. After replacement of the first coin with a coin in circulation, Dima will exchange this coin with next three times and after that he will finally look through the coins and finish the process. XOOO   \u2009\u2192\u2009   OOOX After replacement of the third coin, Dima's actions look this way: XOXO   \u2009\u2192\u2009   OXOX   \u2009\u2192\u2009   OOXX After replacement of the fourth coin, Dima's actions look this way: XOXX   \u2009\u2192\u2009   OXXX Finally, after replacement of the second coin, row becomes consisting of coins that are in circulation and Dima will look through coins from left to right without any exchanges. B. Sorting the Coins time limit per test 1 second memory limit per test 512 megabytes input standard input output standard output Recently, Dima met with Sasha in a philatelic store, and since then they are collecting coins together. Their favorite occupation is to sort collections of coins. Sasha likes having things in order, that is why he wants his coins to be arranged in a row in such a way that firstly come coins out of circulation, and then come coins still in circulation.  For arranging coins Dima uses the following algorithm. One step of his algorithm looks like the following:    He looks through all the coins from left to right;   If he sees that the  i -th coin is still in circulation, and  ( i \u2009+\u20091) -th coin is already out of circulation, he exchanges these two coins and continues watching coins from  ( i \u2009+\u20091) -th.    Dima repeats the procedure above until it happens that no two coins were exchanged during this procedure. Dima calls  hardness of ordering  the number of steps required for him according to the algorithm above to sort the sequence, e.g. the number of times he looks through the coins from the very beginning. For example, for the ordered sequence hardness of ordering equals one. Today Sasha invited Dima and proposed him a game. First he puts  n  coins in a row, all of them are out of circulation. Then Sasha chooses one of the coins out of circulation and replaces it with a coin in circulation for  n  times. During this process Sasha constantly asks Dima what is the hardness of ordering of the sequence.  The task is more complicated because Dima should not touch the coins and he should determine hardness of ordering in his mind. Help Dima with this task.  Input The first line contains single integer  n  ( 1\u2009\u2264\u2009 n \u2009\u2264\u2009300\u2009000 )\u00a0\u2014 number of coins that Sasha puts behind Dima. Second line contains  n  distinct integers  p 1 ,\u2009 p 2 ,\u2009...,\u2009 p n  ( 1\u2009\u2264\u2009 p i \u2009\u2264\u2009 n )\u00a0\u2014 positions that Sasha puts coins in circulation to. At first Sasha replaces coin located at position  p 1 , then coin located at position  p 2  and so on. Coins are numbered from left to right. Output Print  n \u2009+\u20091  numbers  a 0 ,\u2009 a 1 ,\u2009...,\u2009 a n , where  a 0  is a hardness of ordering at the beginning,  a 1  is a hardness of ordering after the first replacement and so on.  Examples Input 4 1 3 4 2 Output 1 2 3 2 1 Input 8 6 8 3 4 7 2 1 5 Output 1 2 2 3 4 3 4 5 1 Note Let's denote as  O  coin out of circulation, and as  X  \u2014 coin is circulation. At the first sample, initially in row there are coins that are not in circulation, so Dima will look through them from left to right and won't make any exchanges. After replacement of the first coin with a coin in circulation, Dima will exchange this coin with next three times and after that he will finally look through the coins and finish the process. XOOO   \u2009\u2192\u2009   OOOX After replacement of the third coin, Dima's actions look this way: XOXO   \u2009\u2192\u2009   OXOX   \u2009\u2192\u2009   OOXX After replacement of the fourth coin, Dima's actions look this way: XOXX   \u2009\u2192\u2009   OXXX Finally, after replacement of the second coin, row becomes consisting of coins that are in circulation and Dima will look through coins from left to right without any exchanges."}