{"title": "Chef and Cycled Cycles | CodeChef", "time-limit": 2000, "memory-limit": -1, "props": {"Problem code": "  CHEFCCYL ", "Input": " \n1", "Output": " \n2", "adjacent cycles": " \n \n \nCycle ", "is": "\nedge ", "Author": " \n berezin ", "Tester": " \n 7", "Date Added": " \n 24", "Time Limit": " \n 2 sec ", "Source Limit": " \n 50000 Bytes ", "Languages": " \n ADA", "now is": "  \n Your IP"}, "statement": "Chef recently learned about finding shortest paths in a bidirectional graph. He has following types of graphs with him and would like to find shortest paths between some given pair of vertices. There are  N  cycles in the graph. Let us enumerate them cycle number  1  to  N . The  i -th cycle contains  A i  nodes enumerated from  1  to  A i . The nodes of a single cycle are connected to each other in cyclic fashion, i.e. the 1st node is connected to 2nd, 2nd to 3rd, and so on till the last node is connected to the 1st node. All of these edges are weighed. The cycles are also connected to each other via an edge in a similar cyclic order. The  i -th cycle is connected to  i % N + 1 -th cycle via an edge. This edge is between some vertex  v 1  of  i -th cycle and vertex  v 2  of  i % N + 1 -th cycle and is a weighted edge. You are given  Q  queries, each containing four integers  v 1 ,  c 1 ,  v 2 ,  c 2 . You have to find the weight of shortest path between the  v 1 -th vertex of  c 1 -th cycle, and  v 2 -th vertex of  c 2 -th cycle. The first line of the input contains an integer  T  denoting the number of test cases. First line of each test case contains two space separated integers  N, Q  denoting the number of cycles in the graph and the number of queries. Next  N  lines contain the description of the cycles. The  i -th line describes  i -th cycle. First it contains an integer  A i  denoting the number nodes in the  i -th cycle followed by  A i  integers denoting the weight of edges of the cycle. First integer denotes the weight of edge from node  1  to node  2 , from  2  to  3  and so on. Last integer denotes the weight of the edge from node  A i  to node  1 .  Next  N  lines describe connections between adjacent cycles. The  i -th line contains three space separated integers  v 1 ,  v 2 ,  w  denoting that there is an edge of weight  w  between the  v 1 -th node of  i -th cycle and  v 2 -th node of the  i % N + 1 -th cycle. Next  Q  lines describe the queries. Each query is given by four space separated integers  v 1 ,  c 1 ,  v 2 ,  c 2 For each query, output a single integer corresponding to the total weight of the shortest path.  Example case 1. Here is the description of the graph.  There are  3  cycles. \n\n \nCycle  1 :  3  nodes. Edges:  (1, 2) = 1 ,  (2, 3) = 2 , (3, 1) = 2.\nCycle  2 :  2  nodes. Edges:  (1, 2) = 1 ,  (2, 1) = 2 .\nCycle  3 :  3  nodes. Edges:  (1, 2) = 1 ,  (2, 3) = 4 , (3, 1) = 1.\n \n Connections between adjacent cycles: \n \nCycle  1  node  2  is connected to Cycle  2  node  1  with edge of weight  2 . \nCycle  2  node  2  is connected to Cycle  3  node  1  with edge of weight  5 .\nCycle  3  node  3  is connected to Cycle  1  node  1  with edge of weight  3 .\n \n Queries Best path from node  2  cycle  1  to node  1  cycle  2  is of the cost 2.  Best path from node  1  cycle  1  to node  1  cycle  2  is: \nedge  (1, 2)  of cycle  1  + edge  (2, 1)  between cycles  1  and  2 . Best path from node  3  cycle  1  to node  3  cycle  3  is:\nedge  (3,1)  of cycle  1  + edge  (3, 1)  between cycles  3  and  1 .    Fetching successful submissions Program should read from  standard input  and write to  standard output .  After you submit a solution you can see your results by clicking on the  [My Submissions]  tab on the problem page. Below are the possible results: \u00a0 CodeChef was created as a platform to help programmers make it big in the world of algorithms,  computer programming  and  programming contests . At CodeChef we work hard to revive the geek in you by hosting a  programming contest  at the start of the month and another smaller programming challenge in the middle of the month. We also aim to have training sessions and discussions related to  algorithms, binary search , technicalities like  array size  and the likes. Apart from providing a platform for  programming competitions , CodeChef also has various algorithm tutorials and forum discussions to help those who are new to the world of  computer programming .  Try your hand at one of our many practice problems and submit your solution in a language of your choice. Our  programming contest  judge accepts solutions in over 35+ programming languages. Preparing for coding contests were never this much fun! Receive points, and move up through the CodeChef ranks. Use our practice section to better prepare yourself for the multiple  programming challenges  that take place through-out the month on CodeChef.   Here is where you can show off your  computer programming  skills. Take part in our 10 day long monthly  coding contest  and the shorter format Cook-off  coding contest . Put yourself up for recognition and win great prizes. Our  programming contests  have prizes worth up to INR 20,000 (for Indian Community), $700 (for Global Community) and lots more CodeChef goodies up for grabs.  "}