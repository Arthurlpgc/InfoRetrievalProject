{"title": "Maximum Subsequence", "time-limit": 1000, "memory-limit": 256, "props": {"Server time": "  Dec"}, "statement": "E. Maximum Subsequence time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output You are given an array  a  consisting of  n  integers, and additionally an integer  m . You have to choose some sequence of indices  b 1 ,\u2009 b 2 ,\u2009...,\u2009 b k  ( 1\u2009\u2264\u2009 b 1 \u2009<\u2009 b 2 \u2009<\u2009...\u2009<\u2009 b k \u2009\u2264\u2009 n ) in such a way that the value of   is maximized. Chosen sequence can be empty. Print the maximum possible value of  . Input The first line contains two integers  n  and  m  ( 1\u2009\u2264\u2009 n \u2009\u2264\u200935 ,  1\u2009\u2264\u2009 m \u2009\u2264\u200910 9 ). The second line contains  n  integers  a 1 ,  a 2 , ...,  a n  ( 1\u2009\u2264\u2009 a i \u2009\u2264\u200910 9 ). Output Print the maximum possible value of  . Examples Input 4 4 5 2 4 1 Output 3 Input 3 20 199 41 299 Output 19 Note In the first example you can choose a sequence  b \u2009=\u2009{1,\u20092} , so the sum   is equal to  7  (and that's  3  after taking it modulo  4 ). In the second example you can choose a sequence  b \u2009=\u2009{3} . E. Maximum Subsequence time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output You are given an array  a  consisting of  n  integers, and additionally an integer  m . You have to choose some sequence of indices  b 1 ,\u2009 b 2 ,\u2009...,\u2009 b k  ( 1\u2009\u2264\u2009 b 1 \u2009<\u2009 b 2 \u2009<\u2009...\u2009<\u2009 b k \u2009\u2264\u2009 n ) in such a way that the value of   is maximized. Chosen sequence can be empty. Print the maximum possible value of  . Input The first line contains two integers  n  and  m  ( 1\u2009\u2264\u2009 n \u2009\u2264\u200935 ,  1\u2009\u2264\u2009 m \u2009\u2264\u200910 9 ). The second line contains  n  integers  a 1 ,  a 2 , ...,  a n  ( 1\u2009\u2264\u2009 a i \u2009\u2264\u200910 9 ). Output Print the maximum possible value of  . Examples Input 4 4 5 2 4 1 Output 3 Input 3 20 199 41 299 Output 19 Note In the first example you can choose a sequence  b \u2009=\u2009{1,\u20092} , so the sum   is equal to  7  (and that's  3  after taking it modulo  4 ). In the second example you can choose a sequence  b \u2009=\u2009{3} . E. Maximum Subsequence time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output You are given an array  a  consisting of  n  integers, and additionally an integer  m . You have to choose some sequence of indices  b 1 ,\u2009 b 2 ,\u2009...,\u2009 b k  ( 1\u2009\u2264\u2009 b 1 \u2009<\u2009 b 2 \u2009<\u2009...\u2009<\u2009 b k \u2009\u2264\u2009 n ) in such a way that the value of   is maximized. Chosen sequence can be empty. Print the maximum possible value of  . Input The first line contains two integers  n  and  m  ( 1\u2009\u2264\u2009 n \u2009\u2264\u200935 ,  1\u2009\u2264\u2009 m \u2009\u2264\u200910 9 ). The second line contains  n  integers  a 1 ,  a 2 , ...,  a n  ( 1\u2009\u2264\u2009 a i \u2009\u2264\u200910 9 ). Output Print the maximum possible value of  . Examples Input 4 4 5 2 4 1 Output 3 Input 3 20 199 41 299 Output 19 Note In the first example you can choose a sequence  b \u2009=\u2009{1,\u20092} , so the sum   is equal to  7  (and that's  3  after taking it modulo  4 ). In the second example you can choose a sequence  b \u2009=\u2009{3} . E. Maximum Subsequence time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output You are given an array  a  consisting of  n  integers, and additionally an integer  m . You have to choose some sequence of indices  b 1 ,\u2009 b 2 ,\u2009...,\u2009 b k  ( 1\u2009\u2264\u2009 b 1 \u2009<\u2009 b 2 \u2009<\u2009...\u2009<\u2009 b k \u2009\u2264\u2009 n ) in such a way that the value of   is maximized. Chosen sequence can be empty. Print the maximum possible value of  . Input The first line contains two integers  n  and  m  ( 1\u2009\u2264\u2009 n \u2009\u2264\u200935 ,  1\u2009\u2264\u2009 m \u2009\u2264\u200910 9 ). The second line contains  n  integers  a 1 ,  a 2 , ...,  a n  ( 1\u2009\u2264\u2009 a i \u2009\u2264\u200910 9 ). Output Print the maximum possible value of  . Examples Input 4 4 5 2 4 1 Output 3 Input 3 20 199 41 299 Output 19 Note In the first example you can choose a sequence  b \u2009=\u2009{1,\u20092} , so the sum   is equal to  7  (and that's  3  after taking it modulo  4 ). In the second example you can choose a sequence  b \u2009=\u2009{3} . E. Maximum Subsequence time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output You are given an array  a  consisting of  n  integers, and additionally an integer  m . You have to choose some sequence of indices  b 1 ,\u2009 b 2 ,\u2009...,\u2009 b k  ( 1\u2009\u2264\u2009 b 1 \u2009<\u2009 b 2 \u2009<\u2009...\u2009<\u2009 b k \u2009\u2264\u2009 n ) in such a way that the value of   is maximized. Chosen sequence can be empty. Print the maximum possible value of  . Input The first line contains two integers  n  and  m  ( 1\u2009\u2264\u2009 n \u2009\u2264\u200935 ,  1\u2009\u2264\u2009 m \u2009\u2264\u200910 9 ). The second line contains  n  integers  a 1 ,  a 2 , ...,  a n  ( 1\u2009\u2264\u2009 a i \u2009\u2264\u200910 9 ). Output Print the maximum possible value of  . Examples Input 4 4 5 2 4 1 Output 3 Input 3 20 199 41 299 Output 19 Note In the first example you can choose a sequence  b \u2009=\u2009{1,\u20092} , so the sum   is equal to  7  (and that's  3  after taking it modulo  4 ). In the second example you can choose a sequence  b \u2009=\u2009{3} . E. Maximum Subsequence time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output You are given an array  a  consisting of  n  integers, and additionally an integer  m . You have to choose some sequence of indices  b 1 ,\u2009 b 2 ,\u2009...,\u2009 b k  ( 1\u2009\u2264\u2009 b 1 \u2009<\u2009 b 2 \u2009<\u2009...\u2009<\u2009 b k \u2009\u2264\u2009 n ) in such a way that the value of   is maximized. Chosen sequence can be empty. Print the maximum possible value of  . Input The first line contains two integers  n  and  m  ( 1\u2009\u2264\u2009 n \u2009\u2264\u200935 ,  1\u2009\u2264\u2009 m \u2009\u2264\u200910 9 ). The second line contains  n  integers  a 1 ,  a 2 , ...,  a n  ( 1\u2009\u2264\u2009 a i \u2009\u2264\u200910 9 ). Output Print the maximum possible value of  . Examples Input 4 4 5 2 4 1 Output 3 Input 3 20 199 41 299 Output 19 Note In the first example you can choose a sequence  b \u2009=\u2009{1,\u20092} , so the sum   is equal to  7  (and that's  3  after taking it modulo  4 ). In the second example you can choose a sequence  b \u2009=\u2009{3} . E. Maximum Subsequence time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output You are given an array  a  consisting of  n  integers, and additionally an integer  m . You have to choose some sequence of indices  b 1 ,\u2009 b 2 ,\u2009...,\u2009 b k  ( 1\u2009\u2264\u2009 b 1 \u2009<\u2009 b 2 \u2009<\u2009...\u2009<\u2009 b k \u2009\u2264\u2009 n ) in such a way that the value of   is maximized. Chosen sequence can be empty. Print the maximum possible value of  . Input The first line contains two integers  n  and  m  ( 1\u2009\u2264\u2009 n \u2009\u2264\u200935 ,  1\u2009\u2264\u2009 m \u2009\u2264\u200910 9 ). The second line contains  n  integers  a 1 ,  a 2 , ...,  a n  ( 1\u2009\u2264\u2009 a i \u2009\u2264\u200910 9 ). Output Print the maximum possible value of  . Examples Input 4 4 5 2 4 1 Output 3 Input 3 20 199 41 299 Output 19 Note In the first example you can choose a sequence  b \u2009=\u2009{1,\u20092} , so the sum   is equal to  7  (and that's  3  after taking it modulo  4 ). In the second example you can choose a sequence  b \u2009=\u2009{3} . E. Maximum Subsequence time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output You are given an array  a  consisting of  n  integers, and additionally an integer  m . You have to choose some sequence of indices  b 1 ,\u2009 b 2 ,\u2009...,\u2009 b k  ( 1\u2009\u2264\u2009 b 1 \u2009<\u2009 b 2 \u2009<\u2009...\u2009<\u2009 b k \u2009\u2264\u2009 n ) in such a way that the value of   is maximized. Chosen sequence can be empty. Print the maximum possible value of  . Input The first line contains two integers  n  and  m  ( 1\u2009\u2264\u2009 n \u2009\u2264\u200935 ,  1\u2009\u2264\u2009 m \u2009\u2264\u200910 9 ). The second line contains  n  integers  a 1 ,  a 2 , ...,  a n  ( 1\u2009\u2264\u2009 a i \u2009\u2264\u200910 9 ). Output Print the maximum possible value of  . Examples Input 4 4 5 2 4 1 Output 3 Input 3 20 199 41 299 Output 19 Note In the first example you can choose a sequence  b \u2009=\u2009{1,\u20092} , so the sum   is equal to  7  (and that's  3  after taking it modulo  4 ). In the second example you can choose a sequence  b \u2009=\u2009{3} ."}